C  XARRAY.F - CREATE COMPOSITIONAL MODEL GRID-ELEMENT ARRAYS
C             AND FAULT ARRAYS

C  ROUTINES IN THIS MODULE:

C  SUBROUTINE XARRAY (KERR)

C  CODE HISTORY:

C  RICK DEAN     03/13/2001   INITIAL CODE
C  RICK DEAN     01/08/2002   ADDED FAULT ARRAYS
C  S. G. THOMAS  09/01/2007   ADDED ARRAYS FOR DIFF-DISP, THERMAL, 
C                             HYSTERESIS
C  XIANHUI KONG  06/04/2014   ADDED ARRAYS FOR CO2 CCS MODEL
C  GURPREET SINGH 09/15/2015  AQUEOUS COMPONENTS
C*********************************************************************
      SUBROUTINE XARRAY (KERR)
C*********************************************************************

C  Creates compositional model grid-element arrays

C  KERR = ERROR NUMBER (OUTPUT, INTEGER)

C  NOTE: See xarydat.h for array descriptions

C*********************************************************************
      IMPLICIT NONE
$POWER        INCLUDE 'msjunk.h'
      INCLUDE 'blkary.h'
      INCLUDE 'control.h'
      INCLUDE 'layout.h'
      INCLUDE 'xarydat.h'
      INCLUDE 'xmodel.h'
      INTEGER KERR
      INTEGER I,J,K,I1,I2
      CHARACTER*40 CNAM,PNAM,ANAM

      INTEGER IARG(3)
      DATA IARG /3*0/
      EXTERNAL SETARYR8

      IF (LEVELE.AND.BUGKEY(1)) WRITE (NFBUG,*)'PROC',MYPRC,
     &                         ' ENTERING SUBROUTINE XARRAY'
      KERR=0

C-------fluid pressures and concentrations at new time
      CALL ALCGEA ('PRES ',2,0,N_PRES,KERR)
      IF (KERR.GT.0) GO TO 99
      CALL ALCGEA ('CONC ',2,NC,N_CONC,KERR)
      IF (KERR.GT.0) GO TO 99
      CALL ALCGEA ('CONCAQ ',2,NAQ,N_CONCAQ,KERR)
      IF (KERR.GT.0) GO TO 99
      CALL ALCGEA ('PC ',2,NPH,N_PC,KERR)
      IF (KERR.GT.0) GO TO 99

C------and unpack the array so they will be available individually as well
      CALL ALCGA_UNPACK (N_CONC,N_CONCARR,KERR)
      IF(KERR.GT.0) GO TO 99
      CALL ALCGA_UNPACK (N_CONCAQ,N_CONCAQARR,KERR)
      IF(KERR.GT.0) GO TO 99
      CALL ALCGA_UNPACK (N_PC,N_PCARR,KERR)
      IF(KERR.GT.0) GO TO 99

C------and change the names so the species will be known by individual names  
      DO I=1,NC
         CALL CHG_ANAME(N_CONCARR(I),CMPNAM(I))
      ENDDO
      IF(KERR.GT.0) GO TO 99
      DO I=1,NAQ
         CALL CHG_ANAME(N_CONCAQARR(I),CMPAQNAM(I))
      ENDDO
      IF(KERR.GT.0) GO TO 99

      IF(NPH == 3) THEN
         IF(IREFPRES == 1) THEN
            CALL CHG_ANAME(N_PCARR(1),'PCWW ')
            CALL CHG_ANAME(N_PCARR(2),'PCOW ')
            CALL CHG_ANAME(N_PCARR(3),'PCGW ')
         ELSEIF(IREFPRES == 2) THEN
            CALL CHG_ANAME(N_PCARR(1),'PCWO ')
            CALL CHG_ANAME(N_PCARR(2),'PCOO ')
            CALL CHG_ANAME(N_PCARR(3),'PCGO ')
         ELSE
            CALL CHG_ANAME(N_PCARR(1),'PCWG ')
            CALL CHG_ANAME(N_PCARR(2),'PCOG ')
            CALL CHG_ANAME(N_PCARR(3),'PCGG ')
         ENDIF
      ELSEIF(NPH == 2) THEN
         IF(IREFPRES == 1) THEN
            CALL CHG_ANAME(N_PCARR(1),'PCWW ')
            CALL CHG_ANAME(N_PCARR(2),'PCOW ')
         ELSEIF(IREFPRES == 2) THEN
            CALL CHG_ANAME(N_PCARR(1),'PCWO ')
            CALL CHG_ANAME(N_PCARR(2),'PCOO ')
         ENDIF
      ELSE
         CALL CHG_ANAME(N_PCARR(1),'PCWW ')
      ENDIF

C-------variables for stability control (single precision)
      IF(NPH == 3) THEN
         CALL ALCGEA ('DMOB ',1,4,N_DMOB,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('DPC ',1,2,N_DPC,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('DCFL ',1,6,N_DCFL,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('ICFL ',3,0,N_CFL,KERR)
         IF (KERR.GT.0) GO TO 99
      ELSE
         CALL ALCGEA ('DMOB ',1,2,N_DMOB,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('DPC  ',1,0,N_DPC,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('DCFL ',1,2,N_DCFL,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('ICFL ',3,0,N_CFL,KERR)
         IF (KERR.GT.0) GO TO 99
      ENDIF

C-------pressure and concentrations at old time
      CALL ALCGEA ('PRESN ',2,0,N_PRESN,KERR)
      IF (KERR.GT.0) GO TO 99
      CALL ALCGEA ('CONCN ',2,NC,N_CONCN,KERR)
      IF (KERR.GT.0) GO TO 99
      CALL ALCGEA ('CONCAQN ',2,NAQ,N_CONCAQN,KERR)
      IF (KERR.GT.0) GO TO 99
      IF(NPH > 2) THEN
         CALL ALCGEA ('FLKN ',2,NHC,N_FLKN,KERR)
      ELSE
         N_FLKN = N_PRES
      ENDIF
      IF (KERR.GT.0) GO TO 99
      CALL ALCGEA ('FLDPNTN ',3,0,N_FLDPNTN,KERR)
      IF (KERR.GT.0) GO TO 99
      CALL ALCGEA ('SATN ',2,NPH,N_SATN,KERR)
      IF (KERR.GT.0) GO TO 99
      IF(HYSTERESIS) THEN
         CALL ALCGEA ('SWMIN ',2,0,N_SWMIN,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('SGATRP ',2,0,N_SGT,KERR)
         IF (KERR.GT.0) GO TO 99
Cxianhui change to SGT
         CALL ALCGEA ('SGT ',2,0,N_SGT,KERR)
         IF (KERR.GT.0) GO TO 99
      ENDIF


Cxianhui IFT, SAT RESIDUAL ARRAYS
      IF(IFTSATRES) THEN
         CALL ALCGEA ('SGR ',2,0,N_SGR,KERR)
         CALL ALCGEA ('SWR ',2,0,N_SWR,KERR)
         CALL ALCGEA ('XTENS ',2,0,N_XTENS,KERR)
         IF (KERR.GT.0) GO TO 99
      ENDIF
      IF(FOAMMOD) THEN
         CALL ALCGEA ('TRACER ',2,0,N_TRACER,KERR)
         CALL ALCGEA ('TRACERN ',2,0,N_TRACERN,KERR)
         IF (KERR.GT.0) GO TO 99
      ENDIF
CKong

C-------saturations
C       also used for water saturation input
      CALL ALCGEA ('SWINIT ',2,NPH,N_SAT,KERR)
      IF (KERR.GT.0) GO TO 99

C------and unpack the array so they will be available individually as well
      CALL ALCGA_UNPACK (N_SAT,N_SATARR,KERR)
      IF(KERR.GT.0) GO TO 99

      IF(NPH == 3) THEN
         CALL CHG_ANAME(N_SATARR(1),'SWAT ')
         CALL CHG_ANAME(N_SATARR(2),'SOIL ')
         CALL CHG_ANAME(N_SATARR(3),'SGAS ')
      ELSEIF(NPH == 2) THEN
         CALL CHG_ANAME(N_SATARR(1),'SWAT ')
         CALL CHG_ANAME(N_SATARR(2),'SOIL ')
      ELSEIF(NPH == 1) THEN
         CALL CHG_ANAME(N_SATARR(1),'SWAT ')
      ENDIF

C-------phase mobility
      CALL ALCGEA ('MOB ',2,NPH,N_MOB,KERR)
      IF (KERR.GT.0) GO TO 99

C-------phase viscosity
      CALL ALCGEA ('XVISC ',2,NPH,N_XVISC,KERR)
      IF (KERR.GT.0) GO TO 99

C-------product of phase density and mole fraction
      CALL ALCGEA ('PMD ',2,NCINPH,N_PMD,KERR)
      IF (KERR.GT.0) GO TO 99 

C-------phase molar density
      CALL ALCGEA ('PMDEN ',2,NPH,N_PMDEN,KERR)
      IF (KERR.GT.0) GO TO 99

C-------old time step phase molar density
      CALL ALCGEA ('PMDENN ',2,NPH,N_PMDENN,KERR)
      IF (KERR.GT.0) GO TO 99

C------and unpack the array so they will be available individually as well
      CALL ALCGA_UNPACK (N_PMD,N_PMDARR,KERR)
      IF(KERR.GT.0) GO TO 99

      DO I=1,NPH
         DO J=1,NC
            K=ICINPH(J,I)
            CNAM=''
            PNAM=''
            ANAM=''
            IF(K.GT.0) THEN
               IF(K.EQ.1) THEN
                  CALL CHG_ANAME(N_PMDARR(K),'WATER_IN_WATER ') 
               ELSE
                  CNAM=CMPNAM(J)
                  PNAM=PHNAM(I)
                  I1=INDEX(CMPNAM(J),' ')-1
                  I2=INDEX(PHNAM(I),' ')-1
                  ANAM=CNAM(1:I1)//'_IN_'//PNAM(1:I2)//' '
                  CALL CHG_ANAME(N_PMDARR(K),ANAM)
               ENDIF
            ENDIF
         ENDDO
      ENDDO

C-------mole fraction
      CALL ALCGEA ('KSI ',2,NCINPH,N_KSI,KERR)
      IF (KERR.GT.0) GO TO 99 

C-------old time step mole fraction
      CALL ALCGEA ('KSIN ',2,NCINPH,N_KSIN,KERR)
      IF (KERR.GT.0) GO TO 99 

C------and unpack the array so they will be available individually as well
      CALL ALCGA_UNPACK (N_KSI,N_KSIARR,KERR)
      IF(KERR.GT.0) GO TO 99

      DO I=1,NPH
         DO J=1,NC
            K=ICINPH(J,I)
            CNAM=''
            PNAM=''
            ANAM=''
            IF(K.GT.0) THEN
               IF(K.EQ.1) THEN
                  CALL CHG_ANAME(N_KSIARR(K),'KSI_WATER_WATER ') 
               ELSE
                  CNAM=CMPNAM(J)
                  PNAM=PHNAM(I)
                  I1=INDEX(CMPNAM(J),' ')-1
                  I2=INDEX(PHNAM(I),' ')-1
                  ANAM='KSI_'//CNAM(1:I1)//'_'//PNAM(1:I2)//' '
                  CALL CHG_ANAME(N_KSIARR(K),ANAM)
               ENDIF
            ENDIF
         ENDDO
      ENDDO

C-------diffusion-dispersion tensor
      CALL ALCGEA ('XDMAT ',2,NCINPH*6,N_XDMAT,KERR)
      IF (KERR.GT.0) GO TO 99

C-------phase Darcy velocities
      CALL ALCGEA ('XVEL ',2,NPH*3,N_XVEL,KERR)
      IF (KERR.GT.0) GO TO 99

C-------old time phase Darcy velocities
      CALL ALCGEA ('XVELN ',2,NPH*3,N_XVELN,KERR)
      IF (KERR.GT.0) GO TO 99

C-------reservoir heat capacity 
      CALL ALCGEA ('XTCP ',2,0,N_XTCP,KERR)
      IF (KERR.GT.0) GO TO 99

C-------old time reservoir heat capacity 
      CALL ALCGEA ('XTCPN ',2,0,N_XTCPN,KERR)
      IF (KERR.GT.0) GO TO 99

C-------reservoir heat content
      CALL ALCGEA ('XHEAT ',2,0,N_XHEAT,KERR)
      IF (KERR.GT.0) GO TO 99

C-------reservoir rock constant volume heat capacity
      CALL ALCGEA ('XCVS ',2,0,N_XCVS,KERR)
      IF (KERR.GT.0) GO TO 99

C-------phase constant volume heat capacity
      CALL ALCGEA ('XCVL ',2,NPH,N_XCVL,KERR)
      IF (KERR.GT.0) GO TO 99

C-------phase constant pressure heat capacity
      CALL ALCGEA ('XCPL ',2,NPH,N_XCPL,KERR)
      IF (KERR.GT.0) GO TO 99

C-------reservoir rock density
      CALL ALCGEA ('XRHOS ',2,0,N_XRHOS,KERR)
      IF (KERR.GT.0) GO TO 99

C-------reservoir thermal conductivity
      CALL ALCGEA ('XTCOND ',2,3,N_XTCOND,KERR)
      IF (KERR.GT.0) GO TO 99

C-------phase heat capacity slopes
      CALL ALCGEA ('XSLP ',2,NPH*3,N_XSLP,KERR)
      IF (KERR.GT.0) GO TO 99

C-------thermal conduction stiffness matrix
      CALL ALCGEA ('XTCOF ',1,$NUMCOF,N_XTCOF,KERR)
      IF (KERR.GT.0) GO TO 99

C-------thermal conduction right hand side
      CALL ALCGEA ('XTRES ',2,0,N_XTRESID,KERR)
      IF (KERR.GT.0) GO TO 99

C-------thermal conduction solution
      CALL ALCGEA ('XTDUNK ',2,0,N_XTDUNK,KERR)
      IF (KERR.GT.0) GO TO 99

C-------product of phase density, mole fraction, and mobilitiy
      CALL ALCGEA ('MOBPROD ',2,NCINPH,N_MOBPROD,KERR)
      IF (KERR.GT.0) GO TO 99

C-------pore volume
      CALL ALCGEA ('PV ',2,0,N_PV,KERR)
      IF (KERR.GT.0) GO TO 99

C-------rock compressibility
C       real*4
      CALL ALCGEA ('CR ',1,0,N_CR,KERR)
      IF (KERR.GT.0) GO TO 99

C-------reference pressure FOR POROSITY
      CALL ALCGEA ('PORPRES ',2,0,N_REFPRES,KERR)
      IF (KERR.GT.0) GO TO 99

C-------pore volume at old time
      CALL ALCGEA ('PVN ',2,0,N_PVN,KERR)
      IF (KERR.GT.0) GO TO 99

C-------sum of saturations + fugacity contribution
      CALL ALCGEA ('ERRSAT ',2,0,N_ERRSAT,KERR)
      IF (KERR.GT.0) GO TO 99

C-------sum of saturation pressure derivatives
      CALL ALCGEA ('DSTDP ',2,0,N_DSTDP,KERR)
      IF (KERR.GT.0) GO TO 99

C-------sum of saturation conc derivatives
      CALL ALCGEA ('DSTDN ',2,NC,N_DSTDN,KERR)
      IF (KERR.GT.0) GO TO 99

C-------temperature
      CALL ALCGEA ('TEMPR ',2,0,N_TEMPR,KERR)
      IF (KERR.GT.0) GO TO 99

C-------pointer for fluid classification
      CALL ALCGEA ('FLDPNT ',3,0,N_FLDPNT,KERR)
      IF (KERR.GT.0) GO TO 99

C-------table assignment for grid blocks
      CALL ALCGEA ('CMPTAB ',3,0,N_CTAB,KERR)
      IF (KERR.GT.0) GO TO 99

C-------phase gravity head at start of timestep
      CALL ALCGEA ('MDENN ',2,NPH,N_MDENN,KERR)
      IF (KERR.GT.0) GO TO 99

C-------off-diagonal flow coefficient
C       assumes three flow directions
      CALL ALCGEA ('TFLOW ',2,3*NC,N_TFLOW,KERR)
      IF (KERR.GT.0) GO TO 99

C-------diagonal flow coefficient
      CALL ALCGEA ('DFLOW ',2,NC,N_DFLOW,KERR)
      IF (KERR.GT.0) GO TO 99

C-------residual for mass conservation
      CALL ALCGEA ('RESID ',2,NC,N_RESID,KERR)
      IF (KERR.GT.0) GO TO 99

C-------concentration changes
      CALL ALCGEA ('DELC ',2,NC,N_DELC,KERR)
      IF (KERR.GT.0) GO TO 99

C-------storage used inside flash routines
C       Set default values to pressure point so pointers not null
      N_FLZ = N_PRES
      N_FLV = N_PRES
      N_FLDERIV = N_PRES
      N_FLRR = N_PRES
      N_FLK = N_PRES
      N_FLFUG = N_PRES
      N_FLOLDZP = N_PRES
      N_TENS = N_PRES
      IF(NPH > 2) THEN
         CALL ALCGEA ('TENS ',2,0,N_TENS,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('FLZ ',2,3,N_FLZ,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('FLV ',2,2,N_FLV,KERR)
         IF (KERR.GT.0) GO TO 99
         I = NHC**2 + ((NHC+1)*NHC)/2 + 5*NHC + 1
         CALL ALCGEA ('FLDERIV ',2,I,N_FLDERIV,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('FLRR ',2,NHC+1,N_FLRR,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('FLK ',2,NHC,N_FLK,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('FLFUG ',2,NHC,N_FLFUG,KERR)
         IF (KERR.GT.0) GO TO 99
         CALL ALCGEA ('FLOLDZP ',2,NHC+1,N_FLOLDZP,KERR)
         IF (KERR.GT.0) GO TO 99
C gp,bag8,gus ---- Initialize FLK to 1

        IARG(1)=2
        IARG(2)=N_FLK
        R8UTIL=1.D0
        IARG(3)=N_R8U
        CALL CALLWORK (SETARYR8,IARG)
      ELSEIF(NPH > 1) THEN
         CALL ALCGEA ('FLZ ',2,1,N_FLZ,KERR)
         IF (KERR.GT.0) GO TO 99
         I = NHC + 1
         CALL ALCGEA ('FLDERIV ',2,I,N_FLDERIV,KERR)
         IF (KERR.GT.0) GO TO 99
      ENDIF

C-------the framework also requires pointers to the next 3 arrays
      CALL ALCGEA ('DELUNK ',2,0,N_XDUNK,KERR)
      N_DUNKV(MODACT)=N_XDUNK
      IF (KERR.GT.0) GO TO 99
      CALL ALCGEA ('COEFS ',1,$NUMCOF,N_XCOF,KERR)
      N_COFV(MODACT)=N_XCOF
      IF (KERR.GT.0) GO TO 99
      CALL ALCGEA ('RESIDS ',2,0,N_XRESID,KERR)
      N_RESIDV(MODACT)=N_XRESID


! bag8 - adapt grids
      IF ((ADAPT_MODE.EQ.2).OR.(ADAPT_MODE.EQ.3)) THEN
        IF (MYPRC.EQ.0) WRITE(*,'(A,I1,A)')' In XARRAY, ADAPT_MODE=',
     &    ADAPT_MODE,' : allocating extra arrays!'
        CALL ALCGEA ('PRESFINE ',2,0,N_PRESFINE,KERR)
        IF (KERR.GT.0) GO TO 99
        CALL ALCGEA ('CONCFINE ',2,NC,N_CONCFINE,KERR)
        IF (KERR.GT.0) GO TO 99
        CALL ALCGEA ('CONCAQFINE ',2,NAQ,N_CONCAQFINE,KERR)
        IF (KERR.GT.0) GO TO 99
        CALL ALCGEA ('FLKFINE ',2,NHC,N_FLKFINE,KERR)
        IF (KERR.GT.0) GO TO 99
        CALL ALCGEA ('SATFINE ',2,NPH,N_SATFINE,KERR)
        IF (KERR.GT.0) GO TO 99
        CALL ALCGEA ('PVFINE ',2,0,N_PVFINE,KERR)
        IF (KERR.GT.0) GO TO 99
!        CALL ALCGEA ('FLDPNTFINE ',3,0,N_FLDPNTFINE,KERR)
!        IF (KERR.GT.0) GO TO 99
      ENDIF

   99 IF (KERR.GT.0) CALL KILL_IPARS('Errors in XARRAY')
      RETURN
      END

