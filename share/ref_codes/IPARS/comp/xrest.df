C  XREST.F - COMPOSITIONAL MODEL RESTART AND TERMINATION ROUTINES

C  ROUTINES IN THIS MODULE:

C  SUBROUTINE XRESTO (NERR)
C  SUBROUTINE XRESTI (NERR)

C  CODE HISTORY:

C  RICK DEAN         12/8/01   INITIAL CODE FROM IREST.F AND MODIFIED
C  SUNIL G. THOMAS   09/1/07   THERMAL, DIFF-DISP AND CO2 APPS

C*********************************************************************
      SUBROUTINE XRESTO (NERR)
C*********************************************************************

C  Directs output of compositional model specific restart data

C  NERR = ERROR KEY STEPPED BY ONE FOR EACH ERROR
C         (INPUT AND OUTPUT, INTEGER )

C*********************************************************************
      INCLUDE 'control.h'
      INCLUDE 'wells.h'
      INCLUDE 'restc.h'
      INCLUDE 'xwells.h'
      INCLUDE 'xmodel.h'
      INCLUDE 'xarydat.h'
      INCLUDE 'xbaldat.h'

C  OUTPUT SCALAR DATA

      IF (MYPRC == 0) THEN
         L=5
         IF (FORMOUT) THEN
            WRITE (NFROUT,1) L,MODACT,L,L,L,L
    1       FORMAT(6I9)   
    2       FORMAT(8G23.16)
            WRITE (NFROUT,2) (WELBHP(N),WELDEN(N),TINJ(N),
     &                       (WTOT_PH(I,N),I=1,2*NPH),
     &                       (WTOT_COMP(I,N),I=1,2*NC),N=1,NUMWEL)
            WRITE (NFROUT,2) DTSTAB,STEPMULT,(IFIP(N),N=1,NPH)
         ELSE
            WRITE (NFROUT) L,MODACT,L,L,L,L
            WRITE (NFROUT) (WELBHP(N),WELDEN(N),TINJ(N),
     &                     (WTOT_PH(I,N),I=1,2*NPH),
     &                     (WTOT_COMP(I,N),I=1,2*NC),N=1,NUMWEL)
            WRITE (NFROUT) DTSTAB,STEPMULT,(IFIP(N),N=1,NPH)
         ENDIF
      ENDIF

C     OUTPUT ARRAYS

      CALL RGEAOUT(N_PRES,1,NERR)
      CALL RGEAOUT(N_TEMPR,1,NERR)
      CALL RGEAOUT(N_PV,1,NERR)
      DO I=1,NCINPH
         CALL RGEAOUT(N_PMD,I,NERR)
      ENDDO
      DO I=1,NCINPH
         CALL RGEAOUT(N_KSI,I,NERR)
      ENDDO
      DO I=1,NPH
         CALL RGEAOUT(N_SAT,I,NERR)
      ENDDO
      DO I=1,NPH
         CALL RGEAOUT(N_MDENN,I,NERR)
      ENDDO
      DO I=1,NPH
         CALL RGEAOUT(N_PC,I,NERR)
      ENDDO
      DO I=1,NPH
         CALL RGEAOUT(N_MOB,I,NERR)
      ENDDO
      DO I = 1,NC
         CALL RGEAOUT(N_CONC,I,NERR)
      END DO
      DO I = 1,NAQ
         CALL RGEAOUT(N_CONCAQ,I,NERR)
      ENDDO
      DO I = 1,NHC
         CALL RGEAOUT(N_FLK,I,NERR)
      END DO
      DO I = 1,3
         CALL RGEAOUT(N_FLZ,I,NERR)
      END DO
      DO I = 1,2
         CALL RGEAOUT(N_FLV,I,NERR)
      END DO
      CALL RGEAOUT(N_FLDPNT,1,NERR)
      IF(LRESTART) THEN
         DO I = 1,NHC**2 + ((NHC+1)*NHC)/2 + 5*NHC + 1
            CALL RGEAOUT(N_FLDERIV,I,NERR)
         END DO
      ENDIF
      CALL RGEAOUT(N_CFL,1,NERR)

      END
C*********************************************************************
      SUBROUTINE XRESTI(IU,NERR)
C*********************************************************************

C  Directs intput of compositional model specific restart data

C  IU = RESTART UTILITY INTEGERS (6) (INPUT, INTEGER)
C       IU(1) IS RESERVED FOR RECORD SET ID

C  NERR = ERROR KEY STEPPED BY ONE FOR EACH ERROR
C         (INPUT AND OUTPUT, INTEGER )

C  Note:  All grid-element arrays including those output in HRESTO are
C         automatically input by the framework.

C*********************************************************************
      INCLUDE 'control.h'
      INCLUDE 'wells.h'
      INCLUDE 'restc.h'
      INCLUDE 'xwells.h'
      INCLUDE 'xmodel.h'
      INCLUDE 'xbaldat.h'

      INTEGER IU(6)
      INTEGER KSEND
      PARAMETER(KSEND=2)
      REAL*8 WSUM(KSEND,$MXWELL)

C  INPUT SCALAR DATA

      IF (MYPRC == 0) THEN
          
         IF (FORMIN) THEN
    1       FORMAT(8G23.16)
            READ (NFRIN,1) (WELBHP(N),WELDEN(N),TINJ(N),
     &                     (WTOT_PH(I,N),I=1,2*NPH),
     &                     (WTOT_COMP(I,N),I=1,2*NC),N=1,NUMWEL)
            READ (NFRIN,1) DTSTAB,STEPMULT,(IFIP(N),N=1,NPH)
         ELSE
            READ (NFRIN) (WELBHP(N),WELDEN(N),TINJ(N),
     &                   (WTOT_PH(I,N),I=1,2*NPH),
     &                   (WTOT_COMP(I,N),I=1,2*NC),N=1,NUMWEL)
            READ (NFRIN) DTSTAB,STEPMULT,(IFIP(N),N=1,NPH)
         ENDIF

      ENDIF
$MANY      CALL SPREAD8(1,STEPMULT)
$MANY      IF(MYPRC == 0) THEN
$MANY         DO N = 1,NUMWEL
$MANY            IF(NWELPRC(N) == 0 .OR. MODWEL(N) /= MODACT) CYCLE
$MANY            K = 0
$MANY            K = K + 1
$MANY            WSUM(K,N) = WELBHP(N)
$MANY            K = K + 1
$MANY            WSUM(K,N) = WELDEN(N)
$MANY         END DO
$MANY      ENDIF
$MANY      CALL WELPUT(KSEND,WSUM)
$MANY      IF(MYPRC > 0) THEN
$MANY         DO N = 1,NUMWEL
$MANY            IF(NWELPRC(N) == 0 .OR. MODWEL(N) /= MODACT) CYCLE
$MANY            K = 0
$MANY            K = K + 1
$MANY            WELBHP(N) = WSUM(K,N)
$MANY            K = K + 1
$MANY            WELDEN(N) = WSUM(K,N)
$MANY         END DO  
$MANY      ENDIF

C     RETURN REQUIRED FOR IPARS PREPROCESSOR ON LINUX
      RETURN
      END
