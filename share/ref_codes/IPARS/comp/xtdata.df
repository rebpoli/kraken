C  XTDATA.F - INPUT COMPOSITIONAL MODEL TRANSIENT INPUT DATA

C  ROUTINES IN THIS MODULE:

C  SUBROUTINE XTDATA  (NERR)

C  CODE HISTORY:        

C  THE IPARS TEAM    04/02/1997    FRAMEWORK
C  RICK DEAN         02/28/2001    COPIED ISTEP FROM BLACKI
C  SUNIL G. THOMAS   09/01/2007    THERMAL, DIFF-DISP AND CO2 APPS

C*********************************************************************
      SUBROUTINE XTDATA (NERR)
C*********************************************************************

C  Inputs transient scalar data for the compositional model.  Grid-element
C  arrays CAN NOT be referenced in this routine.

C  NERR = Error number steped by 1 on error (input & output, INTEGER*4)

C*********************************************************************
      USE xgendat
      IMPLICIT NONE
$POWER      INCLUDE 'msjunk.h' 
      INCLUDE 'control.h'
      INCLUDE 'xmodel.h'
      INCLUDE 'xbaldat.h'
      INCLUDE 'xthermal.h'
      INCLUDE 'xparam.h'
      INCLUDE 'xarydat.h'
      INCLUDE 'blkary.h'
      REAL*8 X
      INTEGER I,JWSET(2),MARG(3),ISET(4),NDUM,NDUM1,NERR
      SAVE JWSET,MARG
      LOGICAL ONCEONLY
      DATA ONCEONLY /.TRUE./
      EXTERNAL SETARYI4P,SETARYR8N,XWSET

      IF (ONCEONLY) THEN
         JWSET(1)=1
         JWSET(2)=N_CFL

         MARG(1) = 2
         MARG(2) = N_CFL
         MARG(3) = N_I4U
      ENDIF

C-------get transient number of thermal steps per flow step.
      IF(XTHERMAL) THEN
         CALL GETVAL('N_THERM_STEPS ',NTHSTEP,'I4',0,0,0,0,NDUM,NERR)
         CALL GETVAL('XFLXLMTRTYPE ',NFLXLMT,'I4',0,0,0,0,NDUM,NERR)
         CALL GETVAL('XFLXLMTR ',FLXLMTR,'R8',0,0,0,0,NDUM,NERR)
         CALL GETVAL('XNOFLXLMTR ',XNOFLXLMTR,'L4',0,0,0,0,NDUM,NERR)
         IF(XNOFLXLMTR) THEN
            R8UTIL=ZERO
            I4UTIL=NPH*3
            ISET(1)=3
            ISET(2)=N_XSLP
            ISET(3)=N_R8U
            ISET(4)=N_I4U
            CALL CALLWORK(SETARYR8N,ISET)
         ENDIF
      ENDIF
      IF(OUT_CO2LEAK) THEN
         CALL GETVAL('ICO2OUT ',ICO2,'I4',0,0,0,0,NDUM,NERR)
         CALL GETVAL('JCO2OUT ',JCO2,'I4',0,0,0,0,NDUM,NERR)
         CALL GETVAL('KCO2OUT ',KCO2,'I4',0,0,0,0,NDUM,NERR)
         CALL GETVAL('NCO2OUT ',NCO2,'I4',0,0,0,0,NDUM,NERR)
      ENDIF

C-------read saturation target
      X = ZERO
      CALL GETVAL('DSMAX ',X,'R8',0,0,0,0,NDUM1,NERR)
      IF(X > ZERO) THEN
         DSMAX_TARG = X
         IF (LEVELC)  THEN
            WRITE (NFOUT,400) DSMAX_TARG
  400       FORMAT(' TARGET TOTAL SATURATION CHANGE',T50,F10.4)
         ENDIF
      ENDIF

C-------read stability check indicator
C       = 0, No stability checks performed
C       = 1, Check only well cells and selected cells
C       = 2, Check all cells
      I = -1
      CALL GETVAL('ICFL ',I,'I4',0,0,0,0,NDUM1,NERR)
      IF(I >= 0 .AND. I <= 2) THEN
         ICFLCHK = I
         IF (LEVELC)  THEN
            IF(ICFLCHK == 0) THEN
               WRITE (NFOUT,500)  
  500          FORMAT(' STABILITY LIMIT NOT CHECKED FOR ANY CELLS')
            ELSEIF(ICFLCHK == 1) THEN
               WRITE (NFOUT,600)  
  600          FORMAT(' STABILITY LIMIT CHECKED FOR SELECTED CELLS')
            ELSE
               WRITE (NFOUT,700)  
  700          FORMAT(' STABILITY LIMIT CHECKED FOR ALL CELLS')
            ENDIF
         ENDIF
         IF(ICFLCHK == 2) THEN
            I4UTIL = 1
            CALL CALLWORK(SETARYI4P,MARG)
         ENDIF
      ENDIF
      IF(I == -1 .AND. LEVELC .AND. ONCEONLY) THEN
         IF(ICFLCHK == 0) THEN
            WRITE (NFOUT,500)  
         ELSEIF(ICFLCHK == 1) THEN
            WRITE (NFOUT,600)  
         ELSE
            WRITE (NFOUT,700)  
         ENDIF
      ENDIF

C-------read stability limit (turn off if value too large or too small)
      X = -ONE
      CALL GETVAL('CFL ',X,'R8',0,0,0,0,NDUM1,NERR)
      IF(X > ZERO) THEN
         CFL = X
         IF(CFL > TEN .OR. CFL < TENTH) THEN
            ICFLCHK = 0
         ELSEIF(ICFLCHK == 0) THEN
            ICFLCHK = 1
         ENDIF
         IF (LEVELC)  THEN
            WRITE (NFOUT,800) CFL
  800       FORMAT(' CFL STABILITY LIMIT',T50,F10.4)
         ENDIF
      ELSEIF(X == ZERO) THEN
         IF(ICFLCHK /= 0 .AND. LEVELC) WRITE (NFOUT,500)  
         ICFLCHK = 0
      ELSEIF(LEVELC .AND. ONCEONLY .AND. ICFLCHK > 0) THEN
         WRITE (NFOUT,800) CFL
      ENDIF

      IF(ICFLCHK == 1) CALL CALLWORK(XWSET,JWSET)
      ONCEONLY=.FALSE.
      END
