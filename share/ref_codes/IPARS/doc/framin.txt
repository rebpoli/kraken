                                   Appendix H
                              IPARS Framework Input

                             John Wheeler    4/26/98

  I.  General

      A.  When IPARS is executed, the user is asked for four file names in the
          following sequence:

          1.  Keyword input file

              a.  This file must be specified and must exist.

              b.  The file consists of an initial data set (see II. below)
                  followed by one or more transient data sets (see III. below) in
                  chronological order.

              c.  The initial data set includes primarily information that does
                  not change with reservoir time (eg. porosity) but may also
                  include time dependent tables (eg. well rates) and some
                  quantities (eg. completion interval) that occur in both the
                  initial data and transient data.

              d.  The transient data sets are each headed by a reservoir time at
                  which the data becomes effective.  These data sets include only
                  data that may logically change with time.

          2.  Standard output file

              a.  This file must be specified.  If a file with the same name
                  exists, it will be overwritten.

              b.  The file will contain essentially all simulator output the user
                  will want to see.  There are a number of switches in the
                  keyword data that can be used to turn various output options on
                  and off.

          3.  Restart input file

              a.  This file may or may not be specified.  If it specified, it
                  must exist and must have been generated by a previous simulator
                  run.  If it is not specified (hit enter) then the simulation
                  starts at reservoir time zero.

              b.  If the file is specified then simulation starts at the
                  reservoir time specified in the file.  Each restart file
                  contains data for only one restart time.

          4.  Restart output file

              a.  This file may or may not be specified.  If it specified, the
                  file name should not include an extension since the simulator
                  will generate a unique extension for each restart output time.
                  Any file with the same primary name and extension will be
                  overwritten.

              b.  Times at which restart files are generated are determined by
                  values for TIMRES (time for the next restart output) and
                  DTIMRES (time between restart outputs) in the transient keyword
                  data.  These values default to 99.D15 which effectively
                  prevents restart output.

              c.  If TIMRES is assigned a valid value but no output restart file
                  name is specified, the simulator creates a file with the
                  character R as a primary name.

      B.  Restart sequence

          1.  The keyword initial data is read and processed normally.  Thus none
              of this data needs to be saved in the restart file.  Normally, the
              same keyword file is used on the initial run and all restart runs.
              Note that it makes no physical sense to change the initial data,
              eg. porosity, after the initial run.

          2.  Keyword transient data is read and processed up to but excluding
              the restart time.

          3.  The restart file is read.

          4.  Keyword transient data at the restart time (if any) is read and
              processed.

          5.  Timestep calculations are started at the restart time.

 II.  Initial framework data

,fix
EXTERNAL NAME       INTERNAL  TYPE          DIMENSION  EXTERNAL  DEFAULT
                    NAME                               UNITS
__________________  ________  ____________  _________  ________  _______

TITLE               DATTL     CHARACTER*50  3          none      yes
                    Case title.  Use TITLE(2) for one line titles.

DESCRIPTION         local     CHARACTER*79  $MXDISCP   none      blank
                    Case description.

BLACK_OIL_IMPES     local     FLAG          N/A        N/A       no
BLACK_OIL_IMPLICIT  Physical model flag.  Only one of these flags is
COMPOSITIONAL_MODEL valid in a given data set.
CHEMICAL_MODEL
HYDROLOGY

TIMEEND             ACTTIM(1) REAL*8        1          [day]     10.
                    Reservoir time at which simulation is to stop.

OUTLEVEL            local     INTEGER*4     1          none      2
                    Normal print output level.
                    1 ==> Minimum
                    2 ==> Standard
                    3 ==> Maximum

DEBUGS              LEVELD    FLAG          1          none      FALSE
                    Single processor debug output key.

DEBUGM              LEVELE    FLAG          1          none      FALSE
                    Multiple processor debug output key.

BUGKEY              BUGKEY    LOGICAL*4     15         none      FALSE
                    Debug switches.  BUGKEY(1-5) are reserved for the
                    framework.  BUGKEY(6-15) are for use in physical
                    models.
                    BUGKEY(1) ==> Full trace of parallel utilities
                    BUGKEY(2) ==> Work routine standard arguments

SPLINEOUT           SPLNOUT   FLAG          1          none      FALSE
                    Detailed spline function output key.

GEOMOUT             GEOMOUT   FLAG          1          none      FALSE
                    Detailed grid geometry output key.

DOWN                DOWN      REAL*8      3,$MAXBLKS   none      1. 0. 0.
                    Normalized gravity vector for fault block n in x,y,z
                    coordinates.  Vector is renormalized on input.

FACES  ????????     FACES     REAL*8      8,$MAXBLKS   none      none
                    Fault block interface definitions.
                    FACES(1,n) = ID number of fault block A for interface n
                    FACES(2-4,n) = X,Y,Z fractions for fault block A.
                       One and only one of these values must be 0 or 1.
                       The other two values must be > 0 and < 1.
                       Example: .1  0  .2 implies the face at the max value
                       of Y and the point X = .1 * max X and Z = .2 * max Z.
                       This point will coincide with the similar point
                       defined for fault block B
                    FACES(5,n) = ID number of fault block B for interface n
                    FACES(6-8,n) = X,Y,Z fractions for fault block B.
                       One and only one of these values must be 0 or 1.
                       The other two values must be > 0 and < 1.

BLOCKNAME           BNAM      CHARACTER*$MXBNAM $MXBLKS none "FAULT BLOCK i"
                    Fault block names.

NX, NY, NZ          NX,NY,NZ  INTEGER*4     $MXBLKS     none     none
                    Number of grid elements in three directions for each
                    fault block.  The number of fault blocks is determined
                    by the number of entries for these variables.

DX, DY, DZ          DiREC     REAL*4     $MXRECi,$MXBLKS [ft]    1. 1. 1.
                    Grid interval lengths in the x, y, and z directions
                    for the rectangular grid option.  At least one value
                    must be entered to activate the option.

XYZ111              XYZ111    REAL*4        3,$MXBLKS  [ft]      0. 0. 0.
                    x, y, z location of the 111 corner of each fault
                    block for the rectangular grid option.  These values
                    are read only if the option is activated.

XC, YC, ZC          N_XC,N_YC,N_ZC REAL*4   grid array [ft]      none
                    Corner locations for the corner-point grid option.
                    Values must be input to activate the option.

PROCOUT             PRCOUT    FLAG          1          none      FALSE
                    Print key for grid element distribution on
                    multiprocessor machines.

NUMPRT              NUMREG    INTEGER*4     NUMBLK     none      1
                    Number of print regions for each fault block.

IFIRST,ILAST,ISTEP  I1AP,I2AP,ISAP INTEGER*4 NUMBLK,NUMPRT none  yes
JFIRST,JLAST,JSTEP  J1AP,J2AP,JSAP INTEGER*4 NUMBLK,NUMPRT none  yes
KFIRST,KLAST,KSTEP  K1AP,K2AP,KSAP INTEGER*4 NUMBLK,NUMPRT none  yes
                    Print indexes for grid element arrays.  The indexes
                    are similar to FORTRAN DO loop indexes except that
                    the last value printed will always be the value for
                    the maximum index.

ROCK                N_ROCK    INTEGER*4    grid array  none      1
                    Rock type of each grid element.  Relative permeability
                    and capillary pressure curves are assigned by rock
                    type.

POROSITY            N_POR     REAL*4       grid array  none      none
                    Porosity of each grid element.

XPERM               N_XPERM   REAL*4       grid array  [md]      none
                    x direction permeability of each grid element.

YPERM               N_YPERM   REAL*4       grid array  [md]      XPERM
                    y direction permeability of each grid element.

ZPERM               N_ZPERM   REAL*4       grid array  [md]      YPERM
                    z direction permeability of each grid element.

KEYOUT              KEYOUT    INTEGER*4    grid array  none      1
                    KEYOUT(I,J,K) = 1 ==> reservoir grid element
                    KEYOUT(I,J,K) = 0 ==> not a reservoir grid element

KOSW                NKOSW     REAL*8       table       none      none
                    Two phase (oil-water) relative permeability to oil as
                    a function of water saturation.  Ko for rock type I
                    is determined by a call to LOOKUP that references
                    table NKOSW(I).

KWSW                NKWSW     REAL*8       table       none      none
                    Two phase (oil-water) relative permeability to water
                    as a function of water saturation.  Kw for rock type I
                    is determined by a call to LOOKUP that references
                    table NKWSW(I).

KOSG                NKOSG     REAL*8       table       none      none
                    Two phase relative permeability to oil as a
                    function of gas saturation.  Ko for rock type I is
                    determined by a call to LOOKUP that references table
                    NKOSG(I).

KGSG                NKGSG     REAL*8       table       none      none
                    Two phase (gas-oil) relative permeability to gas as a
                    function of gas saturation.  Kg for rock type I is
                    determined by a call to LOOKUP that references table
                    NKGSG(I).

MODREL              MODREL    INTEGER*4    rock#       none      2
                    Three phase relative permeability model number
                    = 1 ==> Stone's model 1 with parameter Som constant.
                            Normalized by method of Aziz and Settari.
                    = 2 ==> Stone's model 1 with parameter Som a linear
                            function of Sg.  Normalized by method of Aziz
                            and Settari.
                    Three phase relative permeabilities are calculated by
                    subroutine RELPERM3.

SOM                 SOM       REAL*8       rock#       none      yes
                    Som parameter for MODREL = 1.
                    Defaults to (Sorw + Sorg) / 2

SOMA,SOMB           SOMA,SOMB REAL*8       rock#       none      yes
                    Som parameters for MODREL = 2.  Defaults are
                    SOMA = Sorw and SOMB = .5 where
                    Som = SOMA - SOMB * Sg

PCOW                NPCOW     REAL*8       table     [psi],none  none
                    Two phase (oil-water) capillary pressure as a function
                    of water saturation.  Pc for rock type I is determined
                    by a call to LOOKUP that references table NPCOW(I).

PCGO                NPCGO     REAL*8       table     [psi],none  none
                    Two phase (gas-oil) capillary pressure as a function
                    of oil saturation.  Pc for rock type I is determined
                    by a call to LOOKUP that references table NPCGO(I).

NUMWELL             NUMWEL    INTEGER*4    1           none      0
                    Total number of wells including any that may be
                    activated at some advanced reservoir time.

WELLNAME            WELNAM CHARACTER*$MXWELN NUMWELL   none      "WELL"
                    Well names.

INTERVALS           NWELI     INTEGER*4    NUMWELL     none      1
                    Number of well intervals.

WELLBLOCK           NBWELI    INTEGER*4 $MXWELI,NUMWEL none      1
                    Fault block location of a well interval.  A well
                    interval may span only one fault block.

KINDWELL            KWELL     INTEGER*4    NUMWELL     none      0
                    KINDWELL = 0 ==> Well undrilled or shut in.
                    KINDWELL = 1 ==> Injection well, pressure specified.
                    KINDWELL = 2 ==> Injection well, rate specified.
                    KINDWELL = 3 ==> Production well, pressure specified.
                    KINDWELL = 4 ==> Production well, rate specified.

WELLTOP             WELLTOP   REAL*4 3,$MXWELI,NUMWEL  [ft]      -99.
                    x,y,z location of the top of a well interval.

WELLBOTTOM          WELLBOT   REAL*4 3,$MXWELI,NUMWEL  [ft]      -99.
                    x,y,z location of the bottom of a well interval.

DIAMETER            WELDIAM   REAL*4  $MXWELI,$MXWELL  [ft]        .5
                    DIAMETER(i,n) = Wellbore diameter of interval i of well n

SKIN                WELSKIN   REAL*4  $MXWELI,$MXWELL  none        0.
                    SKIN(i,n) = Wellbore skin factor of interval i of well n

WELLGEOM(6,m)       WELGEOM   REAL*4    6,$MXWELE      none        0.
                    WELLGEOM(1-6,m) = I, J, K, NBLK, NWELL, and G of the m th
                    user-specified geometric factor for a well element.  NBLK
                    is the fault block number, NWELL is the well number, and
                    G the geometric factor.  The first five numbers for a
                    given value of m must be equal to or greater than 1 and
                    the sixth number must be greater than 0; otherwise the
                    entire set of six numbers is ignored.  If the user does
                    not specify the geometric factor for a grid element,
                    then the factor is calculated using the drainage radius
                    r   = .208 * square root (element volume /
                     eq
                          wellbore length in the grid element)

WELLOUTKEY          KHISOUT   INTEGER*4    1           none         1
                    Well data output key.
                    = 0 ==> Discard (do not collect well data)
                    = 1 ==> Print in standard output
                    = 2 ==> Output to disk
                    = 3 ==> Both print and disk output

EXTMASS             EXTMASS   CHARACTER*20 1           none    "[lb]"
                    Default external mass units.

EXTDIST             EXTDIST   CHARACTER*20 1           none    "[ft]"
                    Default external distance units.

EXTTIME             EXTTIME   CHARACTER*20 1           none    "[day]"
                    Default external time units.

EXTTEMP             EXTTEMP   CHARACTER*20 1           none    "[F]"
                    Default external temperature units.

EXTPRES             EXTPRES   CHARACTER*20 1           none    "[psi]"
                    Default external pressure units.

EXTPERM             EXTPERM   CHARACTER*20 1           none    "[md]"
                    Default external permeability units.

EXTWELL             EXTWELL   CHARACTER*20 1           none    "[lb/day]"
                    Default external well rate units.

EXTVISC             EXTVISC   CHARACTER*20 1           none    "[cp]"
                    Default external viscosity units.

EXTDENS             EXTDENS   CHARACTER*20 1           none    "[lb/cu-ft]"
                    Default external density units.

EXTCONC             EXTCONC   CHARACTER*20 1           none    "[M/cu-ft]"
                    Default external concentration units.

EXTCOMP             EXTCOMP   CHARACTER*20 1           none    "[1/psi]"
                    Default external viscosity units.

III.  Transient framework data

EXTERNAL NAME       INTERNAL  TYPE          DIMENSION  EXTERNAL  INITIAL
                    NAME                               UNITS     DEFAULT
__________________  ________  ____________  _________  ________  _______

DELTIM              DELTIM    REAL*8        1          [day]     .1
                    Next time step size.

DTIMMUL             DTIMMUL   REAL*8        1          [day]     1.3
                    Time step multiplier.  Each time step, the time step
                    will be multiplied by DTIMMUL until DTIMMAX is
                    reached.

DTIMMAX             DTIMMAX   REAL*8        1          [day]     30.44
                    Maximum time step size.

DTIMMIN             DTIMMIN   REAL*8        1          [day]     .001
                    Minimum time step size.

TIMOUT              ACTTIM(3) REAL*8        1          [day]     99D10
                    Time for next standard output.

DTIMOUT             DTIMOUT   REAL*8        1          [day]     99D15
                    Time between standard outputs.

TIMRES              ACTTIM(4) REAL*8        1          [day]     99D15
                    Time for next restart output.

DTIMRES             DTIMRES   REAL*8        1          [day]     99D15
                    Time between restart outputs.

FORMAT              FORMOUT   LOGICAL       1          none      FALSE
                    Restart output file is formatted rather than binary.
                    Formatted files are portable but about three times
                    larger than binary files.

OUTLEVEL            These variables were defined above in the intital data
DEBUGS              and can also be read in the transient data.
DEBUGM
BUGKEY
WELLNAME
INTERVALS
KINDWELL
WELLTOP
WELLBOTTOM
WELLBLOCK
DIAMETER
SKIN
WELLPQ
