C  HIVDAT.F - HYDROLOGY MODEL INITIALIZATION CODE (AFTER INITIAL INPUT)

C  ROUTINES IN THIS MODULE:

C  SUBROUTINE HIVDAT (NERR)
C  SUBROUTINE HINIT  (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                     KEYOUT,NBLK,POR,DEPTH,POIL,COIL,KROCK)

C  CODE HISTORY:

C  JOHN WHEELER     4/29/97    SKELETON HIVDAT ROUTINE
C  JOHN WHEELER     5/ 2/97    ALPHA HINIT ROUTINE
C  JOHN WHEELER     5/ 6/97    BETA HINIT ROUTINE
C  JOHN WHEELER     8/25/98    TYPICAL COLUMN DATA AT WELLS
C  SUNIL G THOMAS   4/01/09    ALPHA MODS FOR COUPLING WITH TRANSPORT
C  GURPREET SINGH   11/15      TWO PHASE IMPLICIT MFMFE
C*********************************************************************
      SUBROUTINE HIVDAT (NERR)
C*********************************************************************

C  Hydrology model initialization after initial keyword input and 
C  grid-element array creation

C  NERR = ERROR KEY STEPPED BY ONE FOR EACH ERROR
C         (INPUT AND OUTPUT, INTEGER)
C  NOTES:

C  TIMKLS(I) = TIMER CLASS
C            = 0 ==> UNUSED
C            = 1 ==> TOTAL TIME
C            = 2 ==> COMMUNICATION TIMES
C            = 3 ==> ALL REDUNDANT CALCULATION TIMES
C            = 4 ==> MISCELLENOUS TIMES

C*********************************************************************

      IMPLICIT NONE
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'blkary.h'
      INCLUDE 'times.h'
      INCLUDE 'wells.h'

      INCLUDE 'harydat.h'
      INCLUDE 'hbaldat.h'
      INCLUDE 'mpfaary.h'

      INTEGER ISET(4),IINIT(9),IPNT(6)
      INTEGER NERR,N,I

      DATA ISET/4*0/,IINIT/9*0/,IPNT/6*0/
      EXTERNAL HINIT,SETARYR8N,MPFA_POR_VOL

      IF (LEVELE.AND.BUGKEY(1)) WRITE (NFBUG,*)'PROC',MYPRC,
     & ' ENTERING SUBROUTINE HIVDAT'

C  SET ONCE ONLY FLAGS

      DO 3 I=1,8
    3 HONCE(I)=.TRUE.

C  DEFINE TIMERS (USE 20 TO 30)

      TIMNAM(20)='PROPERTIES AND ACCUMULATION'
      TIMKLS(20)=4
      TIMNAM(21)='TRANSMISSABILITY TERMS'
      TIMKLS(21)=4
      TIMNAM(22)='PROPERTY COMMUNICATION'
      TIMKLS(22)=2
      TIMNAM(23)='WELL COMMUNICATION'
      TIMKLS(23)=2

C  CLEAR WELL DENSITY AND BOTTOM-HOLE PRESSURE

      DO 2 N=1,NUMWEL
      IF (MODWEL(N).EQ.MODACT) THEN
         WELDEN(N)=0.D0
         WELBHP(N)=0.D0
      ENDIF
    2 CONTINUE

C  CONVERT POROSITY TO PORE VOLUME, COUNT GRID ELEMENTS
C  INITIALIZE OIL PRESSURE AND CONCENTRATIONS, VELOCITY

      NERRC=0

      R8UTIL=0.D0
      I4UTIL=6
      ISET(1)=3
      ISET(2)=N_HVEL
      ISET(3)=N_R8U
      ISET(4)=N_I4U
      CALL CALLWORK(SETARYR8N,ISET)

C  CALCULATE PORE VOLUME AND (ROCK COMPRESSIBILITY * PORE VOLUME)

      IPNT(1) = 5
      IPNT(2) = N_XC
      IPNT(3) = N_YC
      IPNT(4) = N_ZC
      IPNT(5) = N_POR
      IPNT(6) = N_CR
      CALL CALLWORK(MPFA_POR_VOL,IPNT)
   

      IINIT(1)=8
      IINIT(2)=N_POR
      IINIT(3)=N_DEPTH
      IINIT(4)=N_POIL
      IINIT(5)=N_COIL
      IINIT(6)=N_CWAT
      IINIT(7)=N_ROCK
      IINIT(8)=N_PV
      IINIT(9)=N_REFPRES
      CALL CALLWORK (HINIT,IINIT)
      IF (NERRC.NE.0) GO TO 13

C  INITIALIZE BC FLUX CONTRIBUTION TO MASS BALANCE

      OILITNP=0.D0
      WATITNP=0.D0

C  INITIALIZE MPFA RELATED ARRAYS

      CALL MPFA_INIT(NERR)
      CALL MPFA_PERMINV(NERR)

C  CALCULATE AINV, TRAN = AINV*B AND STORE IN N_AINV,N_TRAN

      CALL MPFA_SET_AINV_TRAN(NERR)

C EXITS

      RETURN
   13 NERR=NERR+1

      END

C*********************************************************************
      SUBROUTINE HINIT (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                 KEYOUT,NBLK,POR,DEPTH,POIL,COIL,CWAT,KROCK,PV,
     &                 REFPRES)
C*********************************************************************
      USE scrat1mod
      IMPLICIT NONE
      INTEGER IL1,IL2,KL1,KL2,IDIM,JDIM,KDIM,LDIM,NBLK,
     &        JL1V(KDIM),JL2V(KDIM), KEYOUT(IDIM,JDIM,KDIM),
     &        KROCK(IDIM,JDIM,KDIM)
      REAL*8 POIL(IDIM,JDIM,KDIM),     DEPTH(IDIM,JDIM,KDIM),
     &       COIL(IDIM,JDIM,KDIM),PV(IDIM,JDIM,KDIM),
     &       REFPRES(IDIM,JDIM,KDIM),CWAT(IDIM,JDIM,KDIM),
     &       POR(IDIM,JDIM,KDIM)

      CALL HINIT2(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                 KEYOUT,NBLK,POR,DEPTH,POIL,COIL,CWAT,KROCK,PV,
     &                 REFPRES,A)
      END

C*********************************************************************
      SUBROUTINE HINIT2 (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                 KEYOUT,NBLK,POR,DEPTH,POIL,COIL,CWAT,KROCK,PV,
     &                 REFPRES,AL)
C*********************************************************************
 
C  ROUTINE SETS UP INITIAL OIL PRESSURE AND CONCENTRATIONS.  IT ALSO
C  CONVERTS POROSITY TO PORE VOLUME AND PRINTS A TYPICAL COLUMN OF DATA.
C  THIS IS A WORK ROUTINE.

C  POR(I,J,K)  = PORE VOLUME, CU-FT (INPUT, REAL*8)

C  PV(I,J,K)   = PORE VOLUME, CU-FT (OUTPUT, REAL*8)

C  DEPTH(I,J,K) = GRID-BLOCK CENTER DEPTHS (INPUT, REAL*8)

C  POIL(I,J,K) = OIL PRESSURE, PSI (OUTPUT, REAL*8)

C  COIL(I,J,K) = OIL CONCENTRATION, LB/CU-FT (OUTPUT, REAL*8)

C  CWAT(I,J,K) = WATER CONCENTRATION, LB/CU-FT (OUTPUT, REAL*8)

C  KROCK(I,J,K) = ROCK TYPE (INPUT, INTEGER)

C*********************************************************************
      IMPLICIT NONE
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'blkary.h'
      INCLUDE 'layout.h'
      INCLUDE 'rock.h'
      INCLUDE 'wells.h'
!      INCLUDE 'scrat1.h'
      INCLUDE 'hfluids.h'
      INCLUDE 'hbaldat.h'

      COMMON /IEQUL/ SWC,DEPC,DWC,DOC,PWC,POC

      INTEGER IL1,IL2,KL1,KL2,IDIM,JDIM,KDIM,LDIM,
     &        JL1V(KDIM),JL2V(KDIM), KEYOUT(IDIM,JDIM,KDIM),
     &        KROCK(IDIM,JDIM,KDIM),    IW(IDIM,$MXWELL)
      REAL*8 POIL(IDIM,JDIM,KDIM),     DEPTH(IDIM,JDIM,KDIM),
     &       COIL(IDIM,JDIM,KDIM),PV(IDIM,JDIM,KDIM),
     &       REFPRES(IDIM,JDIM,KDIM),CWAT(IDIM,JDIM,KDIM)
C
C----- local variables
C
      REAL*8 POR(IDIM,JDIM,KDIM),POBW(IDIM,$MXWELL),
     &       PWBW(IDIM,$MXWELL),SWBW(IDIM,$MXWELL),
     &       DEPBW(IDIM,$MXWELL)
      REAL*8 PC,DPC,GRD2,DP,F,DF,SATLIM,PCB,DPCS,SWT,
     &       SWA,DEPA,DWA,DOA,PWA,POA,SWB,DEPB,DWB,DOB,PWB,
     &       POB,SWC(3),DEPC(3),DWC(3),DOC(3),PWC(3),POC(3)
      INTEGER NW($MXWELL),JW($MXWELL),KW($MXWELL),NWE($MXWELL)
      LOGICAL TOPI
      CHARACTER*80 AL($MXREAD/80),ALS
      CHARACTER*1 ALS1(80)
      EQUIVALENCE (ALS,ALS1)

      INTEGER NBLK,IOFF,JOFF,KOFF,MERR,MW,MWB,LW,KK,I,J,K,M,L,N,
     &        J1O,JTO,JL1,JL2,LS

      IF (LEVELE.AND.BUGKEY(1)) WRITE (NFBUG,*)'PROC',MYPRC,
     & ', BLOCK',NBLK,' ENTERING SUBROUTINE HINIT'

C  GET LOCAL/GLOBAL INDEX OFFSETS
      CALL BLKOFF(NBLK,IOFF,JOFF,KOFF,MERR)


C  ID WELLS FOR TYPICAL OUTPUT

      MW=0
      MWB=0
      DO 14 LW=1,NTYPOUT
      IF (LOCWEL(1,1,LW).EQ.NBLK) THEN
         MWB=1
         IF (NWELPRC(LW).EQ.MYPRC) THEN
            MW=MW+1
            NWE(MW)=0
            NW(MW)=LW
            JW(MW)=LOCWEL(4,1,LW)-JOFF
            KW(MW)=LOCWEL(5,1,LW)-KOFF
         ENDIF
      ENDIF
   14 CONTINUE

      IF (MWB.EQ.0.AND.MYPRC.EQ.0.AND.NTYPOUT.GT.0) THEN
         MW=1
         NWE(MW)=0
         NW(MW)=0
         KK=(KL1+KL2)/2
         KW(MW)=KK
         JW(MW)=(JL1V(KK)+JL2V(KK))/2
      ENDIF

C  SET UP FOR EQUILIBRIUM CALCULATIONS

      IF (HONCE(4)) THEN
         HONCE(4)=.FALSE.

         SWA=SWINIT
         DEPA=DINIT
         CALL LOOKUP(NPCOW(KRKI),SWA,PC,DPCS)
         IF (POINIT.GT.PWINIT) THEN
            POA=POINIT
            PWA=POA-PC
         ELSE
            PWA=PWINIT
            POA=PWA+PC
         ENDIF
         DOA=OILCMP*POA
         DOA=((((((1.38888889D-3*DOA+8.333333333D-3)*DOA
     &    +4.1666666667D-2)*DOA+.166666666667D0)*DOA
     &    +.5D0)*DOA+1.D0)*DOA+1.D0)*OILDEN
         DWA=WATCMP*PWA
         DWA=((((((1.38888889D-3*DWA+8.333333333D-3)*DWA
     &    +4.1666666667D-2)*DWA+.166666666667D0)*DWA
     &    +.5D0)*DWA+1.D0)*DWA+1.D0)*WATDEN

         DO 11 I=1,3
         SWC(I)=SWA
         DEPC(I)=DEPA
         DWC(I)=DWA
         DOC(I)=DOA
         PWC(I)=PWA
   11    POC(I)=POA

         DENWR=DWA
         RDENOR=1.D0/DOA
         DRATIO=DWA/DOA

      ENDIF

C  LOOP OVER LOCAL GRID ELEMENTS AND PICK UP MESH SIZES

      DO 2 K=KL1,KL2
      JL1=JL1V(K)
      JL2=JL2V(K)
      DO 2 J=JL1,JL2
      TOPI=.TRUE.
      DO 2 I=IL1,IL2
      IF (KEYOUT(I,J,K).NE.1) GO TO 2


C  EQUILIBRIUM OIL PRESSURE AND CONCENTRATIONS
C  PICK OUT CLOSEST DEPTH FROM PREVIOUS CALCULATIONS

      M=1
      DEPB=DEPTH(I,J,K)
      IF (ABS(DEPB-DEPC(M)).GT.ABS(DEPB-DEPC(2))) M=2
      IF (ABS(DEPB-DEPC(M)).GT.ABS(DEPB-DEPC(3))) M=3
      SWA=SWC(M)
      DEPA=DEPC(M)
      DWA=DWC(M)
      DOA=DOC(M)
      PWA=PWC(M)
      POA=POC(M)

      IF(HREADIN) THEN
         POB = POIL(I,J,K)
         DOB=OILDEN*EXP(POB*OILCMP)
         SWB=1.D0-COIL(I,J,K)/DOB
         L=NPCOW(KROCK(I,J,K))
         CALL LOOKUP(L,SWB,PC,DPCS)
         PWB=POB-PC
         DWB=WATDEN*EXP(PWB*WATCMP)
         GOTO 71
      ENDIF

C  CALCULATE OIL PRESSURE AT I,J,K

      GRD2=.5D0*GRAV*DOA*(DEPB-DEPA)
      DP=2.D0*GRD2/(1.D0-GRD2*OILCMP)
      DO 3 N=1,4
      DOB=OILCMP*DP
      DOB=(((((1.38888889D-3*DOB+8.333333333D-3)*DOB+4.1666666667D-2)
     & *DOB+.166666666667D0)*DOB+.5D0)*DOB+1.D0)*DOB+1.D0
      F=DP-GRD2*(1.D0+DOB)
      DF=1.D0-GRD2*OILCMP*DOB
    3 DP=DP-F/DF
      POB=POA+DP
      DOB=OILCMP*POB
      DOB=((((((1.38888889D-3*DOB+8.333333333D-3)*DOB+4.1666666667D-2)
     & *DOB+.166666666667D0)*DOB+.5D0)*DOB+1.D0)*DOB+1.D0)*OILDEN

C  CALCULATE WATER PRESSURE AT I,J,K

      GRD2=.5D0*GRAV*DWA*(DEPB-DEPA)
      DP=2.D0*GRD2/(1.D0-GRD2*WATCMP)
      DO 5 N=1,3
      DWB=WATCMP*DP
      DWB=(((((1.38888889D-3*DWB+8.333333333D-3)*DWB+4.1666666667D-2)
     & *DWB+.166666666667D0)*DWB+.5D0)*DWB+1.D0)*DWB+1.D0
      F=DP-GRD2*(1.D0+DWB)
      DF=1.D0-GRD2*WATCMP*DWB
    5 DP=DP-F/DF
      PWB=PWA+DP
      DWB=WATCMP*PWB
      DWB=((((((1.38888889D-3*DWB+8.333333333D-3)*DWB+4.1666666667D-2)
     & *DWB+.166666666667D0)*DWB+.5D0)*DWB+1.D0)*DWB+1.D0)*WATDEN

C  CALCULATE Sw AT I,J,K

      L=NPCOW(KROCK(I,J,K))
      SATLIM=SATWC(KROCK(I,J,K))
      PCB=POB-PWB
      SWB=SWA
      DO 6 M=1,15
      CALL LOOKUP(L,SWB,PC,DPCS)
      DPC=PC-PCB
      IF (ABS(DPC).LT.1.D-7.OR.ABS(DPCS).LT.1.D-7) GO TO 7
      SWT=SWB-DPC/DPCS
      IF (SWT.LT..5D0*(SWB+SATLIM)) SWT=.5D0*(SWB+SATLIM)
      IF (SWT.GT..6D0+.4*SWB) SWT=.6D0+.4*SWB
      IF (M.GT.10.AND.SWT.GT..99999D0) THEN
         SWB=.99999D0
         GO TO 7
      ENDIF
    6 SWB=SWT
      IF (MYPRC.EQ.0) THEN
         WRITE(NFOUT,12) MYPRC,I+IOFF,J+JOFF,K+KOFF,SWT
   12    FORMAT(/' ERROR - INITIAL Sw ITERATION FAILED'/' PROC =',I5,
     &   ' I,J,K =',3I7,' Sw =',G11.4)
      ELSE
         WRITE(*,12) MYPRC,I+IOFF,J+JOFF,K+KOFF,SWT
      ENDIF
      NERRC=1
      RETURN

C  STORE INITIAL EQUILLIBRIUM RESULTS

    7 POIL(I,J,K)=POB
      COIL(I,J,K)=DOB*(1.D0-SWB)
      CWAT(I,J,K)=DWB*SWB


C  COUPLING WITH POROELASTICITY
      
      IF (.NOT.HREADIN) THEN
         REFPRES(I,J,K) = POINIT
      ELSE
         REFPRES(I,J,K) = POIL(I,J,K)
      ENDIF
      PV(I,J,K)=POR(I,J,K)

   71 CONTINUE

C  COLLECT TYPICAL GRID COLUMN DATA AT WELLS

      DO 15 LW=1,MW
      IF (J.EQ.JW(LW).AND.K.EQ.KW(LW)) THEN
         NWE(LW)=NWE(LW)+1
         IW(NWE(LW),LW)=I+IOFF
         POBW(NWE(LW),LW)=POB
         PWBW(NWE(LW),LW)=PWB
         SWBW(NWE(LW),LW)=SWB
         DEPBW(NWE(LW),LW)=DEPB
      ENDIF
   15 CONTINUE

C  SAVE EQUILIBRIUM DATA AND TERMINATE IJK LOOP

      SWC(2)=SWB
      DEPC(2)=DEPB
      DWC(2)=DWB
      DOC(2)=DOB
      PWC(2)=PWB
      POC(2)=POB
      IF (TOPI)THEN
         TOPI=.FALSE.
         SWC(3)=SWB
         DEPC(3)=DEPB
         DWC(3)=DWB
         DOC(3)=DOB
         PWC(3)=PWB
         POC(3)=POB
      ENDIF

    2 CONTINUE

      IF (LEVELC.AND.(NTYPOUT.GT.0).AND.HONCE(5).AND.NBLK.EQ.1) THEN
         HONCE(5)=.FALSE.
         WRITE (NFOUT,*)
         TITU='******'
         CALL PRTTIT(TITU)
         TITU='TYPICAL ROCK COLUMNS'
         CALL PRTTIT(TITU)
      ENDIF

      DO 16 L=1,MW
      AL(1)=' '
      N=1
      LS=1
      IF (NWE(L).GT.0) THEN

         LS=70
         WRITE (AL(1),20)
   20    FORMAT(' ')
         WRITE (AL(2),8) JW(L)+JOFF,KW(L)+KOFF,NBLK,NW(L)
    8    FORMAT(' J =',I5,4X,'K =',I5,4X,'FAULT BLOCK =',I4,4X,
     &      '(WELL',I4,')')
         WRITE (AL(3),20)
         WRITE (AL(4),9)
    9    FORMAT(T5,'I',T9,'Po, psi',T23,'Pw, psi',T40,'Sw',T51,
     &   'DEPTH, ft')
         WRITE (AL(5),20)
         N=5
         DO 17 M=1,NWE(L)
         N=N+1
   17    WRITE (AL(N),10) IW(M,L),POBW(M,L),PWBW(M,L),SWBW(M,L),
     &      DEPBW(M,L)
   10    FORMAT(I5,4G14.5)

         IF (MYPRC.EQ.0) THEN
            IF (LEVELC) THEN
               DO 18 M=1,N
               ALS=AL(M)
               DO 22 JTO=80,1,-1
               J1O=JTO
               IF (ALS1(JTO).NE.' ') GO TO 18
   22          CONTINUE
   18          WRITE (NFOUT,19) (ALS1(JTO),JTO=1,J1O)
   19          FORMAT(80A1)
            ENDIF
         ENDIF
            
      ENDIF

$MANY      IF (MYPRC.GT.0) CALL TYPEOUT(AL,N)

   16 CONTINUE

      IF (LEVELC.AND.HONCE(6)) THEN
         HONCE(6)=.FALSE.
         DO 21 LW=1,NTYPOUT
$MANY      IF (NWELPRC(LW).NE.0.AND.MODWEL(LW).EQ.MODACT) 
$MANY     &    CALL TYPEOUT(AL,$MXREAD/80)
   21    CONTINUE
      ENDIF

      END
