C  HWELL.F - HYDROLOGY MODEL WELL ROUTINES

C  ROUTINES IN THIS MODULE:

C  SUBROUTINE HWELL  (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                     KEYOUT,NBLK,DEPTH,POIL,PWAT,DUNK,RELPRM,DPCSW,
C                     COIL,COF,RESID)
C  SUBROUTINE HWELSUM(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                     KEYOUT,NBLK,DEPTH,POIL,PWAT,DUNK,RELPRM)
C  SUBROUTINE HWDATA (NERR,KINP)
C  SUBROUTINE WBD1P  (DOBHP,D,P,C,H,DR,W4,W5,W6,Q)
C  SUBROUTINE WBD2P  (K,D,P,H,W4W,W5W,W6W,W4O,W5O,W6O,Q,CFRW,DDWBDP)

C  CODE HISTORY:

C  JOHN WHEELER     5/19/97    ALPHA CODE
C  JOHN WHEELER    10/16/98    MAJOR REVISION TO IMPROVE RATE WELLS
C  JOHN WHEELER    11/12/98    IMPROVED STOCK TANK UNITS FOR WELLS
C  JOHN WHEELER    11/01/00    IMPROVED GENERAL TREATMENT OF WELLS
C  JOHN WHEELER     6/08/01    IMPLICIT WELLS REVISION
C  SUNIL G THOMAS   -/--/09    PRESSURE CONSTRAINT LIMITED WELLS
C  GURPREET SINGH    10/16     TWO PHASE IMPLICIT BRICKS (APPROX)

C*********************************************************************
      SUBROUTINE HWELL(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                 KEYOUT,NBLK,DEPTH,POIL,PWAT,DDENS,RELPRM,DPCSW,
     &                 COIL,COF,RESID)
C*********************************************************************
 
C  ROUTINE EVALUATES WELL CONTRIBUTIONS TO COEFFICIENTS AND RESIDUALS.
C  THIS IS A WORK ROUTINE.

C  DEPTH(I,J,K) = GRID ELEMENT CENTER DEPTH, FT (INPUT, REAL*8)

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT, REAL*8)

C  PWAT(I,J,K) = WATER PRESSURE, PSI (INPUT, REAL*8)

C  DDENS(I,J,K,1) = OIL DENSITY, LB/CU-FT (INPUT, REAL*8)
C  DDENS(I,J,K,2) = WATER DENSITY, LB/CU-FT (INPUT, REAL*8)

C  RELPRM(I,J,K,1) = OIL RELATIVE PERMEABILITY (INPUT, REAL*8)
C  RELPRM(I,J,K,2) = DERIVATIVE OF OIL RELATIVE PERMEABILITY WRT Sw
C  RELPRM(I,J,K,3) = WATER RELATIVE PERMEABILITY
C  RELPRM(I,J,K,4) = DERIVATIVE OF WATER RELATIVE PERMEABILITY WRT Sw

C  DPCSW(I,J,K) = DERIVATIVE OF Pc WRT Sw, PSI (INPUT, REAL*8)

C  COIL(I,J,K) = OIL CONCENTRATION, LB/CU-FT (INPUT AND OUTPUT, REAL*8)

C  COF(I,J,K,N,L) = JACOBIAN COEFFICIENTS (INPUT AND OUTPUT, REAL*4)

C  RESID(I,J,K,L)= RESIDUALS (INPUT AND OUTPUT, REAL*8)

C*********************************************************************
      IMPLICIT NONE
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'wells.h'
      INCLUDE 'layout.h'
      INCLUDE 'unitsex.h'

      INCLUDE 'hfluids.h'
      INCLUDE 'hbaldat.h'
$TRCHEM      INCLUDE 'trmodel.h'

      INTEGER IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V(KDIM),JL2V(KDIM),
     &        KL1,KL2,KEYOUT(IDIM,JDIM,KDIM)
      REAL*8 DEPTH(IDIM,JDIM,KDIM),      POIL(IDIM,JDIM,KDIM),
     &       PWAT(IDIM,JDIM,KDIM),       RELPRM(IDIM,JDIM,KDIM,4),
     &       DDENS(IDIM,JDIM,KDIM,2),     DPCSW(IDIM,JDIM,KDIM),
     &       RESID(IDIM,JDIM,KDIM,2),    COIL(IDIM,JDIM,KDIM)

      REAL*4 COF(IDIM,JDIM,KDIM,$NUMCOF,2)

      REAL*8 TE,PQ,DPQ,DWP,DOP,DUB1,DUB2,DUB3,DUB4,DUB5,DTOB,DTOE,
     &       WBDEN,CFRW,CVF,CDT,PWB,DNW,DNO,DDWBDP,
     &       BHP,WHL,WV4W,WV5W,WV6W,WV4O,WV5O,WV6O,
     &       BETWP,BETWN,BETOP,BETON,QW,QO,RPW,RPO,DRPW,
     &       PRMMN,DRPO
      LOGICAL LK
 
      INTEGER IOFF,JOFF,KOFF,NBLK,MERR,IW,L,KWL,I,J,K,IRF,KR
      

      DATA PRMMN/.05/

C bag8 - CVF = sq-ft cp / md psi day
      CVF = CONV_FACTOR

$TRCHEM      DO IW=1,NUMWEL
$TRCHEM         DO L=1,NUMELE(IW)
$TRCHEM         VOLRATE(1,L,IW) = 0.D0
$TRCHEM         VOLRATE(2,L,IW) = 0.D0
$TRCHEM         ENDDO
$TRCHEM      ENDDO

      IF((NHISUSE == 0).AND.(NSTEP < 1)) GO TO 9

      IF (LEVELE.AND.BUGKEY(1)) WRITE (NFBUG,*)'PROC',MYPRC,
     & ' ENTERING SUBROUTINE HWELL, OLD TAG =',MSGTAG($HMODEL+1)

C  EVALUATE WELL TERMS AT TIME N + 1

      TE=TIM+DELTIM
    9 IF((NHISUSE == 0).AND.(NSTEP < 1)) TE=TIM
      CDT=CVF*DELTIM

C  SET CONVERSION FACTOR FOR STOCK TANK RATE SPECIFIED WELLS

      CFRW=1.D0
      IF (STBEXT) CFRW=STDENW/STDENO

C  GET LOCAL TO GLOBAL INDEX OFFSETS

      CALL BLKOFF(NBLK,IOFF,JOFF,KOFF,MERR)

C  LOOP OVER THE WELLS

      DO 101 IW=1,NUMWEL
      IF (MODWEL(IW).NE.MODACT)
     &   GO TO 101
      LK=.TRUE.
      LINSYSW(IW)=0

C  LOOP OVER THE WELL ELEMENTS IN WELL IW

      DO 102 L=1,NUMELE(IW)
      IF (LOCWEL(6,L,IW).EQ.MYPRC.AND.LOCWEL(1,L,IW).EQ.NBLK) THEN

C  START CALCULATIONS MADE ONCE PER WELL

         IF (LK) THEN
            LK=.FALSE.

C  LOOK UP BHP OR WELL RATE

            IF (NEWT.EQ.1) CALL LOOKUP(NTABPQ(IW),TE,SPQ(IW),DPQ)
            PQ=SPQ(IW)
            IF (PQ.EQ.0.D0) GO TO 101

            WHL=.5D0*GRAV*(DEPTOP(IW)-DEPBOT(IW))
            WV4W=WELVEC(4,IW)
            WV5W=WELVEC(5,IW)
            WV6W=WELVEC(6,IW)
            WV4O=WELVEC(10,IW)
            WV5O=WELVEC(11,IW)
            WV6O=WELVEC(12,IW)

C  BRANCH ON WELL TYPE

            KWL=KWELL(IW)
            IF (KWL.LT.31) THEN
               GO TO (101,1,2),KWL+1
            ELSE
               GO TO (31,32,33,101,35),KWL-30
            ENDIF
            GO TO 101

C  WATER INJECTION WELL, BHP SPECIFIED (TYPE 1)

    1       LINSYSW(IW)=0
            BHP=PQ
            WELBHP(IW)=BHP
            IF (NEWT.EQ.1) THEN
               IF (WELDEN(IW).LE.0.D0) WELDEN(IW)=WV4W/WELVEC(1,IW)
               CALL WBD1P (.FALSE.,WELDEN(IW),BHP,WATCMP,WHL,WATDEN,
     &            WV4W,WV5W,WV6W,DUB1)
            ENDIF
            WBDEN=WELDEN(IW)
            QW=WV4W*BHP+WV5W*WBDEN-WV6W
            IF (NEWT.LT.4.OR.QW.LT.0.D0) QWOC(IW)=QW
            GO TO 103

C  WATER INJECTION WELL, TOTAL MASS RATE SPECIFIED (TYPE 2)

    2       LINSYSW(IW)=1
            IF (WELDEN(IW).LE.0.D0) THEN
               WELDEN(IW)=WV4W/WELVEC(1,IW)
               WELBHP(IW)=(PQ-WV5W*WELDEN(IW)+WV6W)/WV4W
            ENDIF
            CALL WBD1P(.TRUE.,WELDEN(IW),WELBHP(IW),WATCMP,
     &         WHL,WATDEN,WV4W,WV5W,WV6W,PQ)

            IF (WELBHP(IW).GT.PLIMIT(IW).AND.PLIMIT(IW).GT.0.) THEN
               KWL=1
               PQ=PLIMIT(IW)
               GO TO 1
            ENDIF

            WBDEN=WELDEN(IW)
            BHP=WELBHP(IW)
            DDWBDP=WATCMP*WBDEN
            DDWBDP=DDWBDP/(1.D0-WHL*DDWBDP)
            QWOC(IW)=PQ
            QW=WV4W*BHP+WV5W*WBDEN-WV6W
            QRESID(IW)=DELTIM*(QW-PQ)
            QCOFN(1,IW)=-DELTIM*(WV4W+WV5W*DDWBDP)
            GO TO 103

C  PRODUCTION WELL, BHP SPECIFIED (TYPE 31)

   31       IF (NEWT.EQ.1) WELBHP(IW)=PQ
            BHP=WELBHP(IW)
            IF (WELDEN(IW).LE.0.D0) WELDEN(IW)=(WV4W+WV4O)
     &         /(WELVEC(1,IW)+WELVEC(7,IW))
            WBDEN=WELDEN(IW)

            DO 106 IRF=1,8
            QW=WV4W*BHP+WV5W*WBDEN-WV6W
            QO=WV4O*BHP+WV5O*WBDEN-WV6O
            IF (QW.GT.0.D0.OR.QO.GT.0.D0) THEN
               DUB1=1.D0-IRF*.00008D0
               IF (QW.GT.QO) THEN
c                 BHP=DUB1*(WV6W-WV5W*WBDEN)/WV4W
                  CALL WBD1P (.FALSE.,WBDEN,BHP,OILCMP,WHL,
     &               OILDEN,WV4O,WV5O,WV6O,DUB3)
               ELSE
c                 BHP=DUB1*(WV6O-WV5O*WBDEN)/WV4O
                  CALL WBD1P (.FALSE.,WBDEN,BHP,WATCMP,WHL,
     &               WATDEN,WV4W,WV5W,WV6W,DUB3)
               ENDIF
            ELSE
               CALL WBD2P (1,WBDEN,BHP,WHL,WV4W,WV5W,WV6W,
     &            WV4O,WV5O,WV6O,DUB3,CFRW,DDWBDP)
               QW=WV4W*BHP+WV5W*WBDEN-WV6W
               QO=WV4O*BHP+WV5O*WBDEN-WV6O
               IF (QW.LE.0.D0.AND.QO.LE.0.D0) GO TO 107
            ENDIF
  106       CONTINUE

  107       WELDEN(IW)=WBDEN
            WELBHP(IW)=BHP
            GO TO 103

C  PRODUCTION WELLS, MASS RATE SPECIFIED
C  NOTE THAT THE RATE IS -PQ FOR PRODUCTION RATES AND THAT PQ HAS THE MASS
C  UNITS OF WATER

C  PRODUCTION, TOTAL MASS RATE SPECIFIED (TYPE 32)

   32       KR=2
            IF (WELDEN(IW).LE.0.D0) THEN
               WELDEN(IW)=(WV4W+WV4O)/(WELVEC(1,IW)+WELVEC(7,IW))
               WELBHP(IW)=(WV6W+CFRW*WV6O-(WV5W+CFRW*WV5O)*WELDEN(IW)
     &            -PQ)/(WV4W+CFRW*WV4O)
            ENDIF
            GO TO 104

C  PRODUCTION, OIL MASS RATE SPECIFIED (TYPE 33)

   33       KR=3
            IF (WELDEN(IW).LE.0.D0) THEN
               WELDEN(IW)=(WV4W+WV4O)/(WELVEC(1,IW)+WELVEC(7,IW))
               WELBHP(IW)=(WV6O-WV5O*WELDEN(IW)-PQ/CFRW)/WV4O
            ENDIF
            GO TO 104
            
C  PRODUCTION, WATER MASS RATE SPECIFIED (TYPE 35)

   35       KR=4
            IF (WELDEN(IW).LE.0.D0) THEN
               WELDEN(IW)=(WV4W+WV4O)/(WELVEC(1,IW)+WELVEC(7,IW))
               WELBHP(IW)=(WV6W-WV5W*WELDEN(IW)-PQ)/WV4W
            ENDIF
            GO TO 104

C  GENERIC RATE SPECIFIED PRODUCTION WELL (TYPES 32,33,35)

  104       LINSYSW(IW)=1
            WBDEN=WELDEN(IW)
            BHP=WELBHP(IW)

            DO 109 IRF=1,5
            QW=WV4W*BHP+WV5W*WBDEN-WV6W
            QO=WV4O*BHP+WV5O*WBDEN-WV6O
            IF (QW.GT.0.D0.OR.QO.GT.0.D0) THEN
               DUB1=1.D0-IRF*.00008D0
               IF (QW.GT.QO) THEN
                  BHP=DUB1*(WV6W-WV5W*WBDEN)/WV4W
                  CALL WBD1P (.FALSE.,WBDEN,BHP,OILCMP,WHL,
     &            OILDEN,WV4O,WV5O,WV6O,DUB3)
               ELSE
                  BHP=DUB1*(WV6O-WV5O*WBDEN)/WV4O
                  CALL WBD1P (.FALSE.,WBDEN,BHP,WATCMP,WHL,
     &            WATDEN,WV4W,WV5W,WV6W,DUB3)
               ENDIF
               QW=WV4W*BHP+WV5W*WBDEN-WV6W
               QO=WV4O*BHP+WV5O*WBDEN-WV6O
               IF (KR.EQ.2) PQ=-QW-QO*CFRW
               IF (KR.EQ.3) PQ=-QO*CFRW
               IF (KR.EQ.4) PQ=-QW
               SPQ(IW)=PQ
            ELSE
               CALL WBD2P (KR,WBDEN,BHP,WHL,WV4W,WV5W,WV6W,
     &            WV4O,WV5O,WV6O,-PQ,CFRW,DDWBDP)
               QW=WV4W*BHP+WV5W*WBDEN-WV6W
               QO=WV4O*BHP+WV5O*WBDEN-WV6O
               IF (QW.LE.0.D0.AND.QO.LE.0.D0) GO TO 110
            ENDIF
  109       CONTINUE

            WRITE (NFOUT,733) QO,QW,IW
  733       FORMAT(' ERROR # 2005 - WELL FLOW ITERATION FAILED'/
     &         ' Qo =',G13.6,' Qw =',G13.6,' WELL =',I4)
            STOP 13

  110       IF (BHP.LT.PLIMIT(IW).AND.PLIMIT(IW).GT.0.) THEN
               KWL=31
               PQ=PLIMIT(IW)
               SPQ(IW)=PQ
               GO TO 31
            ENDIF

            WELDEN(IW)=WBDEN
            WELBHP(IW)=BHP
            DDWBDP=DDWBDP/(1.D0-WHL*DDWBDP)
            GO TO (132,133,135) KR-1

  132       QRESID(IW)=DELTIM*(CFRW*QO+QW+PQ)
            QCOFN(1,IW)=-DELTIM*(WV4W+CFRW*WV4O+
     &         (WV5W+CFRW*WV5O)*DDWBDP)
            GO TO 103

  133       QRESID(IW)=DELTIM*(CFRW*QO+PQ)
            QCOFN(1,IW)=-DELTIM*CFRW*(WV4O+WV5O*DDWBDP)
            GO TO 103

  135       QRESID(IW)=DELTIM*(QW+PQ)
            QCOFN(1,IW)=-DELTIM*(WV4W+WV5W*DDWBDP)
            GO TO 103

C  END OF ONCE PER WELL CALCULATIONS

  103       WELIPC(5,IW)=BHP
            IF (LINSYSW(IW).NE.0) THEN
               DWELBHP(IW)=0.D0
               DWELDEN(IW)=0.D0
               DRESID(IW)=0.D0
               DCOFN(1,IW)=0.D0
               DCOFN(2,IW)=1.D0
               QCOFN(2,IW)=0.D0
            ENDIF
         ENDIF

C  SET LOCAL GRID INDEXES, TEST KEYOUT, AND DEFINE SOME VARIABLES

         I=LOCWEL(3,L,IW)-IOFF
         J=LOCWEL(4,L,IW)-JOFF
         K=LOCWEL(5,L,IW)-KOFF
         IF (KEYOUT(I,J,K).LT.1) GO TO 102
         DNO=DDENS(I,J,K,1)
         DNW=DDENS(I,J,K,2)
         DTOB=GRAV*(ELEDEP(L,IW)-DEPBOT(IW))
         DTOE=GRAV*(ELEDEP(L,IW)-DEPTH(I,J,K))
         PWB=BHP+WBDEN*DTOB
         RPW=RELPRM(I,J,K,3)
         DRPW=RELPRM(I,J,K,4)
         DCOFW(1,L,IW)=0.D0
         DCOFW(2,L,IW)=0.D0
         VCOFD(1,L,IW)=0.D0
         VCOFD(2,L,IW)=0.D0

C  BRANCH ON WELL TYPE

         IF (KWL.LT.31) THEN
            GO TO (101,202,202),KWL+1
         ELSE
            GO TO (232,232,232,101,232),KWL-30
         ENDIF
         GO TO 101

C  WATER INJECTION WELL, GENERIC (TYPES 1 AND 2)

  202    IF (QWOC(IW).LE.0.D0) THEN
cgp : warning
            IF(L.EQ.1) WRITE(*,'(2(A,I2),A)')'Warning: Blk ',NBLK,
     &                     ' Inj Wel ',IW,' is shut-off'
            GO TO 102
         ENDIF
         DWP=PWB-PWAT(I,J,K)-DNW*DTOE
         IF (KWPERM(IW).EQ.1) THEN
            IF (RPW.LT.PRMMN) RPW=PRMMN
         ELSE
            IF (RPW.LT.RELPRM(I,J,K,1)) THEN
               RPW=RELPRM(I,J,K,1)
               DRPW=RELPRM(I,J,K,2)
            ENDIF
         ENDIF
         DRPW = 0.D0
         DUB1=CDT*ELECONS(L,IW)*DNW/WATVIS
         DUB2=DPCSW(I,J,K)
         DUB3=OILCMP*COIL(I,J,K)/DNO
         DUB4=1.D0-DUB2*DUB3
         DUB5=RPW*(1.D0+WATCMP*DNW*DTOE)
CGUS NEED TO REMOVE DRPW TERM IN BETWP BELOW
C         BETWP=DUB1*((WATCMP*RPW*DUB4+DUB3*DRPW)*DWP-DUB4*DUB5)
         BETWP=DUB1*((WATCMP*RPW*DUB4)*DWP-DUB4*DUB5)
         BETWN=DUB1*((WATCMP*RPW*DUB2-DRPW)*DWP-DUB2*DUB5)/DNO
         COF(I,J,K,1,2)=COF(I,J,K,1,2)-BETWP
C         COF(I,J,K,1,2,2)=COF(I,J,K,1,2,2)-BETWN
         QW=DUB1*RPW*DWP
         RESID(I,J,K,2)=RESID(I,J,K,2)-QW
         WELIPC(3,IW)=WELIPC(3,IW)+QW
$TRCHEM         VOLRATE(1,L,IW) = QW/DNW

         IF (LINSYSW(IW).EQ.0) GO TO 102
         QCOFW(1,L,IW)=-BETWP
         QCOFW(2,L,IW)=-BETWN
         VCOFQ(2,L,IW)=-DUB1*RPW*(1.D0+DTOB*DDWBDP)
         VCOFQ(1,L,IW)=0.D0
         GO TO 102

C  PRODUCTION WELL, GENERIC  (TYPES 31,32,33,35)

  232    DWP=PWB-PWAT(I,J,K)-DNW*DTOE
         DUB1=CDT*ELECONS(L,IW)*DNW/WATVIS
         DUB2=DPCSW(I,J,K)
         DUB3=OILCMP*COIL(I,J,K)/DNO
         DUB4=1.D0-DUB2*DUB3
         DUB5=RPW*(1.D0+WATCMP*DNW*DTOE)
C         BETWP=DUB1*((WATCMP*RPW*DUB4+DUB3*DRPW)*DWP-DUB4*DUB5)
         BETWP=DUB1*((WATCMP*RPW*DUB4)*DWP-DUB4*DUB5)
         BETWN=DUB1*((WATCMP*RPW*DUB2-DRPW)*DWP-DUB2*DUB5)/DNO
         COF(I,J,K,1,2)=COF(I,J,K,1,2)-BETWP
C         COF(I,J,K,1,2,2)=COF(I,J,K,1,2,2)-BETWN
         QW=DUB1*RPW*DWP
         RESID(I,J,K,2)=RESID(I,J,K,2)-QW
         WELIPC(4,IW)=WELIPC(4,IW)-QW
$TRCHEM         VOLRATE(1,L,IW) = QW/DNW

         RPO=RELPRM(I,J,K,1)
         DRPO=RELPRM(I,J,K,2)
         DOP=PWB-POIL(I,J,K)-DNO*DTOE
         DUB2=CDT*ELECONS(L,IW)/OILVIS
         BETOP=DUB2*DNO*(OILCMP*(RPO+COIL(I,J,K)*DRPO/DNO)
     &      -RPO*(1.D0+OILCMP*DNO*DTOE))
         BETON=-DUB2*DRPO*DOP
         COF(I,J,K,1,1)=COF(I,J,K,1,1)-BETOP
CGUS         COF(I,J,K,1,1,2)=COF(I,J,K,1,1,2)-BETON
         QO=DUB2*DNO*RPO*DOP
         RESID(I,J,K,1)=RESID(I,J,K,1)-QO
         WELIPC(2,IW)=WELIPC(2,IW)-QO
$TRCHEM         VOLRATE(2,L,IW) = QO/DNO

         IF (LINSYSW(IW).EQ.0) GO TO 102
         DUB3=1.D0+DTOB*DDWBDP
         VCOFQ(1,L,IW)=-DUB2*DNO*RPO*DUB3
         VCOFQ(2,L,IW)=-DUB1*RPW*DUB3

         GO TO (832,833,835) KR-1

  832    QCOFW(1,L,IW)=-BETWP-CFRW*BETOP
         QCOFW(2,L,IW)=-BETWN-CFRW*BETON
         GO TO 102

  833    QCOFW(1,L,IW)=-CFRW*BETOP
         QCOFW(2,L,IW)=-CFRW*BETON
         GO TO 102

  835    QCOFW(1,L,IW)=-BETWP
         QCOFW(2,L,IW)=-BETWN
         GO TO 102

      ENDIF
  102 CONTINUE

      IF((NHISUSE == 0).AND.(NSTEP < 1)) GO TO 101

      IF (BUGKEY(8).AND..NOT.LK.AND.KWL.NE.0) THEN
         IF (KWL.LT.31) THEN
            WRITE (NFBUG,171) IW,BHP,WBDEN,WELIPC(3,IW)
  171       FORMAT(' WELL',I4,', BHP',F10.3,', WBDEN',F10.4,', QWI',
     &        G12.5)
         ELSE
            WRITE (NFBUG,173) IW,BHP,WBDEN,WELIPC(2,IW),WELIPC(4,IW)
  173       FORMAT(' WELL',I4,', BHP',F10.3,', WBDEN',F10.4,', QWP',
     &         G12.5,', QOP',G12.5)
         ENDIF
      ENDIF

  101 CONTINUE

      END
C*********************************************************************
      SUBROUTINE HWELSUM(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                   KEYOUT,NBLK,DEPTH,POIL,PWAT,DDENS,RELPRM)
C*********************************************************************
 
C  ROUTINE EVALUATES SUMS REQUIRED FOR WELLBORE CALCULATIONS.
C  THIS IS A WORK ROUTINE.

C  DEPTH(I,J,K) = GRID ELEMENT CENTER DEPTH, FT (INPUT, REAL*8)

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT, REAL*8)

C  PWAT(I,J,K) = WATER PRESSURE, PSI (INPUT, REAL*8)

C  DDENS(I,J,K,1) = OIL DENSITY, LB/CU-FT (INPUT, REAL*8)
C  DDENS(I,J,K,2) = WATER DENSITY, LB/CU-FT (INPUT, REAL*8)

C  RELPRM(I,J,K,1) = OIL RELATIVE PERMEABILITY (INPUT, REAL*8)
C  RELPRM(I,J,K,2) = DERIVATIVE OF OIL RELATIVE PERMEABILITY WRT Sw
C  RELPRM(I,J,K,3) = WATER RELATIVE PERMEABILITY
C  RELPRM(I,J,K,4) = DERIVATIVE OF WATER RELATIVE PERMEABILITY WRT Sw

C*********************************************************************
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'wells.h'
      INCLUDE 'layout.h'

      INCLUDE 'hfluids.h'
      INCLUDE 'hbaldat.h'

      INTEGER JL1V(KDIM),JL2V(KDIM),     KEYOUT(IDIM,JDIM,KDIM)
      REAL*8 DEPTH(IDIM,JDIM,KDIM),        POIL(IDIM,JDIM,KDIM),
     &       PWAT(IDIM,JDIM,KDIM),         DDENS(IDIM,JDIM,KDIM,2),
     &       RELPRM(IDIM,JDIM,KDIM,4)

      REAL*8 FAC,DEN,DTOB,DTOE,P,RPW,RPO,CVF
      DATA PRMMN/.05/

C bag8 - CVF = sq-ft cp / md psi day
      CVF = CONV_FACTOR

      IF (LEVELE.AND.BUGKEY(1)) WRITE (NFBUG,*)'PROC',MYPRC,
     & ', BLOCK',NBLK,' ENTERING SUBROUTINE HWELSUM'

C  GET LOCAL TO GLOBAL INDEX OFFSETS

      CALL BLKOFF(NBLK,IOFF,JOFF,KOFF,MERR)

C  LOOP OVER THE WELLS FORMING SUMS

      DO 1 IW=1,NUMWEL
      IF (MODWEL(IW).NE.MODACT)
     &   GO TO 1
      DO 2 L=1,NUMELE(IW)
      IF (LOCWEL(6,L,IW).NE.MYPRC.OR.LOCWEL(1,L,IW).NE.NBLK) GO TO 2
      I=LOCWEL(3,L,IW)-IOFF
      J=LOCWEL(4,L,IW)-JOFF
      K=LOCWEL(5,L,IW)-KOFF
      IF (KEYOUT(I,J,K).LT.1) GO TO 2

      RPO=RELPRM(I,J,K,1)
      RPW=RELPRM(I,J,K,3)
      IF (KWELL(IW).LT.30) THEN
         IF (KWPERM(IW).EQ.1) THEN
            IF (RPW.LT.PRMMN) RPW=PRMMN
         ELSE
            IF (RPW.LT.RELPRM(I,J,K,1)) RPW=RELPRM(I,J,K,1)
         ENDIF
      ENDIF
      DTOB=GRAV*(ELEDEP(L,IW)-DEPBOT(IW))
      DTOE=GRAV*(ELEDEP(L,IW)-DEPTH(I,J,K))

      FAC=CVF*ELECONS(L,IW)*RPW/WATVIS
      DEN=DDENS(I,J,K,2)
      P=FAC*(PWAT(I,J,K)+DEN*DTOE)
      WELVEC(1,IW)=WELVEC(1,IW)+FAC
      WELVEC(2,IW)=WELVEC(2,IW)+FAC*DTOB
      WELVEC(3,IW)=WELVEC(3,IW)+P
      WELVEC(4,IW)=WELVEC(4,IW)+FAC*DEN
      WELVEC(5,IW)=WELVEC(5,IW)+FAC*DTOB*DEN
      WELVEC(6,IW)=WELVEC(6,IW)+P*DEN

      FAC=CVF*ELECONS(L,IW)*RPO/OILVIS
      DEN=DDENS(I,J,K,1)
      P=FAC*(POIL(I,J,K)+DEN*DTOE)
      WELVEC(7,IW)=WELVEC(7,IW)+FAC
      WELVEC(8,IW)=WELVEC(8,IW)+FAC*DTOB
      WELVEC(9,IW)=WELVEC(9,IW)+P
      WELVEC(10,IW)=WELVEC(10,IW)+FAC*DEN
      WELVEC(11,IW)=WELVEC(11,IW)+FAC*DTOB*DEN
      WELVEC(12,IW)=WELVEC(12,IW)+P*DEN

    2 CONTINUE
    1 CONTINUE

      END
C*********************************************************************
      SUBROUTINE HWDATA (NERR,KINP)
C*********************************************************************

C  Inputs hydrology model well data (both initial and transient)

C  NERR = Error number stepped by 1 on error (input & output, INTEGER)

C  KINP = Input type
C       = 1 ==> initial data
C       = 2 ==> transient data

C*********************************************************************

      INCLUDE 'control.h'
      INCLUDE 'wells.h'

      DUMMY=1.

      RETURN
      END
C*********************************************************************
      SUBROUTINE WBD1P (DOBHP,D,P,C,H,DR,W4,W5,W6,Q)
C*********************************************************************

C  Computes wellbore density and optionally bottom hole pressure when
C  there is a single phase in the wellbore.

C  DOBHP = TRUE  ==> Calculate BHP (input, LOGICAL)
C        = FALSE ==> BHP constant

C  D = Wellbore density (input and output, REAL*8)

C  P = Bottom-hole pressure (input and output, REAL*8)

C  C = Fluid compressability (input, REAL*4)

C  H = Gravity factor (input, REAL*8)

C  DR = Reference density (input, REAL*4)

C  W4,W5,W6 = Well sums (input, REAL*8) (DOBHP=TRUE)

C  Q = Flow rate for rate specified wells (input, REAL*8) (DOBHP=TRUE)

C*********************************************************************

      INCLUDE 'control.h'
      INCLUDE 'wells.h'

      LOGICAL DOBHP
      REAL*8 D,P,H,DUB1,DUB2,DUB3,FF,DFF,DN,W4,W5,W6,Q

      IF (DOBHP) THEN
         DUB2=(Q+W6)/W4
         DUB3=H-W5/W4
      ELSE
         DUB2=P
         DUB3=H
      ENDIF

      DO 1 II=1,10
      DUB1=C*(DUB2+DUB3*D)
      DN=((((((1.38888889D-3*DUB1+8.333333333D-3)*DUB1
     &   +4.1666666667D-2)*DUB1+.166666666667D0)*DUB1+.5D0)
     &   *DUB1+1.D0)*DUB1+1.D0)*DR
      FF=D-DN
      DFF=1.D0-C*DN*DUB3
      DUB1=FF/DFF
      IF (DUB1.GT.3.D0) DUB1=3.D0
      IF (DUB1.LT.-3.D0) DUB1=-3.D0
      D=D-DUB1
      IF (ABS(DUB1).LT..5D-6*D) GO TO 2
    1 CONTINUE

      WRITE (NFOUT,3) D,FF
    3 FORMAT(' ERROR # 2004 - DENSITY ITERATION FAILED, D =',G15.8,
     & ' DD =',G13.6)
      STOP 13

    2 IF (DOBHP) P=(Q-W5*D+W6)/W4

      END
C*********************************************************************
      SUBROUTINE WBD2P (K,D,P,H,W4W,W5W,W6W,W4O,W5O,W6O,
     &   Q,CFRW,DDWBDP)
C*********************************************************************

C  Computes wellbore density and optionally bottom hole pressure when
C  there are two phases in the wellbore (PRODUCTION WELLS ONLY)

C  K = 1 ==> BHP specified (input, INTEGER)
C    = 2 ==> Total rate specified
C    = 3 ==> Oil rate specified
C    = 4 ==> Water rate specified

C  D = Wellbore density (input and output, REAL*8)

C  P = Bottom-hole pressure (input and output, REAL*8)

C  H = Gravity factor correcting to mid wellbore  (input, REAL*8)

C  W4W,W5W,W6W = Well sums (input, REAL*8)
C  W4O,W5O,W6O

C  Q = Flow rate for rate specified wells (input, REAL*8) (K>1)

C  CFRW = Conversion factor of oil to water for rate specified wells
C         (input, REAL*8) (K>1)

C  DDWBDP = Derivative of wellbore density wrt average wellbore pressure
C           (rates held constant) (output, REAL*8)
C*********************************************************************

      INCLUDE 'control.h'
      INCLUDE 'wells.h'

      INCLUDE 'hfluids.h'

      REAL*8 D,P,H,DUB1,FF,DFF,W4W,W5W,W6W,W4O,W5O,W6O,W4T,W5T,W6T,
     &   Q,AA,BA,CFW,CFO,DFW,DFO,DT,DNWWB,DNOWB,CFRW,DDWBDP,QW,QO,DD
      LOGICAL C

      GO TO (1,2,3,4),K

    1 AA=P
      BA=H
      CFW=W4W*P-W6W
      CFO=W4O*P-W6O
      DFW=W5W
      DFO=W5O
      GO TO 5

    2 W4T=W4W+CFRW*W4O
      W5T=W5W+CFRW*W5O
      W6T=W6W+CFRW*W6O
      AA=(Q+W6T)/W4T
      BA=H-W5T/W4T
      CFW=W4W*AA-W6W
      CFO=W4O*AA-W6O
      DFW=W5W-W4W*W5T/W4T
      DFO=W5O-W4O*W5T/W4T
      GO TO 5

    3 W4T=CFRW*W4O
      W5T=CFRW*W5O
      W6T=CFRW*W6O
      AA=(Q+W6T)/W4T
      BA=H-W5T/W4T
      CFW=W4W*AA-W6W
      CFO=W4O*AA-W6O
      DFW=W5W-W4W*W5T/W4T
      DFO=W5O-W4O*W5T/W4T
      GO TO 5

    4 W4T=W4W
      W5T=W5W
      W6T=W6W
      AA=(Q+W6T)/W4T
      BA=H-W5T/W4T
      CFW=W4W*AA-W6W
      CFO=W4O*AA-W6O
      DFW=W5W-W4W*W5T/W4T
      DFO=W5O-W4O*W5T/W4T

    5 DT=DFW+DFO
      C=.FALSE.

      DO 10 II=1,15
      IF (K.NE.1) P=AA-D*W5T/W4T
      DUB1=WATCMP*(P+H*D)
      DNWWB=((((((1.38888889D-3*DUB1+8.333333333D-3)*DUB1
     &   +4.1666666667D-2)*DUB1+.166666666667D0)*DUB1+.5D0)
     &   *DUB1+1.D0)*DUB1+1.D0)*WATDEN
      DUB1=OILCMP*(P+H*D)
      DNOWB=((((((1.38888889D-3*DUB1+8.333333333D-3)*DUB1
     &   +4.1666666667D-2)*DUB1+.166666666667D0)*DUB1+.5D0)
     &   *DUB1+1.D0)*DUB1+1.D0)*OILDEN
      QW=CFW+DFW*D
      QO=CFO+DFO*D
      IF (C) GO TO 11
      DUB1=QW/DNWWB+QO/DNOWB
      FF=D-(QW+QO)/DUB1
      DFF=1.D0-(DT*DUB1-(QW+QO)*((DFW-QW*WATCMP*BA)/DNWWB
     &   +(DFO-QO*OILCMP*BA)/DNOWB))/(DUB1*DUB1)
      IF (ABS(DFF).LT..1D0) THEN
         IF (DFF.GE.0.D0) THEN
            DFF=.1D0
         ELSE
            DFF=-.1D0
         ENDIF
      ENDIF
      DD=FF/DFF
      IF (DD.GT.3.D0) DD=3.D0
      IF (DD.LT.-3.D0) DD=-3.D0
      D=D-DD
      IF (ABS(DD).LT.1.D-6*D) C=.TRUE.
   10 CONTINUE

      IF (ABS(DD).GT.1.D-4*D) THEN
         WRITE (NFOUT,13) D,FF
   13    FORMAT(' ERROR # 2003 - WELL DENSITY ITERATION FAILED, D =',
     &      G15.8,' DD =',G11.4)
         STOP 13
      ENDIF

   11 IF (K.NE.1) P=AA-D*W5T/W4T
      DDWBDP=D*(WATCMP*QW/DNWWB+OILCMP*QO/DNOWB)/(QW/DNWWB+QO/DNOWB)

      END

