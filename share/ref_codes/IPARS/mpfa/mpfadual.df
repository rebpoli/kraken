c======================================================================
c mpfadual.df - This file contains subroutines for multiblock hexahedra
c  using the enhanced velocity and local flux methods.
c
c 12/03/15 Ben Ganis - created this file
c
c======================================================================

C======================================================================
c bag8 - modify VOLPROP and FACEPROP for evfem_hex=3 case
c======================================================================
      subroutine calcMPFAdual3(idim,jdim,kdim,ldim,il1,il2,jl1v,jl2v,
     &     kl1,kl2,keyout,nblk,volprop,faceprop)
c======================================================================
      implicit none
      include 'boundary.h'
      include 'control.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'layout.h'
      INCLUDE 'mpfaary.h'

      integer idim,jdim,kdim,ldim,il1,il2,jl1v(kdim),jl2v(kdim),
     &        kl1,kl2,keyout,nblk
      integer volprop(idim+1,jdim+1,kdim+1,8)
      integer faceprop(idim+1,jdim+1,kdim+1,12)
      integer K1,K2,K,J1,J2,IA,JA,KA,J,L,KD,
     &        ITEMP,JTEMP,KTEMP,IVAL

! Set FACEPROP for local flux implementation

      IVAL=2              ! For TMLOCALFLUX_BC

      IF (NIEBS(NBLK).GT.0) THEN
        K1=IIEBS(NBLK)
        K2=K1+NIEBS(NBLK)-1
        DO K=K1,K2
        J1=ICGES(K)
        J2=J1+NCGES(K)-1
        IA=IJKS(1,K)
        JA=IJKS(2,K)
        KA=IJKS(3,K)
        DO J=J1,J2
        L=LIBUF(J)
        KD=KDIRS(J)
        IF ((KD.EQ.1).OR.(KD.EQ.4)) THEN
          IF (KD.EQ.1) THEN
            ITEMP = IA + 1
          ELSE
            ITEMP = IA
          ENDIF
          FACEPROP(ITEMP,JA,KA,11)=IVAL
          FACEPROP(ITEMP,JA+1,KA,9)=IVAL
          FACEPROP(ITEMP,JA+1,KA+1,1)=IVAL
          FACEPROP(ITEMP,JA,KA+1,3)=IVAL
        ELSEIF ((KD.EQ.2).OR.(KD.EQ.5)) THEN
          IF (KD.EQ.2) THEN
            JTEMP = JA + 1
          ELSE
            JTEMP = JA
          ENDIF
          FACEPROP(IA,JTEMP,KA,10)=IVAL
          FACEPROP(IA+1,JTEMP,KA,12)=IVAL
          FACEPROP(IA+1,JTEMP,KA+1,4)=IVAL
          FACEPROP(IA,JTEMP,KA+1,2)=IVAL
        ELSEIF ((KD.EQ.3).OR.(KD.EQ.6)) THEN
          IF (KD.EQ.3) THEN
            KTEMP = KA + 1
          ELSE
            KTEMP = KA
          ENDIF
          FACEPROP(IA,JA,KTEMP,7)=IVAL
          FACEPROP(IA+1,JA,KTEMP,8)=IVAL
          FACEPROP(IA+1,JA+1,KTEMP,5)=IVAL
          FACEPROP(IA,JA+1,KTEMP,6)=IVAL
        ENDIF
        ENDDO
        ENDDO
      ENDIF

      return
      end

C======================================================================
c bag8 - modify VOLPROP and FACEPROP for evfem_hex=5 case
C======================================================================
      SUBROUTINE CALCMPFADUAL5(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,
     &     KL1,KL2,KEYOUT,NBLK,VOLPROP,FACEPROP)
C======================================================================
      IMPLICIT NONE
      INCLUDE 'boundary.h'
      INCLUDE 'control.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'layout.h'
      INCLUDE 'mpfaary.h'

      INTEGER IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V(KDIM),JL2V(KDIM),
     &        KL1,KL2,KEYOUT,NBLK
      INTEGER VOLPROP(IDIM+1,JDIM+1,KDIM+1,8)
      INTEGER FACEPROP(IDIM+1,JDIM+1,KDIM+1,12)
      INTEGER K1,K2,K,J1,J2,IA,JA,KA,J,L,KD,I,F,B,
     &        ITEMP,JTEMP,KTEMP,IVAL,IB,NTYPE,NFOFF,
     &        IOFF,JOFF,KOFF
      INTEGER ILOF(4),IHIF(4),IFAC
      INTEGER GROUP(6,4),G,V,NM1,N5,N6,M1(2)

! Set FACEPROP for local flux implementation

      IVAL=DUALFACE       ! For TMLOCALFLUX_JACOBI

      IF (NIEBS(NBLK).GT.0) THEN
        K1=IIEBS(NBLK)
        K2=K1+NIEBS(NBLK)-1
        DO K=K1,K2
        J1=ICGES(K)
        J2=J1+NCGES(K)-1
        IA=IJKS(1,K)
        JA=IJKS(2,K)
        KA=IJKS(3,K)
        DO J=J1,J2
        L=LIBUF(J)
        KD=KDIRS(J)

        IF ((KD.EQ.1).OR.(KD.EQ.4)) THEN
          IF (KD.EQ.1) THEN
            ITEMP = IA + 1
          ELSE
            ITEMP = IA
          ENDIF
          VOLPROP(ITEMP,JA,KA,8)=5
          VOLPROP(ITEMP,JA+1,KA,5)=5
          VOLPROP(ITEMP,JA+1,KA+1,1)=5
          VOLPROP(ITEMP,JA,KA+1,4)=5
          VOLPROP(ITEMP,JA,KA,7)=5
          VOLPROP(ITEMP,JA+1,KA,6)=5
          VOLPROP(ITEMP,JA+1,KA+1,2)=5
          VOLPROP(ITEMP,JA,KA+1,3)=5
          FACEPROP(ITEMP,JA,KA,11)=IVAL
          FACEPROP(ITEMP,JA+1,KA,9)=IVAL
          FACEPROP(ITEMP,JA+1,KA+1,1)=IVAL
          FACEPROP(ITEMP,JA,KA+1,3)=IVAL
          IF (KD.EQ.1) THEN
            ILOF=[8,5,4,12]
            IHIF=[7,6,2,10]
            DO IFAC=1,4
              IF (FACEPROP(ITEMP,JA,KA,ILOF(IFAC)).EQ.0)
     &          FACEPROP(ITEMP,JA,KA,IHIF(IFAC)) = 6
              IF (FACEPROP(ITEMP,JA+1,KA,ILOF(IFAC)).EQ.0)
     &          FACEPROP(ITEMP,JA+1,KA,IHIF(IFAC)) = 6
              IF (FACEPROP(ITEMP,JA+1,KA+1,ILOF(IFAC)).EQ.0)
     &          FACEPROP(ITEMP,JA+1,KA+1,IHIF(IFAC)) = 6
              IF (FACEPROP(ITEMP,JA,KA+1,ILOF(IFAC)).EQ.0)
     &          FACEPROP(ITEMP,JA,KA+1,IHIF(IFAC)) = 6

              IF (FACEPROP(ITEMP,JA,KA,ILOF(IFAC)).EQ.2)
     &          FACEPROP(ITEMP,JA,KA,IHIF(IFAC)) = 2
              IF (FACEPROP(ITEMP,JA+1,KA,ILOF(IFAC)).EQ.2)
     &          FACEPROP(ITEMP,JA+1,KA,IHIF(IFAC)) = 2
              IF (FACEPROP(ITEMP,JA+1,KA+1,ILOF(IFAC)).EQ.2)
     &          FACEPROP(ITEMP,JA+1,KA+1,IHIF(IFAC)) = 2
              IF (FACEPROP(ITEMP,JA,KA+1,ILOF(IFAC)).EQ.2)
     &          FACEPROP(ITEMP,JA,KA+1,IHIF(IFAC)) = 2
            ENDDO
          ELSE
            ILOF=[8,5,4,12]
            IHIF=[7,6,2,10]
            DO IFAC=1,4
              IF (FACEPROP(ITEMP,JA,KA,IHIF(IFAC)).EQ.0)
     &          FACEPROP(ITEMP,JA,KA,ILOF(IFAC)) = 6
              IF (FACEPROP(ITEMP,JA+1,KA,IHIF(IFAC)).EQ.0)
     &          FACEPROP(ITEMP,JA+1,KA,ILOF(IFAC)) = 6
              IF (FACEPROP(ITEMP,JA+1,KA+1,IHIF(IFAC)).EQ.0)
     &          FACEPROP(ITEMP,JA+1,KA+1,ILOF(IFAC)) = 6
              IF (FACEPROP(ITEMP,JA,KA+1,IHIF(IFAC)).EQ.0)
     &          FACEPROP(ITEMP,JA,KA+1,ILOF(IFAC)) = 6

              IF (FACEPROP(ITEMP,JA,KA,IHIF(IFAC)).EQ.2)
     &          FACEPROP(ITEMP,JA,KA,ILOF(IFAC)) = 2
              IF (FACEPROP(ITEMP,JA+1,KA,IHIF(IFAC)).EQ.2)
     &          FACEPROP(ITEMP,JA+1,KA,ILOF(IFAC)) = 2
              IF (FACEPROP(ITEMP,JA+1,KA+1,IHIF(IFAC)).EQ.2)
     &          FACEPROP(ITEMP,JA+1,KA+1,ILOF(IFAC)) = 2
              IF (FACEPROP(ITEMP,JA,KA+1,IHIF(IFAC)).EQ.2)
     &          FACEPROP(ITEMP,JA,KA+1,ILOF(IFAC)) = 2
            ENDDO
          ENDIF

        ELSEIF ((KD.EQ.2).OR.(KD.EQ.5)) THEN
          IF (KD.EQ.2) THEN
            JTEMP = JA + 1
          ELSE
            JTEMP = JA
          ENDIF
          VOLPROP(IA,JTEMP,KA,7)=5
          VOLPROP(IA+1,JTEMP,KA,8)=5
          VOLPROP(IA+1,JTEMP,KA+1,4)=5
          VOLPROP(IA,JTEMP,KA+1,3)=5
          VOLPROP(IA,JTEMP,KA,6)=5
          VOLPROP(IA+1,JTEMP,KA,5)=5
          VOLPROP(IA+1,JTEMP,KA+1,1)=5
          VOLPROP(IA,JTEMP,KA+1,2)=5
          FACEPROP(IA,JTEMP,KA,10)=IVAL
          FACEPROP(IA+1,JTEMP,KA,12)=IVAL
          FACEPROP(IA+1,JTEMP,KA+1,4)=IVAL
          FACEPROP(IA,JTEMP,KA+1,2)=IVAL
          IF (KD.EQ.2) THEN
            ILOF=[9,1,6,5]
            IHIF=[11,3,7,8]
            DO IFAC=1,4
              IF (FACEPROP(IA,JTEMP,KA,ILOF(IFAC)).EQ.0)
     &          FACEPROP(IA,JTEMP,KA,IHIF(IFAC)) = 6
              IF (FACEPROP(IA+1,JTEMP,KA,ILOF(IFAC)).EQ.0)
     &          FACEPROP(IA+1,JTEMP,KA,IHIF(IFAC)) = 6
              IF (FACEPROP(IA+1,JTEMP,KA+1,ILOF(IFAC)).EQ.0)
     &          FACEPROP(IA+1,JTEMP,KA+1,IHIF(IFAC)) = 6
              IF (FACEPROP(IA,JTEMP,KA+1,ILOF(IFAC)).EQ.0)
     &          FACEPROP(IA,JTEMP,KA+1,IHIF(IFAC)) = 6

              IF (FACEPROP(IA,JTEMP,KA,ILOF(IFAC)).EQ.2)
     &          FACEPROP(IA,JTEMP,KA,IHIF(IFAC)) = 2
              IF (FACEPROP(IA+1,JTEMP,KA,ILOF(IFAC)).EQ.2)
     &          FACEPROP(IA+1,JTEMP,KA,IHIF(IFAC)) = 2
              IF (FACEPROP(IA+1,JTEMP,KA+1,ILOF(IFAC)).EQ.2)
     &          FACEPROP(IA+1,JTEMP,KA+1,IHIF(IFAC)) = 2
              IF (FACEPROP(IA,JTEMP,KA+1,ILOF(IFAC)).EQ.2)
     &          FACEPROP(IA,JTEMP,KA+1,IHIF(IFAC)) = 2
            ENDDO
          ELSE
            ILOF=[9,1,6,5]
            IHIF=[11,3,7,8]
            DO IFAC=1,4
              IF (FACEPROP(IA,JTEMP,KA,IHIF(IFAC)).EQ.0)
     &          FACEPROP(IA,JTEMP,KA,ILOF(IFAC)) = 6
              IF (FACEPROP(IA+1,JTEMP,KA,IHIF(IFAC)).EQ.0)
     &          FACEPROP(IA+1,JTEMP,KA,ILOF(IFAC)) = 6
              IF (FACEPROP(IA+1,JTEMP,KA+1,IHIF(IFAC)).EQ.0)
     &          FACEPROP(IA+1,JTEMP,KA+1,ILOF(IFAC)) = 6
              IF (FACEPROP(IA,JTEMP,KA+1,IHIF(IFAC)).EQ.0)
     &          FACEPROP(IA,JTEMP,KA+1,ILOF(IFAC)) = 6

              IF (FACEPROP(IA,JTEMP,KA,IHIF(IFAC)).EQ.2)
     &          FACEPROP(IA,JTEMP,KA,ILOF(IFAC)) = 2
              IF (FACEPROP(IA+1,JTEMP,KA,IHIF(IFAC)).EQ.2)
     &          FACEPROP(IA+1,JTEMP,KA,ILOF(IFAC)) = 2
              IF (FACEPROP(IA+1,JTEMP,KA+1,IHIF(IFAC)).EQ.2)
     &          FACEPROP(IA+1,JTEMP,KA+1,ILOF(IFAC)) = 2
              IF (FACEPROP(IA,JTEMP,KA+1,IHIF(IFAC)).EQ.2)
     &          FACEPROP(IA,JTEMP,KA+1,ILOF(IFAC)) = 2
            ENDDO
          ENDIF

        ELSEIF ((KD.EQ.3).OR.(KD.EQ.6)) THEN
          IF (KD.EQ.3) THEN
            KTEMP = KA + 1
          ELSE
            KTEMP = KA
          ENDIF
          VOLPROP(IA,JA,KTEMP,3)=5
          VOLPROP(IA+1,JA,KTEMP,4)=5
          VOLPROP(IA+1,JA+1,KTEMP,1)=5
          VOLPROP(IA,JA+1,KTEMP,2)=5
          VOLPROP(IA,JA,KTEMP,7)=5
          VOLPROP(IA+1,JA,KTEMP,8)=5
          VOLPROP(IA+1,JA+1,KTEMP,5)=5
          VOLPROP(IA,JA+1,KTEMP,6)=5
          FACEPROP(IA,JA,KTEMP,7)=IVAL
          FACEPROP(IA+1,JA,KTEMP,8)=IVAL
          FACEPROP(IA+1,JA+1,KTEMP,5)=IVAL
          FACEPROP(IA,JA+1,KTEMP,6)=IVAL
          IF (KD.EQ.3) THEN
            ILOF=[3,1,4,2]
            IHIF=[11,9,12,10]
            DO IFAC=1,4
              IF (FACEPROP(IA,JA,KTEMP,ILOF(IFAC)).EQ.0)
     &          FACEPROP(IA,JA,KTEMP,IHIF(IFAC)) = 6
              IF (FACEPROP(IA+1,JA,KTEMP,ILOF(IFAC)).EQ.0)
     &          FACEPROP(IA+1,JA,KTEMP,IHIF(IFAC)) = 6
              IF (FACEPROP(IA+1,JA+1,KTEMP,ILOF(IFAC)).EQ.0)
     &          FACEPROP(IA+1,JA+1,KTEMP,IHIF(IFAC)) = 6
              IF (FACEPROP(IA,JA+1,KTEMP,ILOF(IFAC)).EQ.0)
     &          FACEPROP(IA,JA+1,KTEMP,IHIF(IFAC)) = 6

              IF (FACEPROP(IA,JA,KTEMP,ILOF(IFAC)).EQ.2)
     &          FACEPROP(IA,JA,KTEMP,IHIF(IFAC)) = 2
              IF (FACEPROP(IA+1,JA,KTEMP,ILOF(IFAC)).EQ.2)
     &          FACEPROP(IA+1,JA,KTEMP,IHIF(IFAC)) = 2
              IF (FACEPROP(IA+1,JA+1,KTEMP,ILOF(IFAC)).EQ.2)
     &          FACEPROP(IA+1,JA+1,KTEMP,IHIF(IFAC)) = 2
              IF (FACEPROP(IA,JA+1,KTEMP,ILOF(IFAC)).EQ.2)
     &          FACEPROP(IA,JA+1,KTEMP,IHIF(IFAC)) = 2
            ENDDO
          ELSE
            ILOF=[3,1,4,2]
            IHIF=[11,9,12,10]
            DO IFAC=1,4
              IF (FACEPROP(IA,JA,KTEMP,IHIF(IFAC)).EQ.0)
     &          FACEPROP(IA,JA,KTEMP,ILOF(IFAC)) = 6
              IF (FACEPROP(IA+1,JA,KTEMP,IHIF(IFAC)).EQ.0)
     &          FACEPROP(IA+1,JA,KTEMP,ILOF(IFAC)) = 6
              IF (FACEPROP(IA+1,JA+1,KTEMP,IHIF(IFAC)).EQ.0)
     &          FACEPROP(IA+1,JA+1,KTEMP,ILOF(IFAC)) = 6
              IF (FACEPROP(IA,JA+1,KTEMP,IHIF(IFAC)).EQ.0)
     &          FACEPROP(IA,JA+1,KTEMP,ILOF(IFAC)) = 6

              IF (FACEPROP(IA,JA,KTEMP,IHIF(IFAC)).EQ.2)
     &          FACEPROP(IA,JA,KTEMP,ILOF(IFAC)) = 2
              IF (FACEPROP(IA+1,JA,KTEMP,IHIF(IFAC)).EQ.2)
     &          FACEPROP(IA+1,JA,KTEMP,ILOF(IFAC)) = 2
              IF (FACEPROP(IA+1,JA+1,KTEMP,IHIF(IFAC)).EQ.2)
     &          FACEPROP(IA+1,JA+1,KTEMP,ILOF(IFAC)) = 2
              IF (FACEPROP(IA,JA+1,KTEMP,IHIF(IFAC)).EQ.2)
     &          FACEPROP(IA,JA+1,KTEMP,ILOF(IFAC)) = 2
            ENDDO
          ENDIF

        ENDIF
        ENDDO
        ENDDO
      ENDIF

! Assuming conforming subdomains, add faces in diagonal directions
      GROUP(1,1:4)=[9,10,11,12]
      GROUP(2,1:4)=[4,5,8,12]
      GROUP(3,1:4)=[1,2,3,4]
      GROUP(4,1:4)=[2,6,7,10]
      GROUP(5,1:4)=[3,7,8,11]
      GROUP(6,1:4)=[1,5,6,9]

      DO K=1,KDIM+1
      DO J=1,JDIM+1
      DO I=1,IDIM+1  ! Loop over all corners

        DO G=1,6     ! Loop over 6 groups
        NM1=0
        N6=0
        M1(2)=0
        DO F=1,4     ! Loop over 4 faces in group

          IF (FACEPROP(I,J,K,GROUP(G,F)).EQ.-1) THEN
            NM1=NM1+1
            IF (NM1.GT.2) GOTO 100
            M1(NM1)=GROUP(G,F)
          ELSEIF (FACEPROP(I,J,K,GROUP(G,F)).EQ.6) THEN
            N6=N6+1
            IF (N6.GT.2) GOTO 100
          ELSE
            GOTO 100
          ENDIF
        ENDDO

        ! Here we should have a corner with 4 faces such that
        ! it has two 6's (dual faces), and two -1's (outside).
        ! In this situation, we set the outside face equal to another dual face.

 110    FORMAT(A,5I5)
        DO F=1,2
          WRITE(*,110)'Setting FACEPROP to 6 at NBLK,I,J,K,F=',
     &      NBLK,I,J,K,M1(F)
          FACEPROP(I,J,K,M1(F))=6
        ENDDO

 100    CONTINUE
        ENDDO

      ENDDO
      ENDDO
      ENDDO

! Assuming conforming subdomains, add volumes in diagonal directions
      GROUP(1,1:4)=[5,6,7,8]
      GROUP(2,1:4)=[1,4,5,8]
      GROUP(3,1:4)=[1,2,3,4]
      GROUP(4,1:4)=[2,3,6,7]
      GROUP(5,1:4)=[3,4,7,8]
      GROUP(6,1:4)=[1,2,5,6]

      DO K=1,KDIM+1
      DO J=1,JDIM+1
      DO I=1,IDIM+1  ! Loop over all corners

        DO G=1,6     ! Loop over 6 groups
        NM1=0
        N5=0
        M1(2)=0
        DO V=1,4     ! Loop over 4 volumes in group

          IF (VOLPROP(I,J,K,GROUP(G,V)).EQ.-1) THEN
            NM1=NM1+1
            IF (NM1.GT.1) GOTO 200
            M1(NM1)=GROUP(G,V)
          ELSEIF (VOLPROP(I,J,K,GROUP(G,V)).EQ.5) THEN
            N5=N5+1
            IF (N5.GT.3) GOTO 200
          ELSE
            GOTO 200
          ENDIF
        ENDDO

        ! Here we should have a corner with 4 volumes such that
        ! it has one -1 (outside vol) and three 5's (dual vols).
        ! In this situation, we set the outside volume equal to
        ! another dual volume.

 210    FORMAT(A,5I5)
        WRITE(*,210)'Setting VOLPROP to 5 at NBLK,I,J,K,V=',
     &    NBLK,I,J,K,M1(1)
        VOLPROP(I,J,K,M1(1))=5

 200    CONTINUE
        ENDDO

      ENDDO
      ENDDO
      ENDDO

      RETURN
      END

!======================================================================
! bag8 - Mark VOLPROP and FACEPROP as dual for A-block interface nodes
!        for evfem_hex=6 case.
!======================================================================
      SUBROUTINE CALCMPFADUAL6a(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,
     &     KL1,KL2,KEYOUT,NBLK,VOLPROP,FACEPROP)
!======================================================================
      USE dualmod
      IMPLICIT NONE
      INCLUDE 'boundary.h'
      INCLUDE 'control.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'layout.h'
      INCLUDE 'mpfaary.h'

      INTEGER IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V(KDIM),JL2V(KDIM),
     &        KL1,KL2,KEYOUT,NBLK
      INTEGER VOLPROP(IDIM+1,JDIM+1,KDIM+1,8)
      INTEGER FACEPROP(IDIM+1,JDIM+1,KDIM+1,12)
      INTEGER K1,K2,K,J1,J2,IA,JA,KA,J,L,KD,ITEMP,JTEMP,KTEMP

      IF (NIEBS(NBLK).EQ.0) RETURN

      K1=IIEBS(NBLK)
      K2=K1+NIEBS(NBLK)-1
      DO K=K1,K2         ! Loop over A-block elements K
      IA=IJKS(1,K)       ! Subdomain element on interface
      JA=IJKS(2,K)
      KA=IJKS(3,K)
      J1=ICGES(K)
      J2=J1+NCGES(K)-1
      DO J=J1,J2         ! Loop over A-B interactions J
      L=LIBUF(J)
      KD=KDIRS(J)

      IF (KD.EQ.1) THEN              ! x+ face
        ITEMP = IA + 1
        VOLPROP(ITEMP,JA,KA,8)=5
        VOLPROP(ITEMP,JA+1,KA,5)=5
        VOLPROP(ITEMP,JA+1,KA+1,1)=5
        VOLPROP(ITEMP,JA,KA+1,4)=5
        FACEPROP(ITEMP,JA,KA,11)=DUALFACE
        FACEPROP(ITEMP,JA+1,KA,9)=DUALFACE
        FACEPROP(ITEMP,JA+1,KA+1,1)=DUALFACE
        FACEPROP(ITEMP,JA,KA+1,3)=DUALFACE
        DFACENUM(DFAC2NOD(J,1),11)=J
        DFACENUM(DFAC2NOD(J,2),9)=J
        DFACENUM(DFAC2NOD(J,3),1)=J
        DFACENUM(DFAC2NOD(J,4),3)=J

      ELSEIF (KD.EQ.4) THEN          ! x- face
        ITEMP = IA
        VOLPROP(ITEMP,JA,KA,7)=5
        VOLPROP(ITEMP,JA+1,KA,6)=5
        VOLPROP(ITEMP,JA+1,KA+1,2)=5
        VOLPROP(ITEMP,JA,KA+1,3)=5
        FACEPROP(ITEMP,JA,KA,11)=DUALFACE
        FACEPROP(ITEMP,JA+1,KA,9)=DUALFACE
        FACEPROP(ITEMP,JA+1,KA+1,1)=DUALFACE
        FACEPROP(ITEMP,JA,KA+1,3)=DUALFACE
        DFACENUM(DFAC2NOD(J,1),11)=J
        DFACENUM(DFAC2NOD(J,2),9)=J
        DFACENUM(DFAC2NOD(J,3),1)=J
        DFACENUM(DFAC2NOD(J,4),3)=J

      ELSEIF (KD.EQ.2) THEN          ! y+ face
        JTEMP = JA + 1
        VOLPROP(IA,JTEMP,KA,6)=5
        VOLPROP(IA+1,JTEMP,KA,5)=5
        VOLPROP(IA+1,JTEMP,KA+1,1)=5
        VOLPROP(IA,JTEMP,KA+1,2)=5
        FACEPROP(IA,JTEMP,KA,10)=DUALFACE
        FACEPROP(IA+1,JTEMP,KA,12)=DUALFACE
        FACEPROP(IA+1,JTEMP,KA+1,4)=DUALFACE
        FACEPROP(IA,JTEMP,KA+1,2)=DUALFACE
        DFACENUM(DFAC2NOD(J,1),10)=J
        DFACENUM(DFAC2NOD(J,2),12)=J
        DFACENUM(DFAC2NOD(J,3),4)=J
        DFACENUM(DFAC2NOD(J,4),2)=J

      ELSEIF (KD.EQ.5) THEN          ! y- face
        JTEMP = JA
        VOLPROP(IA,JTEMP,KA,7)=5
        VOLPROP(IA+1,JTEMP,KA,8)=5
        VOLPROP(IA+1,JTEMP,KA+1,4)=5
        VOLPROP(IA,JTEMP,KA+1,3)=5
        FACEPROP(IA,JTEMP,KA,10)=DUALFACE
        FACEPROP(IA+1,JTEMP,KA,12)=DUALFACE
        FACEPROP(IA+1,JTEMP,KA+1,4)=DUALFACE
        FACEPROP(IA,JTEMP,KA+1,2)=DUALFACE
        DFACENUM(DFAC2NOD(J,1),10)=J
        DFACENUM(DFAC2NOD(J,2),12)=J
        DFACENUM(DFAC2NOD(J,3),4)=J
        DFACENUM(DFAC2NOD(J,4),2)=J

      ELSEIF (KD.EQ.3) THEN          ! z+ face
        KTEMP = KA + 1
        VOLPROP(IA,JA,KTEMP,7)=5
        VOLPROP(IA+1,JA,KTEMP,8)=5
        VOLPROP(IA+1,JA+1,KTEMP,5)=5
        VOLPROP(IA,JA+1,KTEMP,6)=5
        FACEPROP(IA,JA,KTEMP,7)=DUALFACE
        FACEPROP(IA+1,JA,KTEMP,8)=DUALFACE
        FACEPROP(IA+1,JA+1,KTEMP,5)=DUALFACE
        FACEPROP(IA,JA+1,KTEMP,6)=DUALFACE
        DFACENUM(DFAC2NOD(J,1),7)=J
        DFACENUM(DFAC2NOD(J,2),8)=J
        DFACENUM(DFAC2NOD(J,3),5)=J
        DFACENUM(DFAC2NOD(J,4),6)=J

      ELSEIF (KD.EQ.6) THEN          ! z- face
        KTEMP = KA
        VOLPROP(IA,JA,KTEMP,3)=5
        VOLPROP(IA+1,JA,KTEMP,4)=5
        VOLPROP(IA+1,JA+1,KTEMP,1)=5
        VOLPROP(IA,JA+1,KTEMP,2)=5
        FACEPROP(IA,JA,KTEMP,7)=DUALFACE
        FACEPROP(IA+1,JA,KTEMP,8)=DUALFACE
        FACEPROP(IA+1,JA+1,KTEMP,5)=DUALFACE
        FACEPROP(IA,JA+1,KTEMP,6)=DUALFACE
        DFACENUM(DFAC2NOD(J,1),7)=J
        DFACENUM(DFAC2NOD(J,2),8)=J
        DFACENUM(DFAC2NOD(J,3),5)=J
        DFACENUM(DFAC2NOD(J,4),6)=J

      ENDIF  ! End if-statement for KD
      ENDDO  ! End do-loop over A-B interactions J
      ENDDO  ! End do-loop over A-block elements K

      END SUBROUTINE CALCMPFADUAL6a

!======================================================================
! bag8 - Fill DVOLPROP and DFACEPROP for evfem_hex=6 case
!        A-block side is filled from VOLPROP and FACEPROP
!        B-block side is filled from interface buffer BUFIF8
!======================================================================
      SUBROUTINE CALCMPFADUAL6b(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,
     &     KL1,KL2,KEYOUT,NBLK,VOLPROP,FACEPROP,NBUFDIM,BUFIF8)
!======================================================================
      USE dualmod
      IMPLICIT NONE
      INCLUDE 'boundary.h'
      INCLUDE 'control.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'layout.h'
      INCLUDE 'mpfaary.h'

      INTEGER IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V(KDIM),JL2V(KDIM),
     &        KL1,KL2,KEYOUT,NBLK,NBUFDIM
      INTEGER VOLPROP(IDIM+1,JDIM+1,KDIM+1,8)
      INTEGER FACEPROP(IDIM+1,JDIM+1,KDIM+1,12)
      REAL*8  BUFIF8(NBUFDIM,*)
      INTEGER K1,K2,K,J1,J2,IA,JA,KA,J,L,KD,IVAL,
     &  ITEMP,JTEMP,KTEMP,INA,JNA,KNA,INB,JNB,KNB,INA2,JNA2,KNA2,INOD,
     &  IB,JB,KB,INB2,JNB2,KNB2,IOFFB,JOFFB,KOFFB,NB,MERR,
     &  ITEMPB,JTEMPB,KTEMPB,N,V,F,IBUF,JV,JF,NA,IP,NH,
     &  VPROPHEX(8,8),FPROPHEX(8,12)

! Tangential hex node number of B-block, given face KD and intf ele nod 1-4
      INTEGER NORDER(4,6)
      DATA NORDER/1,2,3,4, 1,5,8,4, 1,5,6,2,
     &            5,6,7,8, 2,6,7,3, 4,8,7,3/

      LOGICAL :: DEBUG = .FALSE.

      IF (DEBUG) THEN
        WRITE(*,*)REPEAT('-',72)
        WRITE(*,*)'In CalcMPFADual6b'
      ENDIF

      IF (NIEBS(NBLK).EQ.0) RETURN
      IVAL=DUALFACE       ! For TMLOCALFLUX_JACOBI

      K1=IIEBS(NBLK)
      K2=K1+NIEBS(NBLK)-1
      DO K=K1,K2         ! Loop over A-block elements K
      IA=IJKS(1,K)       ! Subdomain element on interface
      JA=IJKS(2,K)
      KA=IJKS(3,K)

      J1=ICGES(K)
      J2=J1+NCGES(K)-1
      DO J=J1,J2         ! Loop over A-B interactions J
      L=LIBUF(J)
      KD=KDIRS(J)
      NB=JBLOCK(J)
      CALL BLKOFF(NB,IOFFB,JOFFB,KOFFB,MERR)
      IB=IJKT(1,J)-IOFFB
      JB=IJKT(2,J)-JOFFB
      KB=IJKT(3,J)-KOFFB

! Fill VPROPHEX and FPROPHEX from buffer
      IBUF=0
      DO INOD = 1,8
        DO IP = 1,8
          IBUF=IBUF+1
          VPROPHEX(INOD,IP)=INT(BUFIF8(L,IBUF))
        ENDDO
        DO IP = 1,12
          IBUF=IBUF+1
          FPROPHEX(INOD,IP)=INT(BUFIF8(L,IBUF))
        ENDDO
      ENDDO

      IF (DEBUG) THEN
        WRITE(*,'(2(a,i3),a,3i3)')'K=',K,'        NA=',NBLK,
     &    ' IA,JA,KA=',IA,JA,KA
        WRITE(*,'(3(a,i3),a,3i3)')'J=',J,' KD=',KD,' NB=',NB,
     &    ' IB,JB,KB=',IB,JB,KB
      ENDIF

!----------------------------------------------------------------------
      IF (KD.EQ.1) THEN              ! x+ face
        ITEMP = IA + 1
        ITEMPB = IB
        IBUF = 0

        DO INOD=1,4
          INA = DFAC2IJK(J,1,INOD,1)
          JNA = DFAC2IJK(J,1,INOD,2)
          KNA = DFAC2IJK(J,1,INOD,3)
          INB = DFAC2IJK(J,2,INOD,1)
          JNB = DFAC2IJK(J,2,INOD,2)
          KNB = DFAC2IJK(J,2,INOD,3)
          N = DFAC2NOD(J,INOD)
          NH = NORDER(INOD,KD)

! bag8 debug
        IF (DEBUG) THEN
        INA2=ITEMP
        JNA2=JA
        KNA2=KA
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) JNA2=JNA2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) KNA2=KNA2+1
        INB2=ITEMPB
        JNB2=JB
        KNB2=KB
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) JNB2=JNB2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) KNB2=KNB2+1
        WRITE(*,'(a,i3,a,i3,a,3i3,a,3i3,$)')
     &    'KD=',KD,' INOD=',INOD,' INA,JNA,KNA=',INA,JNA,KNA,
     &    ' INA2,JNA2,KNA2=',INA2,JNA2,KNA2
        IF (((INA.NE.INA2).OR.(JNA.NE.JNA2).OR.(KNA.NE.KNA2)).AND.
     &      (INA*JNA*KNA.NE.0)) THEN
          WRITE(*,*)'  xxx'
        ELSE
          WRITE(*,*)
        ENDIF
        WRITE(*,'(a,3i3,a,3i3,$)')
     &    '                INB,JNB,KNB=',INB,JNB,KNB,
     &    ' INB2,JNB2,KNB2=',INB2,JNB2,KNB2
        IF (((INB.NE.INB2).OR.(JNB.NE.JNB2).OR.(KNB.NE.KNB2)).AND.
     &      (INB*JNB*KNB.NE.0)) THEN
          WRITE(*,*)'  %%%'
        ELSE
          WRITE(*,*)
        ENDIF
        ENDIF

! Set dual properties from A-block
          IF (INA*JNA*KNA.NE.0) THEN
            DO V=1,8
              IF (VOLPROP(INA,JNA,KNA,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VOLPROP(INA,JNA,KNA,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'VOLPROP=',VOLPROP(INA,JNA,KNA,V),
     &              ' INA,JNA,KNA,V=',INA,JNA,KNA,V
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 1
                ENDIF
                DVOLPROP(N,V)=VOLPROP(INA,JNA,KNA,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FACEPROP(INA,JNA,KNA,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FACEPROP(INA,JNA,KNA,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'FACEPROP=',FACEPROP(INA,JNA,KNA,F),
     &              ' INA,JNA,KNA,F=',INA,JNA,KNA,F
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 2
                ENDIF
                DFACEPROP(N,F)=FACEPROP(INA,JNA,KNA,F)
              ENDIF
            ENDDO
          ENDIF

! Set dual properties from B-block
          IF (INB*JNB*KNB.NE.0) THEN
             DO V=1,8
              IF (VPROPHEX(NH,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VPROPHEX(NH,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',VPROPHEX(NH,V),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 3
                ENDIF
                DVOLPROP(N,V)=VPROPHEX(NH,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FPROPHEX(NH,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FPROPHEX(NH,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',FPROPHEX(NH,F),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 4
                ENDIF
                DFACEPROP(N,F)=FPROPHEX(NH,F)
              ENDIF
            ENDDO
          ENDIF

        ENDDO ! End loop over INOD

!----------------------------------------------------------------------
      ELSEIF (KD.EQ.4) THEN          ! x- face
        ITEMP = IA
        ITEMPB = IB + 1
        IBUF = 0

        DO INOD=1,4
          INA = DFAC2IJK(J,1,INOD,1)
          JNA = DFAC2IJK(J,1,INOD,2)
          KNA = DFAC2IJK(J,1,INOD,3)
          INB = DFAC2IJK(J,2,INOD,1)
          JNB = DFAC2IJK(J,2,INOD,2)
          KNB = DFAC2IJK(J,2,INOD,3)
          N = DFAC2NOD(J,INOD)
          NH = NORDER(INOD,KD)

! bag8 debug
        IF (DEBUG) THEN
        INA2=ITEMP
        JNA2=JA
        KNA2=KA
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) JNA2=JNA2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) KNA2=KNA2+1
        INB2=ITEMPB
        JNB2=JB
        KNB2=KB
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) JNB2=JNB2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) KNB2=KNB2+1
        WRITE(*,'(a,i3,a,i3,a,3i3,a,3i3,$)')
     &    'KD=',KD,' INOD=',INOD,' INA,JNA,KNA=',INA,JNA,KNA,
     &    ' INA2,JNA2,KNA2=',INA2,JNA2,KNA2
        IF (((INA.NE.INA2).OR.(JNA.NE.JNA2).OR.(KNA.NE.KNA2)).AND.
     &      (INA*JNA*KNA.NE.0)) THEN
          WRITE(*,*)'  xxx'
        ELSE
          WRITE(*,*)
        ENDIF
        WRITE(*,'(a,3i3,a,3i3,$)')
     &    '                INB,JNB,KNB=',INB,JNB,KNB,
     &    ' INB2,JNB2,KNB2=',INB2,JNB2,KNB2
        IF (((INB.NE.INB2).OR.(JNB.NE.JNB2).OR.(KNB.NE.KNB2)).AND.
     &      (INB*JNB*KNB.NE.0)) THEN
          WRITE(*,*)'  %%%'
        ELSE
          WRITE(*,*)
        ENDIF
        ENDIF

! Set dual properties from A-block
          IF (INA*JNA*KNA.NE.0) THEN
            DO V=1,8
              IF (VOLPROP(INA,JNA,KNA,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VOLPROP(INA,JNA,KNA,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'VOLPROP=',VOLPROP(INA,JNA,KNA,V),
     &              ' INA,JNA,KNA,V=',INA,JNA,KNA,V
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 5
                ENDIF
                DVOLPROP(N,V)=VOLPROP(INA,JNA,KNA,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FACEPROP(INA,JNA,KNA,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FACEPROP(INA,JNA,KNA,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'FACEPROP=',FACEPROP(INA,JNA,KNA,F),
     &              ' INA,JNA,KNA,F=',INA,JNA,KNA,F
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 6
                ENDIF
                DFACEPROP(N,F)=FACEPROP(INA,JNA,KNA,F)
              ENDIF
            ENDDO
          ENDIF

! Set dual properties from B-block
          IF (INB*JNB*KNB.NE.0) THEN
             DO V=1,8
              IF (VPROPHEX(NH,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VPROPHEX(NH,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',VPROPHEX(NH,V),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 7
                ENDIF
                DVOLPROP(N,V)=VPROPHEX(NH,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FPROPHEX(NH,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FPROPHEX(NH,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',FPROPHEX(NH,F),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 8
                ENDIF
                DFACEPROP(N,F)=FPROPHEX(NH,F)
              ENDIF
            ENDDO
          ENDIF

        ENDDO ! End loop over INOD

!----------------------------------------------------------------------
      ELSEIF (KD.EQ.2) THEN          ! y+ face
        JTEMP = JA + 1
        JTEMPB = JB
        IBUF = 0

        DO INOD=1,4
          INA = DFAC2IJK(J,1,INOD,1)
          JNA = DFAC2IJK(J,1,INOD,2)
          KNA = DFAC2IJK(J,1,INOD,3)
          INB = DFAC2IJK(J,2,INOD,1)
          JNB = DFAC2IJK(J,2,INOD,2)
          KNB = DFAC2IJK(J,2,INOD,3)
          N = DFAC2NOD(J,INOD)
          NH = NORDER(INOD,KD)

! bag8 debug
        IF (DEBUG) THEN
        INA2=IA
        JNA2=JTEMP
        KNA2=KA
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) INA2=INA2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) KNA2=KNA2+1
        INB2=IB
        JNB2=JTEMPB
        KNB2=KB
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) INB2=INB2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) KNB2=KNB2+1
        WRITE(*,'(a,i3,a,i3,a,3i3,a,3i3,$)')
     &    'KD=',KD,' INOD=',INOD,' INA,JNA,KNA=',INA,JNA,KNA,
     &    ' INA2,JNA2,KNA2=',INA2,JNA2,KNA2
        IF (((INA.NE.INA2).OR.(JNA.NE.JNA2).OR.(KNA.NE.KNA2)).AND.
     &      (INA*JNA*KNA.NE.0)) THEN
          WRITE(*,*)'  xxx'
        ELSE
          WRITE(*,*)
        ENDIF
        WRITE(*,'(a,3i3,a,3i3,$)')
     &    '                INB,JNB,KNB=',INB,JNB,KNB,
     &    ' INB2,JNB2,KNB2=',INB2,JNB2,KNB2
        IF (((INB.NE.INB2).OR.(JNB.NE.JNB2).OR.(KNB.NE.KNB2)).AND.
     &      (INB*JNB*KNB.NE.0)) THEN
          WRITE(*,*)'  %%%'
        ELSE
          WRITE(*,*)
        ENDIF
        ENDIF

! Set dual properties from A-block
          IF (INA*JNA*KNA.NE.0) THEN
            DO V=1,8
              IF (VOLPROP(INA,JNA,KNA,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VOLPROP(INA,JNA,KNA,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'VOLPROP=',VOLPROP(INA,JNA,KNA,V),
     &              ' INA,JNA,KNA,V=',INA,JNA,KNA,V
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 9
                ENDIF
                DVOLPROP(N,V)=VOLPROP(INA,JNA,KNA,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FACEPROP(INA,JNA,KNA,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FACEPROP(INA,JNA,KNA,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'FACEPROP=',FACEPROP(INA,JNA,KNA,F),
     &              ' INA,JNA,KNA,F=',INA,JNA,KNA,F
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 10
                ENDIF
                DFACEPROP(N,F)=FACEPROP(INA,JNA,KNA,F)
              ENDIF
            ENDDO
          ENDIF

! Set dual properties from B-block
          IF (INB*JNB*KNB.NE.0) THEN
             DO V=1,8
              IF (VPROPHEX(NH,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VPROPHEX(NH,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',VPROPHEX(NH,V),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 11
                ENDIF
                DVOLPROP(N,V)=VPROPHEX(NH,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FPROPHEX(NH,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FPROPHEX(NH,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,*)'INA,JNA,KNA=',INA,JNA,KNA
                  WRITE(*,*)'INB,JNB,KNB=',INB,JNB,KNB
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',FPROPHEX(NH,F),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 12
                ENDIF
                DFACEPROP(N,F)=FPROPHEX(NH,F)
              ENDIF
            ENDDO
          ENDIF

        ENDDO ! End loop over INOD

!----------------------------------------------------------------------
      ELSEIF (KD.EQ.5) THEN          ! y- face
        JTEMP = JA
        JTEMPB = JB + 1
        IBUF = 0

        DO INOD=1,4
          INA = DFAC2IJK(J,1,INOD,1)
          JNA = DFAC2IJK(J,1,INOD,2)
          KNA = DFAC2IJK(J,1,INOD,3)
          INB = DFAC2IJK(J,2,INOD,1)
          JNB = DFAC2IJK(J,2,INOD,2)
          KNB = DFAC2IJK(J,2,INOD,3)
          N = DFAC2NOD(J,INOD)
          NH = NORDER(INOD,KD)

! bag8 debug
        IF (DEBUG) THEN
        INA2=IA
        JNA2=JTEMP
        KNA2=KA
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) INA2=INA2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) KNA2=KNA2+1
        INB2=IB
        JNB2=JTEMPB
        KNB2=KB
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) INB2=INB2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) KNB2=KNB2+1
        WRITE(*,'(a,i3,a,i3,a,3i3,a,3i3,$)')
     &    'KD=',KD,' INOD=',INOD,' INA,JNA,KNA=',INA,JNA,KNA,
     &    ' INA2,JNA2,KNA2=',INA2,JNA2,KNA2
        IF (((INA.NE.INA2).OR.(JNA.NE.JNA2).OR.(KNA.NE.KNA2)).AND.
     &      (INA*JNA*KNA.NE.0)) THEN
          WRITE(*,*)'  xxx'
        ELSE
          WRITE(*,*)
        ENDIF
        WRITE(*,'(a,3i3,a,3i3,$)')
     &    '                INB,JNB,KNB=',INB,JNB,KNB,
     &    ' INB2,JNB2,KNB2=',INB2,JNB2,KNB2
        IF (((INB.NE.INB2).OR.(JNB.NE.JNB2).OR.(KNB.NE.KNB2)).AND.
     &      (INB*JNB*KNB.NE.0)) THEN
          WRITE(*,*)'  %%%'
        ELSE
          WRITE(*,*)
        ENDIF
        ENDIF

! Set dual properties from A-block
          IF (INA*JNA*KNA.NE.0) THEN
            DO V=1,8
              IF (VOLPROP(INA,JNA,KNA,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VOLPROP(INA,JNA,KNA,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'VOLPROP=',VOLPROP(INA,JNA,KNA,V),
     &              ' INA,JNA,KNA,V=',INA,JNA,KNA,V
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 13
                ENDIF
                DVOLPROP(N,V)=VOLPROP(INA,JNA,KNA,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FACEPROP(INA,JNA,KNA,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FACEPROP(INA,JNA,KNA,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'FACEPROP=',FACEPROP(INA,JNA,KNA,F),
     &              ' INA,JNA,KNA,F=',INA,JNA,KNA,F
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 14
                ENDIF
                DFACEPROP(N,F)=FACEPROP(INA,JNA,KNA,F)
              ENDIF
            ENDDO
          ENDIF

! Set dual properties from B-block
          IF (INB*JNB*KNB.NE.0) THEN
             DO V=1,8
              IF (VPROPHEX(NH,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VPROPHEX(NH,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',VPROPHEX(NH,V),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 15
                ENDIF
                DVOLPROP(N,V)=VPROPHEX(NH,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FPROPHEX(NH,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FPROPHEX(NH,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',FPROPHEX(NH,F),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 16
                ENDIF
                DFACEPROP(N,F)=FPROPHEX(NH,F)
              ENDIF
            ENDDO
          ENDIF

        ENDDO ! End loop over INOD

!----------------------------------------------------------------------
      ELSEIF (KD.EQ.3) THEN          ! z+ face
        KTEMP = KA + 1
        KTEMPB = KB
        IBUF = 0

        DO INOD=1,4
          INA = DFAC2IJK(J,1,INOD,1)
          JNA = DFAC2IJK(J,1,INOD,2)
          KNA = DFAC2IJK(J,1,INOD,3)
          INB = DFAC2IJK(J,2,INOD,1)
          JNB = DFAC2IJK(J,2,INOD,2)
          KNB = DFAC2IJK(J,2,INOD,3)
          N = DFAC2NOD(J,INOD)
          NH = NORDER(INOD,KD)

! bag8 debug
        IF (DEBUG) THEN
        INA2=IA
        JNA2=JA
        KNA2=KTEMP
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) INA2=INA2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) JNA2=JNA2+1
        INB2=IB
        JNB2=JA
        KNB2=KTEMPB
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) INB2=INB2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) JNB2=JNB2+1
        WRITE(*,'(a,i3,a,i3,a,3i3,a,3i3,$)')
     &    'KD=',KD,' INOD=',INOD,' INA,JNA,KNA=',INA,JNA,KNA,
     &    ' INA2,JNA2,KNA2=',INA2,JNA2,KNA2
        IF (((INA.NE.INA2).OR.(JNA.NE.JNA2).OR.(KNA.NE.KNA2)).AND.
     &      (INA*JNA*KNA.NE.0)) THEN
          WRITE(*,*)'  xxx'
        ELSE
          WRITE(*,*)
        ENDIF
        WRITE(*,'(a,3i3,a,3i3,$)')
     &    '                INB,JNB,KNB=',INB,JNB,KNB,
     &    ' INB2,JNB2,KNB2=',INB2,JNB2,KNB2
        IF (((INB.NE.INB2).OR.(JNB.NE.JNB2).OR.(KNB.NE.KNB2)).AND.
     &      (INB*JNB*KNB.NE.0)) THEN
          WRITE(*,*)'  %%%'
        ELSE
          WRITE(*,*)
        ENDIF
        ENDIF

! Set dual properties from A-block
          IF (INA*JNA*KNA.NE.0) THEN
            DO V=1,8
              IF (VOLPROP(INA,JNA,KNA,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VOLPROP(INA,JNA,KNA,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'VOLPROP=',VOLPROP(INA,JNA,KNA,V),
     &              ' INA,JNA,KNA,V=',INA,JNA,KNA,V
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 17
                ENDIF
                DVOLPROP(N,V)=VOLPROP(INA,JNA,KNA,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FACEPROP(INA,JNA,KNA,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FACEPROP(INA,JNA,KNA,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'FACEPROP=',FACEPROP(INA,JNA,KNA,F),
     &              ' INA,JNA,KNA,F=',INA,JNA,KNA,F
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 18
                ENDIF
                DFACEPROP(N,F)=FACEPROP(INA,JNA,KNA,F)
              ENDIF
            ENDDO
          ENDIF

! Set dual properties from B-block
          IF (INB*JNB*KNB.NE.0) THEN
             DO V=1,8
              IF (VPROPHEX(NH,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VPROPHEX(NH,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',VPROPHEX(NH,V),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 19
                ENDIF
                DVOLPROP(N,V)=VPROPHEX(NH,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FPROPHEX(NH,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FPROPHEX(NH,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',FPROPHEX(NH,F),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 20
                ENDIF
                DFACEPROP(N,F)=FPROPHEX(NH,F)
              ENDIF
            ENDDO
          ENDIF

        ENDDO ! End loop over INOD

!----------------------------------------------------------------------
      ELSEIF (KD.EQ.6) THEN          ! z- face
        KTEMP = KA
        KTEMPB = KB + 1
        IBUF = 0

        DO INOD=1,4
          INA = DFAC2IJK(J,1,INOD,1)
          JNA = DFAC2IJK(J,1,INOD,2)
          KNA = DFAC2IJK(J,1,INOD,3)
          INB = DFAC2IJK(J,2,INOD,1)
          JNB = DFAC2IJK(J,2,INOD,2)
          KNB = DFAC2IJK(J,2,INOD,3)
          N = DFAC2NOD(J,INOD)
          NH = NORDER(INOD,KD)

! bag8 debug
        IF (DEBUG) THEN
        INA2=IA
        JNA2=JA
        KNA2=KTEMP
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) INA2=INA2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) JNA2=JNA2+1
        INB2=IB
        JNB2=JA
        KNB2=KTEMPB
        IF ((INOD.EQ.2).OR.(INOD.EQ.3)) INB2=INB2+1
        IF ((INOD.EQ.3).OR.(INOD.EQ.4)) JNB2=JNB2+1
        WRITE(*,'(a,i3,a,i3,a,3i3,a,3i3,$)')
     &    'KD=',KD,' INOD=',INOD,' INA,JNA,KNA=',INA,JNA,KNA,
     &    ' INA2,JNA2,KNA2=',INA2,JNA2,KNA2
        IF (((INA.NE.INA2).OR.(JNA.NE.JNA2).OR.(KNA.NE.KNA2)).AND.
     &      (INA*JNA*KNA.NE.0)) THEN
          WRITE(*,*)'  xxx'
        ELSE
          WRITE(*,*)
        ENDIF
        WRITE(*,'(a,3i3,a,3i3,$)')
     &    '                INB,JNB,KNB=',INB,JNB,KNB,
     &    ' INB2,JNB2,KNB2=',INB2,JNB2,KNB2
        IF (((INB.NE.INB2).OR.(JNB.NE.JNB2).OR.(KNB.NE.KNB2)).AND.
     &      (INB*JNB*KNB.NE.0)) THEN
          WRITE(*,*)'  %%%'
        ELSE
          WRITE(*,*)
        ENDIF
        ENDIF

! Set dual properties from A-block
          IF (INA*JNA*KNA.NE.0) THEN
            DO V=1,8
              IF (VOLPROP(INA,JNA,KNA,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VOLPROP(INA,JNA,KNA,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'VOLPROP=',VOLPROP(INA,JNA,KNA,V),
     &              ' INA,JNA,KNA,V=',INA,JNA,KNA,V
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 21
                ENDIF
                DVOLPROP(N,V)=VOLPROP(INA,JNA,KNA,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FACEPROP(INA,JNA,KNA,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FACEPROP(INA,JNA,KNA,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'FACEPROP=',FACEPROP(INA,JNA,KNA,F),
     &              ' INA,JNA,KNA,F=',INA,JNA,KNA,F
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 22
                ENDIF
                DFACEPROP(N,F)=FACEPROP(INA,JNA,KNA,F)
              ENDIF
            ENDDO
          ENDIF

! Set dual properties from B-block
          IF (INB*JNB*KNB.NE.0) THEN
             DO V=1,8
              IF (VPROPHEX(NH,V).NE.-1) THEN
                IF ((DVOLPROP(N,V).NE.-1).AND.
     &              (DVOLPROP(N,V).NE.VPROPHEX(NH,V))) THEN
                  WRITE(*,*)'Error trying to overwrite DVOLPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',VPROPHEX(NH,V),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DVOLPROP=',DVOLPROP(N,V),
     &              ' N,V=',N,V
                  STOP 23
                ENDIF
                DVOLPROP(N,V)=VPROPHEX(NH,V)
              ENDIF
            ENDDO
            DO F=1,12
              IF (FPROPHEX(NH,F).NE.-1) THEN
                IF ((DFACEPROP(N,F).NE.-1).AND.
     &              (DFACEPROP(N,F).NE.FPROPHEX(NH,F))) THEN
                  WRITE(*,*)'Error trying to overwrite DFACEPROP'
                  WRITE(*,'(a,i3,a,4i3)')
     &              'BUFIF8=',FPROPHEX(NH,F),
     &              ' L,IBUF=',L,IBUF
                  WRITE(*,'(a,i3,a,2i3)')
     &              'DFACEPROP=',DFACEPROP(N,F),
     &              ' N,F=',N,F
                  STOP 24
                ENDIF
                DFACEPROP(N,F)=FPROPHEX(NH,F)
              ENDIF
            ENDDO
          ENDIF

        ENDDO ! End loop over INOD

      ENDIF  ! End if-statement for KD
      ENDDO  ! End do-loop over A-B interactions J
      ENDDO  ! End do-loop over A-block faces K

      END SUBROUTINE CALCMPFADUAL6b

!======================================================================
! bag8 - Debug DVOLPROP and DFACEPROP for evfem_hex=6 case
!======================================================================
      SUBROUTINE DPropDebug6(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,
     &     KL1,KL2,KEYOUT,NBLK,VOLPROP,FACEPROP,NBUFDIM,BUFIF8)
!======================================================================
      USE dualmod
      IMPLICIT NONE
      INCLUDE 'boundary.h'
      INCLUDE 'control.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'layout.h'
      INCLUDE 'mpfaary.h'

      INTEGER IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V(KDIM),JL2V(KDIM),
     &        KL1,KL2,KEYOUT,NBLK,NBUFDIM
      INTEGER VOLPROP(IDIM+1,JDIM+1,KDIM+1,8)
      INTEGER FACEPROP(IDIM+1,JDIM+1,KDIM+1,12)
      REAL*8  BUFIF8(NBUFDIM,*)
      INTEGER K1,K2,K,J1,J2,IA,JA,KA,J,L,KD,IVAL,
     &  ITEMP,JTEMP,KTEMP,INA,JNA,KNA,INB,JNB,KNB,INA2,JNA2,KNA2,INOD,
     &  IB,JB,KB,INB2,JNB2,KNB2,IOFFB,JOFFB,KOFFB,NB,MERR,
     &  ITEMPB,JTEMPB,KTEMPB,N,V,F,IBUF,JV,JF,NA

      NA=1; INA=3; JNA=7; KNA=4

      IF (NBLK.NE.NA) RETURN

      WRITE(*,'(a,i3,a,3i3)')'In DPropDebug6, NA=',NA,
     &  ', INA,JNA,KNA=',INA,JNA,KNA
      K1=IIEBS(NBLK)
      K2=K1+NIEBS(NBLK)-1
      DO K=K1,K2         ! Loop over A-block elements K
      J1=ICGES(K)
      J2=J1+NCGES(K)-1
      DO J=J1,J2         ! Loop over A-B interactions J
        DO INOD=1,4
          IF ((INA.EQ.DFAC2IJK(J,1,INOD,1)).AND.
     &        (JNA.EQ.DFAC2IJK(J,1,INOD,2)).AND.
     &        (KNA.EQ.DFAC2IJK(J,1,INOD,3))) THEN
            N=DFAC2NOD(J,INOD)
            GOTO 10
          ENDIF
        ENDDO
      ENDDO
      ENDDO
      WRITE(*,*) 'Intf node not found in DPropDebug6'
      RETURN
 10   CONTINUE
      WRITE(*,'(a,3i3)')'J,INOD,N=',J,INOD,N
      WRITE(*,'(a,4i3)')'DFAC2NOD=',DFAC2NOD(J,:)
      DO K=1,4
        WRITE(*,'(a,i1,a,3i3,a,3f9.2)')'INOD=',K,', DFAC2IJK=',
     &    DFAC2IJK(J,1,K,:),', CIFNOD=',CIFNOD(DFAC2NOD(J,K),:)
      ENDDO
      DO V=1,8
        WRITE(*,'(a,i2,a,i2,$)')'DVOLPROP (',V,') = ',
     &    DVOLPROP(N,V)
        IF (VOLPROP(INA,JNA,KNA,V).NE.-1) THEN
          WRITE(*,*)'*'
        ELSE
          WRITE(*,*)
        ENDIF
      ENDDO
      DO F=1,12
        WRITE(*,'(a,i2,a,i2,$)')'DFACEPROP(',F,') = ',
     &    DFACEPROP(N,F)
        IF (FACEPROP(INA,JNA,KNA,F).NE.-1) THEN
          WRITE(*,*)'*'
        ELSE
          WRITE(*,*)
        ENDIF
      ENDDO

!      STOP 1

      END SUBROUTINE DPropDebug6

!======================================================================
! bag8 - VTK output for multiblock interfaces, including normal faces
!======================================================================
      SUBROUTINE DPropVTK()
!======================================================================
      USE dualmod
      IMPLICIT NONE
      INCLUDE 'control.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'visual.h'
      CHARACTER*80 FNAME
      INTEGER :: I,LT,NORMS=0,FUNIT=10
      LOGICAL :: PLOT_NORMAL = .TRUE.

      IF (PLOT_NORMAL) NORMS=NORMFACES

      LT=LEN_TRIM(VIS_DIR)
      IF ((LT.LE.1).OR.(LT.GE.50)) THEN
        WRITE(FNAME,'(A,I3.3,A)')'interface_p',MYPRC,'.vtk'
      ELSE
        WRITE(FNAME,'(2A,I3.3,A)')VIS_DIR(1:LT-1),
     &    '/interface_p',MYPRC,'.vtk'
      ENDIF
      WRITE(*,'(2a)')'In DPROPVTK, writing:',TRIM(FNAME)
      OPEN(FUNIT,file=TRIM(FNAME),STATUS='unknown')

      WRITE(FUNIT,'(A)')'# vtk DataFile Version 2.0'
      WRITE(FUNIT,'(A)')'# unstructured mesh'
      WRITE(FUNIT,'(A)')'ASCII'
      WRITE(FUNIT,'(A)')'DATASET UNSTRUCTURED_GRID'

      WRITE(FUNIT,'(A,I,A)')'POINTS ',NIFNOD,' float'
      DO I=1,NIFNOD
        WRITE(FUNIT,'(3f15.6)')CIFNOD(I,1:3)
      ENDDO

      WRITE(FUNIT,'(A,2I)')'CELLS ',NIFACE+NORMS,5*(NIFACE+NORMS)
      DO I=1,NIFACE
        WRITE(FUNIT,'(5i)') 4,DFAC2NOD(I,1:4)-1
      ENDDO

! Plot normal faces
      IF (PLOT_NORMAL) THEN
        DO I=1,NORMFACES
          WRITE(FUNIT,'(5i)') 4,DNFACE2NOD(I,1:4)-1
        ENDDO
      ENDIF

      WRITE(FUNIT,'(A,I)')'CELL_TYPES ',NIFACE+NORMS
      DO I=1,NIFACE+NORMS
        WRITE(FUNIT,'(i)') 7
      ENDDO

      CLOSE(FUNIT)

      END SUBROUTINE DPropVTK

!======================================================================
! bag8 - store nodes and properties of faces normal to the interface
!======================================================================
      SUBROUTINE DNormalFaces(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,
     &     KL1,KL2,KEYOUT,NBLK,VOLPROP,FACEPROP,NBUFDIM,BUFIF8)
!======================================================================
      USE dualmod
      IMPLICIT NONE
      INCLUDE 'sblkc.h'
      INTEGER IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V(KDIM),JL2V(KDIM),
     &        KL1,KL2,KEYOUT,NBLK,NBUFDIM
      INTEGER VOLPROP(IDIM+1,JDIM+1,KDIM+1,8)
      INTEGER FACEPROP(IDIM+1,JDIM+1,KDIM+1,12)
      REAL*8  BUFIF8(NBUFDIM,*)

      INTEGER KL,KH,K,J1,J2,I,L,KD,IBUF,INOD,IP,K1,K2,K3,K4,KF,N,V,F,
     &        VPROPHEX(8,8),FPROPHEX(8,12)

      IF (NIEBS(NBLK).EQ.0) RETURN

      KL=IIEBS(NBLK)
      KH=KL+NIEBS(NBLK)-1
      DO K=KL,KH         ! Loop over A-block elements K
      J1=ICGES(K)
      J2=J1+NCGES(K)-1
      DO I=J1,J2         ! Loop over A-B interactions I
      L=LIBUF(I)
      KD=KDIRS(I)

! Fill VPROPHEX and FPROPHEX from buffer
      IBUF=0
      DO INOD = 1,8
        DO IP = 1,8
          IBUF=IBUF+1
          VPROPHEX(INOD,IP)=INT(BUFIF8(L,IBUF))
        ENDDO
        DO IP = 1,12
          IBUF=IBUF+1
          FPROPHEX(INOD,IP)=INT(BUFIF8(L,IBUF))
        ENDDO
      ENDDO

! Nodes 1 and 2
      IF ((DFAC2IJK(I,2,1,1).NE.0).AND.(DFAC2IJK(I,2,2,1).NE.0)) THEN
        K1=DFAC2NOD(I,1)
        K4=DFAC2NOD(I,2)
        IF (KD.EQ.1) THEN
          KF=DFACEPROP(K1,7)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,5)
            K3=DFAC2HEX(I,6)
            DO V=1,8
              IF (VPROPHEX(5,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(5,V)
              IF (VPROPHEX(6,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(6,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(5,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(5,F)
              IF (FPROPHEX(6,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(6,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,7)=N
            DFACENUM(K4,6)=N
          ENDIF
        ELSEIF (KD.EQ.4) THEN
          KF=DFACEPROP(K1,8)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,1)
            K3=DFAC2HEX(I,2)
            DO V=1,8
              IF (VPROPHEX(1,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(1,V)
              IF (VPROPHEX(2,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(2,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(1,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(1,F)
              IF (FPROPHEX(2,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(2,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,8)=N
            DFACENUM(K4,5)=N
          ENDIF
        ELSEIF (KD.EQ.2) THEN
          KF=DFACEPROP(K1,7)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,2)
            K3=DFAC2HEX(I,6)
            DO V=1,8
              IF (VPROPHEX(2,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(2,V)
              IF (VPROPHEX(6,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(6,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(2,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(2,F)
              IF (FPROPHEX(6,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(6,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,7)=N
            DFACENUM(K4,8)=N
          ENDIF
        ELSEIF (KD.EQ.5) THEN
          KF=DFACEPROP(K1,6)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,1)
            K3=DFAC2HEX(I,5)
            DO V=1,8
              IF (VPROPHEX(1,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(1,V)
              IF (VPROPHEX(5,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(5,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(1,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(1,F)
              IF (FPROPHEX(5,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(5,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,6)=N
            DFACENUM(K4,5)=N
          ENDIF
        ELSEIF (KD.EQ.3) THEN
          KF=DFACEPROP(K1,10)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,4)
            K3=DFAC2HEX(I,8)
            DO V=1,8
              IF (VPROPHEX(4,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(4,V)
              IF (VPROPHEX(8,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(8,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(4,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(4,F)
              IF (FPROPHEX(8,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(8,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,10)=N
            DFACENUM(K4,12)=N
          ENDIF
        ELSEIF (KD.EQ.6) THEN
          KF=DFACEPROP(K1,2)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,1)
            K3=DFAC2HEX(I,5)
            DO V=1,8
              IF (VPROPHEX(1,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(1,V)
              IF (VPROPHEX(5,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(5,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(1,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(1,F)
              IF (FPROPHEX(5,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(5,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,2)=N
            DFACENUM(K4,4)=N
          ENDIF
        ENDIF
      ENDIF

! Nodes 2 and 3
      IF ((DFAC2IJK(I,2,2,1).NE.0).AND.(DFAC2IJK(I,2,3,1).NE.0)) THEN
        K1=DFAC2NOD(I,2)
        K4=DFAC2NOD(I,3)
        IF (KD.EQ.1) THEN
          KF=DFACEPROP(K1,10)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,6)
            K3=DFAC2HEX(I,7)
            DO V=1,8
              IF (VPROPHEX(6,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(6,V)
              IF (VPROPHEX(7,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(7,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(6,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(6,F)
              IF (FPROPHEX(7,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(7,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,10)=N
            DFACENUM(K4,2)=N
          ENDIF
        ELSEIF (KD.EQ.4) THEN
          KF=DFACEPROP(K1,12)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,2)
            K3=DFAC2HEX(I,3)
            DO V=1,8
              IF (VPROPHEX(2,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(2,V)
              IF (VPROPHEX(3,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(3,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(2,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(2,F)
              IF (FPROPHEX(3,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(3,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,12)=N
            DFACENUM(K4,4)=N
          ENDIF
        ELSEIF (KD.EQ.2) THEN
          KF=DFACEPROP(K1,11)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,6)
            K3=DFAC2HEX(I,7)
            DO V=1,8
              IF (VPROPHEX(6,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(6,V)
              IF (VPROPHEX(7,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(7,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(6,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(6,F)
              IF (FPROPHEX(7,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(7,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,11)=N
            DFACENUM(K4,3)=N
          ENDIF
        ELSEIF (KD.EQ.5) THEN
          KF=DFACEPROP(K1,9)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,5)
            K3=DFAC2HEX(I,8)
            DO V=1,8
              IF (VPROPHEX(5,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(5,V)
              IF (VPROPHEX(8,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(8,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(5,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(5,F)
              IF (FPROPHEX(8,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(8,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,9)=N
            DFACENUM(K4,1)=N
          ENDIF
        ELSEIF (KD.EQ.3) THEN
          KF=DFACEPROP(K1,11)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,8)
            K3=DFAC2HEX(I,7)
            DO V=1,8
              IF (VPROPHEX(8,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(8,V)
              IF (VPROPHEX(7,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(7,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(8,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(8,F)
              IF (FPROPHEX(7,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(7,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,11)=N
            DFACENUM(K4,9)=N
          ENDIF
        ELSEIF (KD.EQ.6) THEN
          KF=DFACEPROP(K1,3)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,5)
            K3=DFAC2HEX(I,6)
            DO V=1,8
              IF (VPROPHEX(5,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(5,V)
              IF (VPROPHEX(6,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(6,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(5,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(5,F)
              IF (FPROPHEX(6,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(6,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,3)=N
            DFACENUM(K4,1)=N
          ENDIF
        ENDIF
      ENDIF

! Nodes 3 and 4
      IF ((DFAC2IJK(I,2,3,1).NE.0).AND.(DFAC2IJK(I,2,4,1).NE.0)) THEN
        K1=DFAC2NOD(I,3)
        K4=DFAC2NOD(I,4)
        IF (KD.EQ.1) THEN
          KF=DFACEPROP(K1,6)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,7)
            K3=DFAC2HEX(I,8)
            DO V=1,8
              IF (VPROPHEX(7,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(7,V)
              IF (VPROPHEX(8,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(8,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(7,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(7,F)
              IF (FPROPHEX(8,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(8,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,6)=N
            DFACENUM(K4,7)=N
          ENDIF
        ELSEIF (KD.EQ.4) THEN
          KF=DFACEPROP(K1,5)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,3)
            K3=DFAC2HEX(I,4)
            DO V=1,8
              IF (VPROPHEX(3,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(3,V)
              IF (VPROPHEX(4,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(4,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(3,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(3,F)
              IF (FPROPHEX(4,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(4,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,5)=N
            DFACENUM(K4,8)=N
          ENDIF
        ELSEIF (KD.EQ.2) THEN
          KF=DFACEPROP(K1,8)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,7)
            K3=DFAC2HEX(I,3)
            DO V=1,8
              IF (VPROPHEX(7,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(7,V)
              IF (VPROPHEX(3,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(3,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(7,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(7,F)
              IF (FPROPHEX(3,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(3,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,8)=N
            DFACENUM(K4,7)=N
          ENDIF
        ELSEIF (KD.EQ.5) THEN
          KF=DFACEPROP(K1,5)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,8)
            K3=DFAC2HEX(I,4)
            DO V=1,8
              IF (VPROPHEX(8,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(8,V)
              IF (VPROPHEX(4,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(4,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(8,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(8,F)
              IF (FPROPHEX(4,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(4,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,5)=N
            DFACENUM(K4,6)=N
          ENDIF
        ELSEIF (KD.EQ.3) THEN
          KF=DFACEPROP(K1,12)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,7)
            K3=DFAC2HEX(I,3)
            DO V=1,8
              IF (VPROPHEX(7,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(7,V)
              IF (VPROPHEX(3,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(3,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(7,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(7,F)
              IF (FPROPHEX(3,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(3,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,12)=N
            DFACENUM(K4,10)=N
          ENDIF
        ELSEIF (KD.EQ.6) THEN
          KF=DFACEPROP(K1,4)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,6)
            K3=DFAC2HEX(I,2)
            DO V=1,8
              IF (VPROPHEX(6,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(6,V)
              IF (VPROPHEX(2,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(2,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(6,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(6,F)
              IF (FPROPHEX(2,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(2,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,4)=N
            DFACENUM(K4,2)=N
          ENDIF
        ENDIF
      ENDIF

! Nodes 1 and 4
      IF ((DFAC2IJK(I,2,1,1).NE.0).AND.(DFAC2IJK(I,2,4,1).NE.0)) THEN
        K1=DFAC2NOD(I,1)
        K4=DFAC2NOD(I,4)
        IF (KD.EQ.1) THEN
          KF=DFACEPROP(K1,10)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,5)
            K3=DFAC2HEX(I,8)
            DO V=1,8
              IF (VPROPHEX(5,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(5,V)
              IF (VPROPHEX(8,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(8,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(5,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(5,F)
              IF (FPROPHEX(8,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(8,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,10)=N
            DFACENUM(K4,2)=N
          ENDIF
        ELSEIF (KD.EQ.4) THEN
          KF=DFACEPROP(K1,12)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,1)
            K3=DFAC2HEX(I,4)
            DO V=1,8
              IF (VPROPHEX(1,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(1,V)
              IF (VPROPHEX(4,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(4,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(1,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(1,F)
              IF (FPROPHEX(4,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(4,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,12)=N
            DFACENUM(K4,4)=N
          ENDIF
        ELSEIF (KD.EQ.2) THEN
          KF=DFACEPROP(K1,11)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,2)
            K3=DFAC2HEX(I,3)
            DO V=1,8
              IF (VPROPHEX(2,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(2,V)
              IF (VPROPHEX(3,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(3,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(2,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(2,F)
              IF (FPROPHEX(3,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(3,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,11)=N
            DFACENUM(K4,3)=N
          ENDIF
        ELSEIF (KD.EQ.5) THEN
          KF=DFACEPROP(K1,9)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,1)
            K3=DFAC2HEX(I,4)
            DO V=1,8
              IF (VPROPHEX(1,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(1,V)
              IF (VPROPHEX(4,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(4,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(1,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(1,F)
              IF (FPROPHEX(4,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(4,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,9)=N
            DFACENUM(K4,1)=N
          ENDIF
        ELSEIF (KD.EQ.3) THEN
          KF=DFACEPROP(K1,11)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,3)
            K3=DFAC2HEX(I,4)
            DO V=1,8
              IF (VPROPHEX(3,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(3,V)
              IF (VPROPHEX(4,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(4,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(3,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(3,F)
              IF (FPROPHEX(4,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(4,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,11)=N
            DFACENUM(K4,9)=N
          ENDIF
        ELSEIF (KD.EQ.6) THEN
          KF=DFACEPROP(K1,3)
          IF ((KF.NE.-1).AND.(KF.NE.3)) THEN
            K2=DFAC2HEX(I,1)
            K3=DFAC2HEX(I,2)
            DO V=1,8
              IF (VPROPHEX(1,V).NE.-1) DVOLPROP(K2,V)=VPROPHEX(1,V)
              IF (VPROPHEX(2,V).NE.-1) DVOLPROP(K3,V)=VPROPHEX(2,V)
            ENDDO
            DO F=1,12
              IF (FPROPHEX(1,F).NE.-1) DFACEPROP(K2,F)=FPROPHEX(1,F)
              IF (FPROPHEX(2,F).NE.-1) DFACEPROP(K3,F)=FPROPHEX(2,F)
            ENDDO
            CALL ADD_NFACE(K1,K2,K3,K4,N)
            DFACENUM(K1,3)=N
            DFACENUM(K4,1)=N
          ENDIF
        ENDIF
      ENDIF

      ENDDO
      ENDDO

      END SUBROUTINE DNormalFaces

!======================================================================
! bag8 - add extra Dirichlet faces at intersection of interface
!======================================================================
      SUBROUTINE FIXBC(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,
     &     KL1,KL2,KEYOUT,NBLK,DUNK)
!======================================================================
      IMPLICIT NONE
      INCLUDE 'boundary.h'
      INCLUDE 'control.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'layout.h'
      INCLUDE 'mpfaary.h'

      INTEGER IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V(KDIM),JL2V(KDIM),
     &        KL1,KL2,KEYOUT,NBLK
      INTEGER VOLPROP(IDIM+1,JDIM+1,KDIM+1,8)
      INTEGER FACEPROP(IDIM+1,JDIM+1,KDIM+1,12)
      INTEGER K1,K2,K,J1,J2,IA,JA,KA,J,L,KD,I,F,B,
     &        IB,NTYPE,NFOFF,IOFF,JOFF,KOFF
      INTEGER ICHECK,KD2
      REAL*8  DUNK(IDIM,JDIM,KDIM)

      IF (NBLK.NE.MYNBLK) RETURN

      DUNK(:,:,:)=0

! Encode interface faces into DUNK array
      IF (NIEBS(NBLK).GT.0) THEN
        K1=IIEBS(NBLK)
        K2=K1+NIEBS(NBLK)-1
        DO K=K1,K2
        J1=ICGES(K)
        J2=J1+NCGES(K)-1
        IA=IJKS(1,K)
        JA=IJKS(2,K)
        KA=IJKS(3,K)
        DO J=J1,J2
        L=LIBUF(J)
        KD=KDIRS(J)
        IF (KD.EQ.1) THEN
          KD2=2
        ELSEIF (KD.EQ.4) THEN
          KD2=1
        ELSEIF (KD.EQ.2) THEN
          KD2=4
        ELSEIF (KD.EQ.5) THEN
          KD2=3
        ELSEIF (KD.EQ.3) THEN
          KD2=6
        ELSEIF (KD.EQ.6) THEN
          KD2=5
        ENDIF
        DUNK(IA,JA,KA)=DFLOAT(IBSET(INT(DUNK(IA,JA,KA)),KD2-1))
        ENDDO
        ENDDO
      ENDIF

! Encode boundary faces into DUNK array

      IB = MYREG

!      DO IB=1,NBND_REG
        NTYPE = NBND_TYPE(IB)
        IF (NTYPE.EQ.3) THEN
          IF (NBLK.EQ.1.AND.IB.EQ.1) NFOFF=1
          IF (NBLK.GT.1.AND.IB.EQ.1) NFOFF=LOFFBND(NBND_REG,NBLK-1)+1
          IF (IB.NE.1) NFOFF=LOFFBND(IB-1,NBLK)+1
          DO L=NFOFF,LOFFBND(IB,NBLK)
            I = LOCBND(1,L)
            J = LOCBND(2,L)
            K = LOCBND(3,L)
            F = LOCBND(4,L)
            IF (F.EQ.1) THEN
              I = I+1
            ELSEIF (F.EQ.2) THEN
              I = I-1
            ELSEIF (F.EQ.3) THEN
              J = J+1
            ELSEIF (F.EQ.4) THEN
              J = J-1
            ELSEIF (F.EQ.5) THEN
              K = K+1
            ELSEIF (F.EQ.6) THEN
              K = K-1
            ENDIF
            F = F + 6
            DUNK(I,J,K)=DFLOAT(IBSET(INT(DUNK(I,J,K)),F-1))
          ENDDO
        ENDIF
!      ENDDO

! Reflect boundary faces across interface faces
      DO K=1,KDIM
      DO J=1,JDIM
      DO I=1,IDIM
        ICHECK=INT(DUNK(I,J,K))
        IF (ICHECK.GT.0) THEN
          DO F=1,6             ! Loop over interface faces
            IF (MOD(ISHFT(ICHECK,-(F-1)),2).EQ.1) THEN
              DO B=1,6         ! Loop over boundary faces
                IF (MOD(ISHFT(ICHECK,-(B+5)),2).EQ.1) THEN
                  IOFF=0
                  JOFF=0
                  KOFF=0
                  IF (F.EQ.B) CYCLE

                  IF (F.EQ.1) THEN
                    IF (B.EQ.2) CYCLE
                    IOFF=-1
                  ELSEIF (F.EQ.2) THEN
                    IF (B.EQ.1) CYCLE
                    IOFF=1
                  ELSEIF (F.EQ.3) THEN
                    IF (B.EQ.4) CYCLE
                    JOFF=-1
                  ELSEIF (F.EQ.4) THEN
                    IF (B.EQ.3) CYCLE
                    JOFF=1
                  ELSEIF (F.EQ.5) THEN
                    IF (B.EQ.6) CYCLE
                    KOFF=-1
                  ELSEIF (F.EQ.6) THEN
                    IF (B.EQ.5) CYCLE
                    KOFF=1
                  ENDIF

                  IF (B.EQ.1) THEN
                    IOFF=-1
                  ELSEIF (B.EQ.2) THEN
                    IOFF=1
                  ELSEIF (B.EQ.3) THEN
                    JOFF=-1
                  ELSEIF (B.EQ.4) THEN
                    JOFF=1
                  ELSEIF (B.EQ.5) THEN
                    KOFF=-1
                  ELSEIF (B.EQ.6) THEN
                    KOFF=1
                  ENDIF

                  NBEL=NBEL+1
                  LOCBND(1,NBEL)=I+IOFF
                  LOCBND(2,NBEL)=J+JOFF
                  LOCBND(3,NBEL)=K+KOFF
                  LOCBND(4,NBEL)=B
                  LOFFBND(B,NBLK)=NBEL
                  WRITE(*,'(a,5i4)')'Add boundary face NBLK,I,J,K,F=',
     &              NBLK,LOCBND(:,NBEL)

                ENDIF
              ENDDO
            ENDIF
          ENDDO
        ENDIF
      ENDDO
      ENDDO
      ENDDO

      return
      end

! bag8
!======================================================================
      SUBROUTINE GetCornerHexLF(N,X)
!======================================================================
      USE dualmod
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: N         ! Node number
      REAL*8, INTENT(OUT) :: X(3,8,8)  ! Coordinates around node N
                                       !   (component,node,volume)

      INTEGER F,K1,K2,K3,K4,
     &        V,              ! Surrounding volume 1-8 to node N
     &        VN              ! Local node 1-8 of volume V

      X(:,:,:)=0.D0

      V=1; VN=7; X(:,VN,V)=CIFNOD(N,:)
      V=2; VN=3; X(:,VN,V)=CIFNOD(N,:)
      V=3; VN=4; X(:,VN,V)=CIFNOD(N,:)
      V=4; VN=8; X(:,VN,V)=CIFNOD(N,:)
      V=5; VN=6; X(:,VN,V)=CIFNOD(N,:)
      V=6; VN=2; X(:,VN,V)=CIFNOD(N,:)
      V=7; VN=1; X(:,VN,V)=CIFNOD(N,:)
      V=8; VN=5; X(:,VN,V)=CIFNOD(N,:)

      IF (DFACENUM(N,1).GT.0) THEN
        F=DFACENUM(N,1)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=1; VN=5; X(:,VN,V)=CIFNOD(K1,:)
        V=1; VN=6; X(:,VN,V)=CIFNOD(K2,:)
        V=1; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=1; VN=8; X(:,VN,V)=CIFNOD(K4,:)
        V=2; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=2; VN=2; X(:,VN,V)=CIFNOD(K2,:)
        V=2; VN=3; X(:,VN,V)=CIFNOD(K3,:)
        V=2; VN=4; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,2).GT.0) THEN
        F=DFACENUM(N,2)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=2; VN=2; X(:,VN,V)=CIFNOD(K1,:)
        V=2; VN=6; X(:,VN,V)=CIFNOD(K2,:)
        V=2; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=2; VN=3; X(:,VN,V)=CIFNOD(K4,:)
        V=3; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=3; VN=5; X(:,VN,V)=CIFNOD(K2,:)
        V=3; VN=8; X(:,VN,V)=CIFNOD(K3,:)
        V=3; VN=4; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,3).GT.0) THEN
        F=DFACENUM(N,3)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=4; VN=5; X(:,VN,V)=CIFNOD(K1,:)
        V=4; VN=6; X(:,VN,V)=CIFNOD(K2,:)
        V=4; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=4; VN=8; X(:,VN,V)=CIFNOD(K4,:)
        V=3; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=3; VN=2; X(:,VN,V)=CIFNOD(K2,:)
        V=3; VN=3; X(:,VN,V)=CIFNOD(K3,:)
        V=3; VN=4; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,4).GT.0) THEN
        F=DFACENUM(N,4)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=1; VN=2; X(:,VN,V)=CIFNOD(K1,:)
        V=1; VN=6; X(:,VN,V)=CIFNOD(K2,:)
        V=1; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=1; VN=3; X(:,VN,V)=CIFNOD(K4,:)
        V=4; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=4; VN=5; X(:,VN,V)=CIFNOD(K2,:)
        V=4; VN=8; X(:,VN,V)=CIFNOD(K3,:)
        V=4; VN=4; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,5).GT.0) THEN
        F=DFACENUM(N,5)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=5; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=5; VN=5; X(:,VN,V)=CIFNOD(K2,:)
        V=5; VN=6; X(:,VN,V)=CIFNOD(K3,:)
        V=5; VN=2; X(:,VN,V)=CIFNOD(K4,:)
        V=1; VN=4; X(:,VN,V)=CIFNOD(K1,:)
        V=1; VN=8; X(:,VN,V)=CIFNOD(K2,:)
        V=1; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=1; VN=3; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,6).GT.0) THEN
        F=DFACENUM(N,6)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=6; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=6; VN=5; X(:,VN,V)=CIFNOD(K2,:)
        V=6; VN=6; X(:,VN,V)=CIFNOD(K3,:)
        V=6; VN=2; X(:,VN,V)=CIFNOD(K4,:)
        V=2; VN=4; X(:,VN,V)=CIFNOD(K1,:)
        V=2; VN=8; X(:,VN,V)=CIFNOD(K2,:)
        V=2; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=2; VN=3; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,7).GT.0) THEN
        F=DFACENUM(N,7)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=7; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=7; VN=5; X(:,VN,V)=CIFNOD(K2,:)
        V=7; VN=6; X(:,VN,V)=CIFNOD(K3,:)
        V=7; VN=2; X(:,VN,V)=CIFNOD(K4,:)
        V=3; VN=4; X(:,VN,V)=CIFNOD(K1,:)
        V=3; VN=8; X(:,VN,V)=CIFNOD(K2,:)
        V=3; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=3; VN=3; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,8).GT.0) THEN
        F=DFACENUM(N,8)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=8; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=8; VN=5; X(:,VN,V)=CIFNOD(K2,:)
        V=8; VN=6; X(:,VN,V)=CIFNOD(K3,:)
        V=8; VN=2; X(:,VN,V)=CIFNOD(K4,:)
        V=4; VN=4; X(:,VN,V)=CIFNOD(K1,:)
        V=4; VN=8; X(:,VN,V)=CIFNOD(K2,:)
        V=4; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=4; VN=3; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,9).GT.0) THEN
        F=DFACENUM(N,9)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=5; VN=5; X(:,VN,V)=CIFNOD(K1,:)
        V=5; VN=6; X(:,VN,V)=CIFNOD(K2,:)
        V=5; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=5; VN=8; X(:,VN,V)=CIFNOD(K4,:)
        V=6; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=6; VN=2; X(:,VN,V)=CIFNOD(K2,:)
        V=6; VN=3; X(:,VN,V)=CIFNOD(K3,:)
        V=6; VN=4; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,10).GT.0) THEN
        F=DFACENUM(N,10)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=6; VN=2; X(:,VN,V)=CIFNOD(K1,:)
        V=6; VN=6; X(:,VN,V)=CIFNOD(K2,:)
        V=6; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=6; VN=3; X(:,VN,V)=CIFNOD(K4,:)
        V=7; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=7; VN=5; X(:,VN,V)=CIFNOD(K2,:)
        V=7; VN=8; X(:,VN,V)=CIFNOD(K3,:)
        V=7; VN=4; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,11).GT.0) THEN
        F=DFACENUM(N,11)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=8; VN=5; X(:,VN,V)=CIFNOD(K1,:)
        V=8; VN=6; X(:,VN,V)=CIFNOD(K2,:)
        V=8; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=8; VN=8; X(:,VN,V)=CIFNOD(K4,:)
        V=7; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=7; VN=2; X(:,VN,V)=CIFNOD(K2,:)
        V=7; VN=3; X(:,VN,V)=CIFNOD(K3,:)
        V=7; VN=4; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      IF (DFACENUM(N,12).GT.0) THEN
        F=DFACENUM(N,12)
        IF (F.GT.NIFACE) THEN
          K1=DNFACE2NOD(F-NIFACE,1)
          K2=DNFACE2NOD(F-NIFACE,2)
          K3=DNFACE2NOD(F-NIFACE,3)
          K4=DNFACE2NOD(F-NIFACE,4)
        ELSE
          K1=DFAC2NOD(F,1)
          K2=DFAC2NOD(F,2)
          K3=DFAC2NOD(F,3)
          K4=DFAC2NOD(F,4)
        ENDIF
        V=5; VN=2; X(:,VN,V)=CIFNOD(K1,:)
        V=5; VN=6; X(:,VN,V)=CIFNOD(K2,:)
        V=5; VN=7; X(:,VN,V)=CIFNOD(K3,:)
        V=5; VN=3; X(:,VN,V)=CIFNOD(K4,:)
        V=8; VN=1; X(:,VN,V)=CIFNOD(K1,:)
        V=8; VN=5; X(:,VN,V)=CIFNOD(K2,:)
        V=8; VN=8; X(:,VN,V)=CIFNOD(K3,:)
        V=8; VN=4; X(:,VN,V)=CIFNOD(K4,:)
      ENDIF

      END SUBROUTINE GetCornerHexLF
