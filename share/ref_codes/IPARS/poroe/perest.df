C  PEREST.F - POROELASTIC MDOEL RESTART AND TERMINATION ROUTINES

C  ROUTINES IN THIS MODULE:
C      SUBROUTINE PERESTO (NERR)
C      SUBROUTINE PERESTI (NERR)
C      SUBROUTINE PERGEAOUT (NARR,NEXTRA,NERR)
C      SUBROUTINE PEQUIT  (NERR)

C  CODE HISTORY:
C      XIULI GAI     06/01/01  INITIAL CODE
C*********************************************************************
      SUBROUTINE PERESTO (NERR)
C*********************************************************************

C  Directs output of poroelastic model specific restart data

C  NERR = ERROR KEY STEPPED BY ONE FOR EACH ERROR
C         (INPUT AND OUTPUT, INTEGER )
C*********************************************************************
$POWER      INCLUDE 'msjunk.h'
      INCLUDE 'control.h'
      INCLUDE 'restc.h'

      INCLUDE 'pearydat.h'
      INCLUDE 'pemodel.h'

C OUTPUT FLOW MODEL GRID ELEMENT ARRAYS

cbw $BLACKI      IF(PEFLOW.EQ.BLACKI) CALL IRESTO (NERR)
cbw $COMP      MODACT = $XMODEL
cbw $COMP      IF(PEFLOW.EQ.$XMODEL) CALL XRESTO(NERR)
cbw $COMP      MODACT=$PEMODEL

C OUTPUT POROELASTIC MODEL GRID ELEMENT ARRAYS

      DO NDIM=1,NDIM_ELASTIC
         CALL PERGEAOUT(N_EDISP,NDIM,NERR)
      ENDDO
      
      CALL RGEAOUT(N_EPV,1,NERR)

C     DO I = 1,$MXMOD
C        IF(I.EQ.MODEL) THEN
C           MODACT = I
C           CALL RGEAOUT(N_DISP_COMP(I),1,NERR)
C           MODACT = 0
C        ENDIF
C     ENDDO

      END
C*********************************************************************
      SUBROUTINE PERESTI(IU,NERR)
C*********************************************************************

C  Directs intput of poroelastic model specific restart data

C  A = INPUT STRING (INPUT, CHARACTER*120)

C  IU = RESTART UTILITY INTEGERS (6) (INPUT, INTEGER)
C       IU(1) IS RESERVED FOR RECORD SET ID

C  NERR = ERROR KEY STEPPED BY ONE FOR EACH ERROR
C         (INPUT AND OUTPUT, INTEGER )

C  Note:  All grid-element arrays are automatically input by the 
C         framework.

C*********************************************************************
      INCLUDE 'control.h'
      INCLUDE 'pemodel.h'
      INTEGER IU(6),NERR

      NERR = NERR

cbw $BLACKI      IF(PEFLOW.EQ.BLACKI) CALL IRESTI(NERR)

cbw $COMP      MODACT = $XMODEL
cbw $COMP      IF(PEFLOW.EQ.$XMODEL) CALL XRESTI(IU,NERR)
cbw $COMP      MODACT=$PEMODEL
  
      END
C*********************************************************************
      SUBROUTINE PERGEAOUT (NARR,NEXTRA,NERR)
C*********************************************************************

C  DIRECTS WRITING OF A GRID-ELEMENT (CORNER POINT) ARRAY TO A RESTART FILE

C  NARR = GRID-ELEMENT ARRAY NUMBER OF ARRAY TO BE OUTPUT (INPUT, INTEGER)

C  NEXTRA = PRODUCT OF 4TH AND HIGHER DIMENSIONS TO BE OUTPUT (INPUT, INTEGER)
C           (SET TO 1 IF THERE IS NO FORTH DIMENSION)
C           NOTE THAT ONLY 1 VALUE OF THE 4TH DIMENSION IS OUTPUT FOR EACH
C           CALL TO RGEAOUT

C  NERR = ERROR COUNT STEPPED BY ONE ON ERROR (INPUT AND OUTPUT, INTEGER)

C*********************************************************************
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'blkary.h'
      INCLUDE 'output.h'
      INCLUDE 'restc.h'

      INTEGER NARG(2)
      CHARACTER*$MXANAM ANAM(2)
      EXTERNAL PERSR8
cbw
      INTEGER PEMOD
cbw

$MANY      MSGTAG($PEMODEL+1)=MSGTAG($PEMODEL+1)+1
cbw $MANY      IF (MSGTAG($PEMODEL+1).GT.4999) MSGTAG=1000                                   
$MANY      IF (MSGTAG($PEMODEL+1).GT.MSGTAG2($PEMODEL+1)) THEN
$MANY         MSGTAG($PEMODEL+1)=MSGTAG1($PEMODEL+1)                                   
$MANY      ENDIF

cbw      CALL ARYTYPE(NARR,KIND,NDIM4,KERR)
      CALL ARYTYPE(NARR,KIND,NDIM4,PEMOD,KERR)
      IF (KERR.GT.0.OR.KIND.NE.2) GO TO 13

      IF (MYPRC.EQ.0) THEN
         CALL GETANAM(NARR,ANAM(1),KERR)
         IF (KERR.GT.0) GO TO 13
         L=3
         IF (FORMOUT) THEN
            WRITE (NFROUT,11) L,NARR,L,L,L,L
   11       FORMAT(6I9)
            WRITE (NFROUT,12) ANAM(1)
   12       FORMAT(A$MXANAM)
         ELSE
            WRITE (NFROUT) L,NARR,L,L,L,L
            WRITE (NFROUT) ANAM(1)
         ENDIF
      ENDIF

      NARG(1)=1
      NARG(2)=NARR
      NARS=NARR
      NEORS=0
      I4UTIL=NEXTRA
      IF (I4UTIL.LT.1) I4UTIL=1
      IF (I4UTIL.GT.NDIM4) I4UTIL=NDIM4
      NERRP=NERR

      CALL CALLWORK(PERSR8,NARG)
$MANY      IF (MYPRC.EQ.0) CALL RRR8(NERR)

      NERR=NERRP

      L=0
      IF (MYPRC.EQ.0) THEN
         IF (FORMOUT) THEN
            WRITE (NFROUT,15) L,L,L,L,L,L
   15       FORMAT(6I8)
         ELSE
            WRITE (NFROUT) L,L,L,L,L,L
         ENDIF
      ENDIF

$MANY      CALL WAITALL()

      RETURN

   13 WRITE (NFOUT,14)
   14 FORMAT (/' ERROR # 434; INVALID ARRAY NUMBER IN RGEAOUT()')
      NERR=NERR+1

      END
C*********************************************************************
      SUBROUTINE PERSR8 (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                 KEYOUT,NBLK,ARY)
C*********************************************************************

C  WRITES A REAL*8 GRID-ELEMENT (CORNER POINT) ARRAY TO A RESTART FILE

C  ARY = GRID-ELEMENT ARRAY TO BE OUTPUT (INPUT, REAL*8)

C*********************************************************************
      PARAMETER (NMX=3*$MXPBUF)
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'layout.h'
      INCLUDE 'output.h'
      INCLUDE 'blkary.h'
      INCLUDE 'restc.h'

      REAL*8   ARY(IDIM,JDIM,KDIM,*)
      INTEGER  JL1V(KDIM),JL2V(KDIM), KEYOUT(IDIM,JDIM,KDIM)
      LOGICAL  OUTA

      CALL BLKOFF(NBLK,IOFF,JOFF,KOFF,MERR)

      JG1=0
      N=6
      RBUFR8(1)=NBLK
      RBUFR8(5)=I4UTIL

      DO 2 K=KL1,KL2+1
      JL1=JL1V(K)
      JL2=JL2V(K)
      KG=K+KOFF
      RBUFR8(4)=KG
      NK=N0MAP(NBLK)+KG*NYMAP(NBLK)+JOFF
      DO 2 J=JL1,JL2+1
      OUTA=.FALSE.

      IF (PRCMAP(NK+J).EQ.MYPRC) THEN
         JG2=J+JOFF
         IF (JG1.EQ.0) JG1=JG2
         DO 3 I=IL1,IL2+1
         N=N+1
    3    RBUFR8(N)=ARY(I,J,K,I4UTIL)
      ELSE
         OUTA=.TRUE.
      ENDIF

      IF (N+IDIM.GT.NMX) OUTA=.TRUE.
      IF (J.EQ.JL2) OUTA=.TRUE.
      IF (OUTA.AND.(N.GT.6)) THEN
         RBUFR8(2)=JG1
         RBUFR8(3)=JG2
         RBUFR8(6)=N

         IF (MYPRC.EQ.0) THEN

            NB=RBUFR8(1)+.1
            JA=RBUFR8(2)+.1
            JB=RBUFR8(3)+.1
            KK=RBUFR8(4)+.1
            ME=RBUFR8(5)+.1
            MM=RBUFR8(6)+.1
            NEORS=NEORS+MM-6
            IF (FORMOUT) THEN
               WRITE (NFROUT,4) NB,JA,JB,KK,ME,MM-6
    4          FORMAT(6I8)
               WRITE (NFROUT,5) (RBUFR8(NN),NN=7,MM)
    5          FORMAT(5G22.16)
            ELSE
               WRITE (NFROUT) NB,JA,JB,KK,ME,MM-6
               WRITE (NFROUT) (RBUFR8(NN),NN=7,MM)
            ENDIF

         ELSE

$MANY      CALL RSSR8(N,RBUFR8,NERR)

         ENDIF
         N=6
         JG1=0
      ENDIF

    2 CONTINUE

      END
C*********************************************************************
      SUBROUTINE PEQUIT (NERR)
C*********************************************************************

C  Terminate poroelastic model

C*********************************************************************
 
      INCLUDE 'control.h'
      INCLUDE 'pemodel.h'

      NERR=NERR

cbw $BLACKI      IF(PEFLOW.EQ.BLACKI) CALL IQUIT(NERR)
$COMP      MODACT = $XMODEL
$COMP      IF(PEFLOW.EQ.$XMODEL) CALL XQUIT(NERR)
$COMP      MODACT=$PEMODEL

$HYPRE         CALL HYPRE_SOLVE(2,KERR) 
      END

