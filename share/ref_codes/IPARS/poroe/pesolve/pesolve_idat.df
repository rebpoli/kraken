C PESOLVER_IDAT.F

C***********************************************************************
      SUBROUTINE PESOLVE_IDAT (NERR,KINP)
C***********************************************************************
C Routine initializes pcg linear solver parameters and get input values
C NERR = Error number     (input and output)
C KINP = Input type       (input)
C      = 1 Initial data
C      = 2 Transient data
C***********************************************************************
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'layout.h'

      INCLUDE 'pemodel.h'
      INCLUDE 'pesolve.h'
      INCLUDE 'pemulgrd.h'

      INTEGER NERR,KINP

      INTEGER NDUM

C GET LINEAR SOLVER TYPE FOR THE ELASTICITY SYSTEM

      IESOLVE = 0
      CALL GETVAL('PESOLVE ',IESOLVE,'I4',0,0,0,0,NDUM,KERR)
      IF(NDUM.GT.0) THEN
         IF(IESOLVE.LT.0.OR.IESOLVE.GT.4) THEN
            IF(LEVELC) WRITE(NFOUT,50)
            NERR=NERR+1
            RETURN
         ENDIF
      ENDIF
      IF(IESOLVE.EQ.0) THEN
         IF(LEVELC) WRITE(NFOUT,"(' POROELASTIC LINEAR SOLVER',
     &     '(IESOLVE=0):',T58,'DIRECT')")
         RETURN
      ELSE IF(IESOLVE.EQ.1) THEN
         IF(LEVELC) WRITE(NFOUT,"(' POROELASTIC LINEAR SOLVER',
     &     '(IESOLVE=1):',T60,'PCG')")
      ELSE IF(IESOLVE.EQ.2) THEN
         IF(LEVELC) WRITE(NFOUT,"(' POROELASTIC LINEAR SOLVER',
     &     '(IESOLVE=2):',T56,'BiCGS ')")
      ELSE IF(IESOLVE.EQ.3) THEN
         IF(LEVELC) WRITE(NFOUT,"(' POROELASTIC LINEAR SOLVER',
     &     '(IESOLVE=2):',T56,'GAUSS_SEIDEL')")
      ELSE IF(IESOLVE.EQ.4) THEN
         IF(LEVELC) WRITE(NFOUT,"(' POROELASTIC LINEAR SOLVER',
     &     '(IESOLVE=4):',T56,'CG')")
      ENDIF

C SET DEFAULT VALUES TO LINEAR SOLVER PARAMETERS FOR ITERATIVE SOLVERS
 
      IF (KINP.EQ.1) THEN
         PE_ITMAX = 10000
         PE_TOL = 1.0E-5
         PE_PREC = 0
      ENDIF

C GET THE INPUTS OF LINEAR SOLVER PARAMETERS

      IF (LEVELC.AND.KINP.EQ.1)
     &   WRITE(NFOUT,"(/' PEMODEL LINEAR SOLVER PARAMETERS:')")

      CALL GETVAL('PETOL ',PE_TOL,'R8',0,0,0,0,NDUM,NERR)
      IF (LEVELC.AND.((NDUM.GT.0).OR.(KINP.EQ.1)))
     &   WRITE (NFOUT,5) PE_TOL

      CALL GETVAL('PEITMAX ',PE_ITMAX,'I4',0,0,0,0,NDUM,NERR)
      IF (LEVELC.AND.((NDUM.GT.0).OR.(KINP.EQ.1)))
     &   WRITE (NFOUT,6) PE_ITMAX

      IF(IESOLVE.EQ.1.OR.IESOLVE.EQ.2) THEN
         NDUM=0
         PE_PREC=3
         CALL GETVAL('PEPREC ',PE_PREC,'I4',0,0,0,0,NDUM,NERR)
         IF (NDUM.GT.0) THEN
            IF (PE_PREC.LT.1.OR.PE_PREC.GT.4) THEN
                IF(LEVELC) WRITE(NFOUT,51)  
                NERR=NERR+1
                RETURN
            ENDIF
         ENDIF
         IF(PE_PREC.EQ.1) WRITE(NFOUT,9) PE_PREC
         IF(PE_PREC.EQ.2) WRITE(NFOUT,10) PE_PREC
         IF(PE_PREC.EQ.3) WRITE(NFOUT,11) PE_PREC
         IF(PE_PREC.EQ.4) WRITE(NFOUT,12) PE_PREC
      
         IF(PE_PREC.EQ.1) THEN
            NDDY=1
            CALL GETVAL('NDDY ',NDDY,'I4',0,0,0,0,NDUM,NERR)
            IF (NDUM.EQ.0) THEN
                IF(LEVELC) WRITE(NFOUT,52)
                NERR=NERR+1
                RETURN
            ELSE
                DO N=1,NUMBLK
                   CALL BLKDIM(N,NX,NY,NZ,KERR)
                   IF(NDDY.LE.0.OR.NDDY.GT.NY) THEN
                      IF(LEVELC) WRITE(NFOUT,53) 
                      NERR=NERR+1
                      RETURN
                   ENDIF
                ENDDO
            ENDIF
            IF (LEVELC.AND.((NDUM.GT.0).OR.(KINP.EQ.1)))
     &          WRITE(NFOUT,13) NDDY

            NDDZ=1
            CALL GETVAL('NDDZ ',NDDZ,'I4',0,0,0,0,NDUM,NERR)
            IF (NDUM.EQ.0) THEN
                IF(LEVELC) WRITE(NFOUT,54)
                NERR=NERR+1
                RETURN
            ELSE
                DO N=1,NUMBLK
                   CALL BLKDIM(N,NX,NY,NZ,KERR)
                   IF(NDDZ.LE.0.OR.NDDZ.GT.NZ) THEN
                      IF(LEVELC) WRITE(NFOUT,55)
                      NERR=NERR+1
                      RETURN
                   ENDIF
                ENDDO
            ENDIF
            IF (LEVELC.AND.((NDUM.GT.0).OR.(KINP.EQ.1)))
     &         WRITE(NFOUT,14) NDDZ

         ELSE IF(PE_PREC.EQ.3) THEN

            ILU_IFILL=0
            CALL GETVAL('PEILU_FILL ',ILU_IFILL,'I4',0,0,0,0,
     &           NDUM,NERR)
            IF (LEVELC.AND.((NDUM.GT.0).OR.(KINP.EQ.1)))
     &         WRITE(NFOUT,15) ILU_IFILL
         ENDIF
      ENDIF

C GET INPUTS FOR THE 2D PRECONDITIONER

      PESOLV2D=0
      CALL GETVAL('PESOLV2D ',PESOLV2D,'I4',0,0,0,0,NDUM,NERR)
      IF(NDUM.GT.0) THEN
         IF(PESOLV2D.LT.0.OR.PESOLV2D.GT.2) THEN
            IF(LEVELC) WRITE(NFOUT,56)
            NERR=NERR+1
            RETURN
         ELSE
            IF(LEVELC) THEN
               IF(PESOLV2D.EQ.0) THEN
                  WRITE(NFOUT,16) PESOLV2D
               ELSE IF(PESOLV2D.EQ.1) THEN
                  WRITE(NFOUT,17) PESOLV2D
               ELSE IF(PESOLV2D.EQ.2) THEN
                  WRITE(NFOUT,18) PESOLV2D
               ENDIF
            ENDIF
         ENDIF
      ENDIF

C GET MULTIGRID LEVEL IF PESOLV2D IS SET TO 2                  

      IF(PESOLV2D.EQ.2) THEN
         PEMGLEV=0
         CALL GETVAL('PEMGLEVEL ',PEMGLEV,'I4',0,0,0,0,NDUM,NERR) 
         IF(NDUM.GT.0) THEN
            IF(PEMGLEV.GT.$MXPEMGL.OR.PEMGLEV.LE.0) THEN
               IF(LEVELC) WRITE(NFOUT,57) $MXPEMGL
               NERR=NERR+1
               RETURN
            ELSE
               IF (LEVELC.AND.((NDUM.GT.0).OR.(KINP.EQ.1)))         
     &            WRITE(NFOUT,19) PEMGLEV
            ENDIF
         ENDIF
      ENDIF

   5  FORMAT('     PESOLVER RELATIVE TOLERANCE ',T49,G12.4)
   6  FORMAT('     PESOLVER MAX NUMBER OF ITERATIONS ',T48,I10)
   7  FORMAT('     PE_PREC ',T58,I5)
   8  FORMAT('     PE_PREC: OUT OF RANGE (DEFAULTS TO 1)')
   9  FORMAT('     PE_PREC: BLOCK JACOBI',T57,I5)
  10  FORMAT('     PE_PREC: LSOR',T57,I5)
  11  FORMAT('     PE_PREC: ILU',T57,I5)
  12  FORMAT('     PE_PREC: DILU',T57,I5)
  13  FORMAT('     PREC DD: NUMBER OF SUBDOMAINS IN Y ',T57,I5)
  14  FORMAT('     PREC DD: NUMBER OF SUBDOMAINS IN Z ',T57,I5)
  15  FORMAT('     PE_ILU_IFILL: ',T57,I5)
  16  FORMAT('     PESOLV2D: NO 2D CORRECTION',T57,I5)
  17  FORMAT('     PESOLV2D: DIRECT SOLVER',T57,I5)
  18  FORMAT('     PESOLV2D: MULTIGRID SOLVER',T57,I5)
  19  FORMAT('     PEMGLEV : MULTIGRID LEVEL ',T57,I5)
  50  FORMAT(' ERROR: PESOLVE IS OUT RANGE CHOOSE FROM 0,1,2,3 AND 4')
  51  FORMAT(' ERROR: PE_PREC IS OUT OF RANGE, CHOOSE FROM 1,2 AND 3')
  52  FORMAT(' ERROR: NDDY IS NOT SPECIFIED FOR BLOCK JACOBI PRECOND.')
  53  FORMAT(' ERROR: NDDY IS OUT OF RANGE. NDDY SHOULD BE 0<NDDY<=NY')
  54  FORMAT(' ERROR: NDDZ IS NOT SPECIFIED FOR BLOCK JACOBI PRECOND.')
  55  FORMAT(' ERROR: NDDZ IS OUT OF RANGE. NDDZ SHOULD BE 0<NDDZ<=NZ')
  56  FORMAT(' ERROR: PESOLV2D IS OUT OF RANGE, CHOOSE FROM 0,1 AND 2')
  57  FORMAT(' ERROR: MULTIGRID LEVEL IS GREATER THE MAX. VALUE',I3)
      END
C**********************************************************************
C                    END OF PESOLVER_IDAT.DF
C**********************************************************************

