C  TRVISUAL.F - SETUP AND OUTPUT TRANSPORT-CHEMISTRY 

C  ROUTINES IN THIS MODULE:

C SUBROUTINE TRVIS_TRANSL(SCALAR,NUM,NAME)
C SUBROUTINE TRVIS_OUTPUT() - INTERFACE TO THE FRAMEWORK VIS_OUTPUT
C                               ROUTINES
C===============================================================
C  CODE HISTORY:
C M. PESZYNSKA, 8/00, INITIAL VERSION
C S. G. THOMAS, 9/09, MODS FOR STREAMLINING VIS OPTIONS
C ---------------------------------------------
      SUBROUTINE TRVIS_TRANSL(SCALAR,NUM,NAME)
C ---------------------------------------------
C LOOKUP THE <NAME> IN THE GLOSSARY FOR THE MODEL
C WHICH IS READ FROM TVISUAL.H
C ---- FOR DIFFERENT MODELS: COPY THE ROUTINE, CHANGE THE INCLUDE FILE
C 
C SET VIS_VARNAMES, VIS_OFFSETS AND VIS_IPARS_VARS:
C
C VIS_VARNAMES: THE NAMES THAT WILL BE PUT IN THE TECPLOT FILE
C VIS_IPARS_NAMES: THE NAMES THAT ARE "OFFICIAL" TO IPARS
C VIS_OFFSETS: THE OFFSEST AS DECIDED IN IPARS
C --------------
C IF NOT IN GLOSSARY, COPY NAMES VERBATIM, SET OFFSET TO 1 (DEFAULT)
C ---------------------------------------------
      IMPLICIT NONE
C PARAMETERS      
      CHARACTER*$MXANAM NAME
      INTEGER NUM
      LOGICAL SCALAR

C INCLUDES
      INCLUDE 'control.h'
      INCLUDE 'visual.h'
      INCLUDE 'trvisual.h'
      INCLUDE 'trmodel.h'

C LOCAL VARIABLES
      INTEGER I,K,NNUM
C -----------------------------------------------------------

$HYDROI         IF(FLOWMODEL.EQ.$HMODEL) THEN
$HYDROI           IPARS_VEC_OFFSETS(1,1) = 1
$HYDROI           IPARS_VEC_OFFSETS(2,1) = 4
$HYDROI           IPARS_VEC_OFFSETS(3,1) = 7
$HYDROI         ENDIF

      IF (SCALAR) THEN
C -----------------------------
$COMP          MODACT=$XMODEL
$COMP          IF(FLOWMODEL.EQ.$XMODEL)
$COMP     &     CALL XVIS_TRANSL(SCALAR,NUM, NAME)

$CMFMFE          MODACT=$XMMODEL
$CMFMFE          IF(FLOWMODEL.EQ.$XMMODEL)
$CMFMFE     &     CALL XVIS_TRANSL(SCALAR,NUM, NAME)

$HYDROI        MODACT=$HMODEL
$HYDROI        IF(FLOWMODEL.EQ.$HMODEL)
$HYDROI     &   CALL HVIS_TRANSL(SCALAR,NUM, NAME)

$SINGLEI       MODACT=$TMODEL
$SINGLEI       IF(FLOWMODEL.EQ.$TMODEL)
$SINGLEI     &  CALL TVIS_TRANSL(SCALAR,NUM, NAME)
      MODACT=$TRMODEL

C IF VARIABLE WAS FOUND IN ONE OF THE FLOW MODELS, RETURN

      IF (N_VIS_VARS (NUM,CURRENT_MODEL).NE.N_VISDUM) RETURN

C OTHERWISE, LOOK FOR IT IN TRANSPORT MODEL

         VIS_VARNAMES(NUM) = NAME
         VIS_OFFSETS(NUM) = 1
         VIS_IPARS_NAMES (NUM ) = NAME

         DO I=1,IPARS_NSCL
            IF (IPARS_SCL_NAMES(1,I).EQ.NAME) THEN

               VIS_VARNAMES(NUM) = IPARS_SCL_NAMES(2,I)
               VIS_IPARS_NAMES (NUM) = IPARS_SCL_NAMES(3,I)
               VIS_OFFSETS (NUM) = IPARS_SCL_OFFSETS(I)
            ENDIF
         ENDDO
        
         CALL VIS_ARYNUM(NUM)
 
      ELSE 
C ---------------------------------
C  VECTOR CASE : 

$COMP           MODACT=$XMODEL
$COMP           IF(FLOWMODEL.EQ.$XMODEL)
$COMP     &    CALL XVIS_TRANSL(SCALAR,NUM, NAME)

$CMFMFE          MODACT=$XMMODEL
$CMFMFE          IF(FLOWMODEL.EQ.$XMMODEL)
$CMFMFE     &   CALL XVIS_TRANSL(SCALAR,NUM, NAME)

$HYDROI         MODACT=$HMODEL
$HYDROI         IF(FLOWMODEL.EQ.$HMODEL)
$HYDROI     &  CALL HVIS_TRANSL(SCALAR,NUM, NAME)

$SINGLEI         MODACT=$TMODEL
$SINGLEI         IF(FLOWMODEL.EQ.$TMODEL)
$SINGLEI     &  CALL TVIS_TRANSL(SCALAR,NUM, NAME)
      MODACT=$TRMODEL

         DO K=1,3             
            NNUM = VIS_SCL + (NUM-1)*3 +K

C     IF VARIABLE WAS FOUND IN ONE OF THE FLOW MODELS, RETURN

        IF (N_VIS_VARS (NNUM,CURRENT_MODEL).NE.N_VISDUM) RETURN
C        IF (VIS_OFFSETS (NNUM).NE.0) RETURN

C     OTHERWISE, LOOK FOR IT IN TRANSPORT MODEL

            VIS_VARNAMES( NNUM ) = NAME
            VIS_OFFSETS( NNUM  ) = 1            
            VIS_IPARS_NAMES (NNUM) = NAME
         ENDDO

         DO I=1,IPARS_NVEC
            IF (IPARS_VEC_NAMES(1,I).EQ.NAME) THEN
               DO K=1,3
                  NNUM = VIS_SCL + (NUM-1)*3 +K
                  VIS_VARNAMES(NNUM) = IPARS_VEC_NAMES(1+K,I)
                  VIS_IPARS_NAMES(NNUM) = IPARS_VEC_NAMES(4+K,I)
                  VIS_OFFSETS (NNUM) = IPARS_VEC_OFFSETS(K,I)
               ENDDO
            ENDIF
         ENDDO

         DO K=1,3             
            NNUM = VIS_SCL + (NUM-1)*3 +K
            CALL VIS_ARYNUM(NNUM)
         ENDDO
         
      ENDIF

      END


c ====================================================================
      SUBROUTINE TRVIS_INIT ()
c --------------------------------------------------------------------
      IMPLICIT NONE
      INCLUDE 'control.h'

$HYDROI        MODACT=$HMODEL
$HYDROI        IF(FLOWMODEL.EQ.$HMODEL)
$HYDROI     &   CALL HVIS_INIT()

$SINGLEI       MODACT=$TMODEL
$SINGLEI       IF(FLOWMODEL.EQ.$TMODEL)
$SINGLEI     &  CALL TVIS_INIT()
      MODACT=$TRMODEL

      RETURN
      END


C===========================================================
      SUBROUTINE TRVIS_OUTPUT ()
C-----------------------------------------------------------
      IMPLICIT NONE

      INCLUDE 'control.h'
      INCLUDE 'layout.h'
      INCLUDE 'blkary.h'
      INCLUDE 'trarydat.h'
      INCLUDE 'trmodel.h'
      INCLUDE 'visual.h'

      INTEGER N_ARRAY,I

C -------------------------------------------------------------      
C THE VALUE OF VISFLAG CAN BE SET ANYWHERE, FOR EXAMPLE IN RESTART
C FILES
C      
      IF((VISFLAG.LT.1).OR.(VISFLAG.GT.MAXVISFLAG)) THEN
         GO TO 1
      ENDIF

C ---------------------------------------
C EXECUTE MODEL SPECIFIC POST-PROCESSING ROUTINES FOR FLOWMODELS

$COMP           MODACT=$XMODEL
$COMP           IF(FLOWMODEL.EQ.$XMODEL)
$COMP     &    CALL XVIS_OUTPUT()

$CMFMFE          MODACT=$XMMODEL
$CMFMFE          IF(FLOWMODEL.EQ.$XMMODEL)
$CMFMFE     &  CALL XVIS_OUTPUT()

$HYDROI         MODACT=$HMODEL
$HYDROI         IF(FLOWMODEL.EQ.$HMODEL)
$HYDROI     &  CALL HVIS_OUTPUT()

$SINGLEI         MODACT=$TMODEL
$SINGLEI         IF(FLOWMODEL.EQ.$TMODEL)
$SINGLEI     &  CALL TVIS_OUTPUT()
      MODACT=$TRMODEL

C ---------------------------------------
C UPDATE ALL VARIABLES USING TEMPLATE 2 
C

      DO I=1, VIS_NVARS
         N_ARRAY = N_VIS_VARS(I,CURRENT_MODEL)

C         WRITE(*,*) ' TRVISOUT VISVAR ',I,' IS ',
C     &        N_VIS_VARS(I,CURRENT_MODEL)

$MANY      CALL UPDATE(N_ARRAY,2)
      ENDDO

C ------------------ VISUALIZATION OUTPUT 
C PASS THE ARGUMENTS TO THE FRAMEWORK  VIS ROUTINE

      CALL VIS_OUTPUT()
                
 1    CONTINUE
      RETURN
      END

C --------------------------------------------------------------------


