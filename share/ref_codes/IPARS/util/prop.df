C  PROP.F - ROCK, FLUID PROPERTY, AND DEPTH CALCULATIONS - ALL MODELS

C  ROUTINES IN THIS MODULE:

C  SUBROUTINE SETREL3  (NERR)
C  SUBROUTINE RELPERM3 (KR,SW,SG,RW,RG,RO,RWSW,ROSW,ROSG,RGSG)
C  SUBROUTINE ROCKPROG (NERR)
C  SUBROUTINE DODEPTH  (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,
C                       KL2,KEYOUT,NBLK,DEPTH)
C  SUBROUTINE DOROCK   (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,
C                       KL2,KEYOUT,NBLK,DEPTH,POR,XPERM,YPERM,ZPERM)

C  CODE HISTORY:

C  JOHN WHEELER     10/7/95     ALPHA CODE
C  JOHN WHEELER     8/27/99     MODIFY DEPTHS FOR SMALL ANGLE APPROXIMATION
C  JOHN WHEELER     12/5/99     REPLACE RELATIVE PERMEABILITY MODELS
C  JOHN WHEELER     12/5/99     MODIFY POROSITY AND PERMEABILITY

C*********************************************************************
      SUBROUTINE SETREL3 (NERR)
C*********************************************************************

C  Sets parameters required by 3 phase relative permeability models

C  NERR = Error number steped by 1 on error (input & output, INTEGER)

C*********************************************************************
      INCLUDE 'control.h'
      INCLUDE 'rock.h'
      INCLUDE 'utldat.h'
      REAL*8 RELC1($MXSBBK),RELC2($MXSBBK),RELC3($MXSBBK)
      REAL*8 DUB1,DUB2,DUB3,DUB4,DUB5,DUB6,DUB7,DUB8,DUB9
      CHARACTER*50 TIT

C  GET RELATIVE PERMEABILITY MODEL NUMBERS AND INPUT RESIDUAL PHASE 
C  SATURATIONS FOR SPECIFIC APPLICATIONS

      NN=0
      DO 1 I=1,$MXSBBK
      MODREL(I)=0
      SWRES(I)=0.D0
      SORES(I)=0.D0
      SGRES(I)=0.D0
      KRNW0(I)=0.25D0
      RPLMDA(I)=1.D0
      ENTRYP(I)=0.D0
      IF (NKOSW(I).GT.0.AND.NKWSW(I).GT.0.AND.NKOSG(I).GT.0
     & .AND.NKGSG(I).GT.0) THEN
         MODREL(I)=1
         SWRES(I)=0.2D0
         SORES(I)=0.2D0
         SGRES(I)=0.2D0
         KRNW0(I)=0.2D0
         RPLMDA(I)=2.0D0
         ENTRYP(I)=0.2D0
      ENDIF
    1 CONTINUE
      CALL GETVAL('MODREL ',MODREL,'I4',$MXSBBK,0,0,0,NDUM,NERR)
      DO 2 I=1,$MXSBBK
      IF (MODREL(I).GT.0.AND.(NKOSW(I).EQ.0.OR.NKWSW(I).EQ.0.OR.
     & NKOSG(I).EQ.0.OR.NKGSG(I).EQ.0)) THEN
         NERR=NERR+1
         MODREL(I)=0
         IF (LEVELC) WRITE (NFOUT,3) I
    3    FORMAT (/' ERROR 509; INSUFFICIENT RELATIVE PERMEABILITY DATA',
     &     'FOR ROCK TYPE',I5)
      ENDIF
      IF (MODREL(I).GT.0) NN=1
    2 CONTINUE

      CALL GETVAL('SWRES ',SWRES,'R8',$MXSBBK,0,0,0,NDUM,NERR)
      IF(NDUM.GT.0.AND.NERR.GT.0) THEN
         IF(LEVELC) WRITE(NFOUT,*) ' ERROR READING SWRES! '
      ENDIF
      CALL GETVAL('SORES ',SORES,'R8',$MXSBBK,0,0,0,NDUM,NERR)
      IF(NDUM.GT.0.AND.NERR.GT.0) THEN
         IF(LEVELC) WRITE(NFOUT,*) ' ERROR READING SORES! '
      ENDIF
      CALL GETVAL('SGRES ',SGRES,'R8',$MXSBBK,0,0,0,NDUM,NERR)
      IF(NDUM.GT.0.AND.NERR.GT.0) THEN
         IF(LEVELC) WRITE(NFOUT,*) ' ERROR READING SGRES! '
      ENDIF
      CALL GETVAL('KRNW0 ',KRNW0,'R8',$MXSBBK,0,0,0,NDUM,NERR)
      IF(NDUM.GT.0.AND.NERR.GT.0) THEN
         IF(LEVELC) WRITE(NFOUT,*) ' ERROR READING KRNW0! '
      ENDIF
      CALL GETVAL('LAMBDA ',RPLMDA,'R8',$MXSBBK,0,0,0,NDUM,NERR)
      IF(NDUM.GT.0.AND.NERR.GT.0) THEN
         IF(LEVELC) WRITE(NFOUT,*) ' ERROR READING LAMBDA! '
      ENDIF
      CALL GETVAL('ENTRYPRES ',ENTRYP,'R8',$MXSBBK,0,0,0,NDUM,NERR)
      IF(NDUM.GT.0.AND.NERR.GT.0) THEN
         IF(LEVELC) WRITE(NFOUT,*) ' ERROR READING ENTRYPRES! '
      ENDIF

C  INPUT THREE-PHASE MODEL PARAMETERS

      DO 4 I=1,$MXSBBK
      RELC1(I)=0.D0
      RELC2(I)=0.D0
      RELC3(I)=0.D0
      IF (MODREL(I).EQ.3) THEN
         RELC1(I)=2.6
         RELC2(I)=2.4
      ENDIF
      IF (MODREL(I).EQ.4) THEN
         RELC1(I)=.9
         RELC2(I)=.9
      ENDIF
      IF (MODREL(I).EQ.5) THEN
         RELC1(I)=.9
         RELC2(I)=.9
      ENDIF
    4 CONTINUE

      CALL GETVAL('RELCON1 ',RELC1,'R8',$MXSBBK,0,0,0,NDUM,NERR)
      CALL GETVAL('RELCON2 ',RELC2,'R8',$MXSBBK,0,0,0,NDUM,NERR)
      CALL GETVAL('RELCON3 ',RELC3,'R8',$MXSBBK,0,0,0,NDUM,NERR)

      IF (NERR.GT.0.OR.NN.EQ.0) RETURN

C  SET 3 PHASE MODEL CONSTANTS

      DO 5 I=1,$MXSBBK
      DO 6 J=1,9
    6 AREL(J,I)=0.D0
      IF (MODREL(I).LT.1) GO TO 5
      DUB1=1.D0-XYZERO(NKOSG(I))
      DUB2=1.D0-XYZERO(NKOSW(I))
      DUB3=XYZERO(NKWSW(I))
      DUB4=XYZERO(NKGSG(I))
      CALL LOOKUP(NKOSW(I),DUB3,DUB5,DUB7)

C  STONE'S MODEL I

      IF (MODREL(I).EQ.1) THEN
         AREL(1,I)=DUB2
         AREL(2,I)=DUB3
         AREL(3,I)=(DUB2-DUB1+DUB3)/(1.D0-DUB1)
         AREL(4,I)=1.D0-DUB3
         AREL(5,I)=1.0/DUB5
         AREL(6,I)=1.D0-AREL(3,I)
      ENDIF

C  STONE'S MODEL II

      IF (MODREL(I).EQ.2) THEN
         AREL(1,I)=DUB5
         AREL(2,I)=1.D0/DUB5
      ENDIF

C  COREY'S MODEL

      IF (MODREL(I).EQ.3) THEN
         CALL LOOKUP(NKOSG(I),DUB4,DUB6,DUB7)
         DUB7=1.D0-DUB3-DUB1
         AREL(1,I)=(DUB1-DUB2)/DUB7
         AREL(2,I)=(DUB6-DUB5)/DUB7
         AREL(3,I)=(RELC2(I)-RELC1(I))/DUB7
         AREL(4,I)=DUB5
         AREL(5,I)=1.D0-DUB2
         AREL(6,I)=1.D0+AREL(1,I)
         AREL(7,I)=1.D0-DUB2-DUB3-DUB4
         AREL(8,I)=RELC1(I)
      ENDIF

C  WHEELER'S MODEL I

      IF (MODREL(I).EQ.4) THEN
         AREL(1,I)=RELC1(I)
         AREL(2,I)=RELC2(I)
      ENDIF

C  WHEELER'S MODEL II

      IF (MODREL(I).EQ.5) THEN
         AREL(1,I)=RELC1(I)
         AREL(2,I)=RELC2(I)
         AREL(3,I)=DUB3
      ENDIF

    5 CONTINUE

C  OUTPUT 3 PHASE DATA

      IF (LEVELC) THEN
         WRITE (NFOUT,*)
         TIT='******'
         CALL PRTTIT(TIT)
         TIT='3 PHASE RELATIVE PERMEABILITY DATA'
         CALL PRTTIT(TIT)

         WRITE (NFOUT,7)
    7    FORMAT(/' ROCK  MODEL    Sorw      Sorg     RELC1     RELC2',
     &     '     RELC3')
         DO 8 I=1,$MXSBBK
         IF (MODREL(I).GT.0) WRITE (NFOUT,9) I,MODREL(I),
     &   1.D0-XYZERO(NKOSW(I)),1.D0-XYZERO(NKOSG(I)),RELC1(I),RELC2(I),
     &    RELC3(I)
    9    FORMAT(I4,I6,6F10.4)
    8    CONTINUE

         WRITE (NFOUT,10)
   10    FORMAT(/' TYPICAL VALUES:'/' ROCK  MODEL     Sw        Sg',
     &      '        ko        kw        kg')

         DO 11 I=1,$MXSBBK
         IF (MODREL(I).LT.1) GO TO 11
         DUB1=0.D0
         DO 12 J=1,3
         DUB1=DUB1+.15D0
         DUB2=0.D0
         DO 12 K=1,3
         DUB2=DUB2+.15D0
         CALL RELPERM3 (I,DUB1,DUB2,DUB3,DUB4,DUB5,DUB6,DUB7,DUB8,DUB9)
         WRITE(NFOUT,9) I,MODREL(I),DUB1,DUB2,DUB5,DUB3,DUB4
   12    CONTINUE
   11    CONTINUE

      ENDIF

      END
C*********************************************************************
      SUBROUTINE RELPERM3 (KR,SW,SG,RW,RG,RO,RWSW,ROSW,ROSG,RGSG)
C*********************************************************************

C  Computes three phase relative permeability to water, oil, and gas
C  based on two phase data.

C  KR = Rock type (input, INTEGER)

C  SW, SG = Saturations of the water and gas phases (input, REAL*8)

C  RW,RG, = Relative permeability to water, gas, and oil
C  RO       (output, REAL*8)

C  RWSW,ROSW = Partial derivatives of relative permeability
C  ROSG,RGSG   (output, REAL*8)

C  NOTE: Specific 3 phase model is determined by MODREL(KR)
C  MODREL = 1 ==> STONE'S MODEL I
C         = 2 ==> STONE'S MODEL II
C         = 3 ==> COREY'S MODEL
C         = 4 ==> WHEELER'S MODEL I
C         = 4 ==> WHEELER'S MODEL II

C*********************************************************************
      INCLUDE 'rock.h'

      REAL*8 SW,SG,RW,RG,RO,RWSW,ROSW,ROSG,RGSG,ROW,ROG,ROGD,ROWD,
     & F1,F2,F3,F4,F5,DUB1,DUB2

      IF (SW.LT.1.D-4) THEN
         RW=0.D0
         RWSW=1.D-6
         ROSW=-1.D-6
         CALL LOOKUP (NKOSG(KR),SG,RO,ROSG)
         CALL LOOKUP (NKGSG(KR),SG,RG,RGSG)
         IF (RO.LT.0.D0) RO=0.D0
         IF (RG.LT.0.D0) RG=0.D0
         IF (ROSG.GT.-1.D-6) ROSG=-1.D-6
         IF (RGSG.LT.1.D-6) ROSG=1.D-6
         RETURN
      ENDIF

      IF (SG.LE.1.D-4) THEN
         RG=0.D0
         ROSG=-1.D-6
         RGSG=1.D-6
         CALL LOOKUP (NKOSW(KR),SW,RO,ROSW)
         CALL LOOKUP (NKWSW(KR),SW,RW,RWSW)
         IF (RW.LT.0.D0) RW=0.D0
         IF (RO.LT.0.D0) RO=0.D0
         IF (ROSW.GT.-1.D-6) ROSW=-1.D-6
         IF (RWSW.LT.1.D-6) RWSW=1.D-6
         RETURN
      ENDIF

      CALL LOOKUP (NKWSW(KR),SW,RW,RWSW)
      CALL LOOKUP (NKGSG(KR),SG,RG,RGSG)
      IF (RW.LT.0.D0) RW=0.D0
      IF (RG.LT.0.D0) RG=0.D0
      IF (RWSW.LT.1.D-6) RWSW=1.D-6
      IF (RGSG.LT.1.D-6) RGSG=1.D-6

      GO TO (1,2,3,4,5),MODREL(KR)

C  NO VALID MODEL

      WRITE(*,*) ' ERROR - INVALID RELATIVE PERMEABILITY MODEL, ROCK',KR
      STOP 13
      GO TO 20

C  STONE'S MODEL I

    1 CALL LOOKUP (NKOSW(KR),SW,RO,ROSW)
      CALL LOOKUP (NKOSG(KR),SG,ROG,ROGD)
      IF (RO.LT.0.D0) RO=0.D0
      IF (ROG.LT.0.D0) ROG=0.D0
      IF (ROSW.GT.-1.D-6) ROSW=-1.D-6
      IF (ROGD.GT.-1.D-6) ROGD=-1.D-6
      IF(SW >= AREL(2,KR)) THEN
         F1=AREL(1,KR)-AREL(3,KR)*SG
         F2=1.D0-SW-F1
         F3=F2-SG
         F4=AREL(4,KR)-F1
         F5=F4-SG
         IF(F3 <= 1.D-6 .OR. F2 <= 1.D-6 .OR. F5 <= 1.D-6) THEN
            RO=0.D0
            ROSW=-1.D-6
            ROSG=-1.D-6
         ELSE
            DUB2=F2*F5
            DUB1=F4*ROG*AREL(5,KR)/DUB2
            ROSW=DUB1*(F3*(ROSW+RO/F2)-RO)
            ROSG=RO*AREL(5,KR)*( F4*(F3*ROGD-AREL(6,KR)*ROG)
     &           + F3*ROG*(AREL(3,KR) + F4
     &           * (AREL(6,KR)/F5-AREL(3,KR)/F2) ) ) / DUB2
            RO=DUB1*RO*F3
         ENDIF
      ELSE
         RO=ROG
         ROSW=-1.D-6
         ROSG=ROGD
      ENDIF
      GO TO 20

C  STONE'S MODEL II

    2 CALL LOOKUP (NKOSW(KR),SW,RO,ROSW)
      CALL LOOKUP (NKOSG(KR),SG,ROG,ROGD)
      IF (RO.LT.0.D0) RO=0.D0
      IF (ROG.LT.0.D0) ROG=0.D0
      IF (ROSW.GT.-1.D-6) ROSW=-1.D-6
      IF (ROGD.GT.-1.D-6) ROGD=-1.D-6
      DUB1=AREL(2,KR)*RO+RW
      DUB2=AREL(2,KR)*ROG+RG
      ROSW=AREL(1,KR)*(DUB2*(AREL(2,KR)*ROSW+RWSW)-RWSW)
      ROSG=AREL(1,KR)*(DUB1*(AREL(2,KR)*ROGD+RGSG)-RGSG)
      RO=AREL(1,KR)*(DUB1*DUB2-RW-RG)
      GO TO 20

C  COREY'S MODEL

    3 CALL LOOKUP (NKOSW(KR),SW,RO,ROSW)
      CALL LOOKUP (NKOSG(KR),SG,ROG,ROGD)
      IF (RO.LT.0.D0) RO=0.D0
      IF (ROG.LT.0.D0) ROG=0.D0
      IF (ROSW.GT.-1.D-6) ROSW=-1.D-6
      IF (ROGD.GT.-1.D-6) ROGD=-1.D-6
      F1=AREL(4,KR)+AREL(2,KR)*SG
      F2=AREL(5,KR)-SW-AREL(6,KR)*SG
      F3=AREL(7,KR)-AREL(1,KR)*SG
      DUB1=AREL(8,KR)+AREL(3,KR)*SG
      F4=((F2/F3)**(DUB1-1.D0))/F3
      ROSW=-DUB1*F1*F4
      ROSG=F4*(AREL(2,KR)*F2+DUB1*F1*(AREL(1,KR)/F3-AREL(6,KR)))
      RO=F1*F2*F4
      GO TO 20

C  WHEELER'S MODEL I

    4 F1=SW+AREL(1,KR)*SG
      F2=SG+AREL(2,KR)*SW
      CALL LOOKUP (NKOSW(KR),F1,ROW,ROWD)
      CALL LOOKUP (NKOSG(KR),F2,ROG,ROGD)
      IF (ROW.LT.0.D0) ROW=0.D0
      IF (ROG.LT.0.D0) ROG=0.D0
      IF (ROWD.GT.-1.D-6) ROWD=-1.D-6
      IF (ROGD.GT.-1.D-6) ROGD=-1.D-6
      F3=SW+SG
      DUB1=SW/F3
      DUB2=SG/F3
      RO=DUB1*ROW+DUB2*ROG
      F4=(ROW-ROG)/F3
      ROSW=DUB1*ROWD+DUB2*ROGD*AREL(2,KR)+DUB2*F4
      ROSG=DUB2*ROGD+DUB1*ROWD*AREL(1,KR)-DUB1*F4
      GO TO 20

C  WHEELER'S MODEL II

    5 F5=SW-AREL(3,KR)
      F1=SW+AREL(1,KR)*SG
      F2=SG+AREL(2,KR)*F5
      CALL LOOKUP (NKOSW(KR),F1,ROW,ROWD)
      CALL LOOKUP (NKOSG(KR),F2,ROG,ROGD)
      IF (ROW.LT.0.D0) ROW=0.D0
      IF (ROG.LT.0.D0) ROG=0.D0
      IF (ROWD.GT.-1.D-6) ROWD=-1.D-6
      IF (ROGD.GT.-1.D-6) ROGD=-1.D-6
      F3=F5+SG
      DUB1=F5/F3
      DUB2=SG/F3
      RO=DUB1*ROW+DUB2*ROG
      F4=(ROW-ROG)/F3
      ROSW=DUB1*ROWD+DUB2*ROGD*AREL(2,KR)+DUB2*F4
      ROSG=DUB2*ROGD+DUB1*ROWD*AREL(1,KR)-DUB1*F4

C  LIMIT RO, ROSW, AND ROSG

   20 IF (RO.LT.1.D-6) RO=0.D0
      IF (ROSW.GT.-1.D-6) ROSW=-1.D-6
      IF (ROSG.GT.-1.D-6) ROSG=-1.D-6
      RETURN

      END
C*********************************************************************
      SUBROUTINE ROCKPROG (NERR)
C*********************************************************************

C  Modifies all depths according to user supplied code.
C  Modifies porosities and permeabilities according to user supplied code.

C  NERR = Error number steped by 1 on error (input & output, INTEGER)

C  Notes:

C  1) The following variables will automatically be made available to the
C     user code (as Real*8).  If used, the names must appear in an EXTERNAL
C     statement.

C     X, Y, Z            block center, or well element center location
C     NBLK               block number
C     DEP                depth
C     POR                porosity
C     XPERM,YPERM,ZPERM  permeabilities

C*********************************************************************
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'wells.h'
      INCLUDE 'blkary.h'
      INCLUDE 'layout.h'
      INCLUDE 'rockpg.h'

      CHARACTER*1 BLKBUF($MXTBUF)
      CHARACTER*9 NAMPROG
      INTEGER ID(6)

      EXTERNAL DODEPTH,DOROCK
$MPFA     &         ,DOROCK2

C  DEFINE EXTERNAL VARIABLES

      CALL EXTDEF(RNBLK,1,'NBLK  ',0,0,0,N)
      CALL EXTDEF(X,1,'X     ',0,0,0,N)
      CALL EXTDEF(Y,1,'Y     ',0,0,0,N)
      CALL EXTDEF(Z,1,'Z     ',0,0,0,N)
      CALL EXTDEF(DEP,1,'DEP   ',0,0,0,N)
      CALL EXTDEF(PORP,1,'POR   ',0,0,0,N)
      CALL EXTDEF(XPERMP,1,'XPERM ',0,0,0,N)
      CALL EXTDEF(YPERMP,1,'YPERM ',0,0,0,N)
      CALL EXTDEF(ZPERMP,1,'ZPERM ',0,0,0,N)
      IF (N.NE.0) THEN
         IF (LEVERR.LT.2) LEVERR=2
         IF (LEVELC) WRITE (NFOUT,1)
         GO TO 13
      ENDIF
    1 FORMAT (/' ERROR # 403; TOO MANY EXTERNAL VARIABLES')

C  INPUT PROGRAM DEPTHMOD

      HDEPMOD=.FALSE.
      NAMPROG='DEPTHMOD '
      CALL GETVALS(NAMPROG,BLKBUF,'BT',0,0,0,$MXTBUF,L,NERR)

      IF (L.EQ.0) GO TO 4

      HDEPMOD=.TRUE.

C  OUTPUT PROGRAM DEPTHMOD

      IF (LEVELC) THEN
         WRITE (NFOUT,*)
         TITU='DEPTH MODIFICATION PROGRAM (DEPTHMOD)'
         CALL PRTTIT(TITU)
         WRITE (NFOUT,*)
         CALL TBLKOUT(BLKBUF,L)
      ENDIF

C  COMPILE PROGRAM DEPTHMOD

      KE=0
      CALL CMPDRV(BLKBUF(1),L,NPGD,.FALSE.,KE)
      IF (KE.NE.0) GO TO 13

C  EXECUTE PROGRAM DEPTHMOD FOR THE DEPTH ARRAY

      ID(1)=1
      ID(2)=N_DEPTH
      CALL CALLWORK(DODEPTH,ID)
      IF (KE.NE.0) GO TO 13

C  EXECUTE PROGRAM FOR WELL ELEMENT DEPTHS

      DO 2 I=1,NUMWEL
      DO 2 J=1,NWELLI(I)
      X=ELEXYZ(1,J,I)
      Y=ELEXYZ(2,J,I)
      Z=ELEXYZ(3,J,I)
      DEP=ELEDEP(J,I)
      RNBLK=NBWELI(J,I)
      RNBLK=RNBLK+1.D-6
      CALL EXCDRV(NPGD,KE)
      IF (KE.NE.0) THEN
         IF (LEVERR.LT.3) LEVERR=3
         IF (LEVELC) WRITE (NFOUT,3)
         GO TO 13
    3    FORMAT(' ERROR # 418, USER PROGRAM ERROR IN DEPTHMOD')
      ENDIF
    2 ELEDEP(J,I)=DEP

C  INPUT PROGRAM ROCKMOD IF PRESENT

    4 NAMPROG='ROCKMOD '
      CALL GETVALS(NAMPROG,BLKBUF,'BT',0,0,0,$MXTBUF,L,NERR)

      IF (L.EQ.0) RETURN

C  OUTPUT PROGRAM ROCKMOD

      IF (LEVELC) THEN
         WRITE (NFOUT,*)
         TITU='ROCK MODIFICATION PROGRAM (ROCKMOD)'
         CALL PRTTIT(TITU)
         WRITE (NFOUT,*)
         CALL TBLKOUT(BLKBUF,L)
      ENDIF

C  COMPILE PROGRAM ROCKMOD

      KE=0
      CALL CMPDRV(BLKBUF(1),L,NPGR,.FALSE.,KE)
      IF (KE.NE.0) GO TO 13

C  EXECUTE PROGRAM ROCKMOD

C  HXPRMOD = FLAG INDICATING X PERMEABILITY WAS MODIFIED
      HPORMOD=.FALSE.
      HXPRMOD=.FALSE.
      HYPRMOD=.FALSE.
      HZPRMOD=.FALSE.
      ID(1)=5
      ID(2)=N_DEPTH
      ID(3)=N_POR
      ID(4)=N_XPERM
      ID(5)=N_YPERM
      ID(6)=N_ZPERM

$MPFA      IF (KNDGRD==3) THEN
CGUS ---- real*8 porosity for MFMFE discretization
$MPFA         CALL CALLWORK(DOROCK2,ID)
$MPFA      ELSE
         CALL CALLWORK(DOROCK,ID)
$MPFA      ENDIF

      IF (KE.NE.0) GO TO 13

      IF(HPORMOD) THEN
         TITU='MODIFIED POROSITY FOR FAULT BLOCK'
         CALL GEAOUT(N_POR,1,1)
      ENDIF
      IF(HXPRMOD) THEN
         TITU='MODIFIED X PERMEABILITY FOR FAULT BLOCK'
         CALL GEAOUT(N_XPERM,1,1)
      ENDIF
      IF(HYPRMOD) THEN
         TITU='MODIFIED Y PERMEABILITY FOR FAULT BLOCK'
         CALL GEAOUT(N_YPERM,1,1)
      ENDIF
      IF(HZPRMOD) THEN
         TITU='MODIFIED Z PERMEABILITY FOR FAULT BLOCK'
         CALL GEAOUT(N_ZPERM,1,1)
      ENDIF

      RETURN

   13 NERR=NERR+1

      END
C*********************************************************************
      SUBROUTINE DODEPTH (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,
     &                    KL2,KEYOUT,NBLK,DEPTH)
C*********************************************************************

C  Modifies DEPTH array according to user supplied code.

C  DEPTH(I,J,K) = Grid-element depth array (input and output, REAL*8)
C*********************************************************************
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'layout.h'
      INCLUDE 'rockpg.h'

      REAL*8 DEPTH(IDIM,JDIM,KDIM)
      INTEGER JL1V(KDIM),JL2V(KDIM),KEYOUT(IDIM,JDIM,KDIM)

      CALL BLKDIM(NBLK,ID,JD,KD,MERR)
      CALL BLKOFF(NBLK,IOFF,JOFF,KOFF,MERR)
      RNBLK=NBLK
      RNBLK=RNBLK+1.D-6

      DO 1 K=1,KDIM
      KG=K+KOFF
      IF (KG.GT.0.AND.KG.LE.KD) THEN
         DO 2 J=1,JDIM
         JG=J+JOFF
         IF (JG.GT.0.AND.JG.LE.JD) THEN
            DO 3 I=1,IDIM
            IG=I+IOFF
            IF (IG.GT.0.AND.IG.LE.ID) THEN
               X=.5D0*(XREC(IG,NBLK)+XREC(IG+1,NBLK))
               Y=.5D0*(YREC(JG,NBLK)+YREC(JG+1,NBLK))
               Z=.5D0*(ZREC(KG,NBLK)+ZREC(KG+1,NBLK))
               DEP=DEPTH(I,J,K)
               CALL EXCDRV(NPGD,KE)
               IF (KE.NE.0) THEN
                  IF (LEVERR.LT.3) LEVERR=3
                  IF (LEVELC) WRITE (NFOUT,4)
                  RETURN
               ENDIF
    4          FORMAT(' ERROR # 418, USER PROGRAM ERROR IN DEPTHMOD')
               DEPTH(I,J,K)=DEP
            ENDIF
    3       CONTINUE
         ENDIF
    2    CONTINUE
      ENDIF
    1 CONTINUE

      END
C*********************************************************************
      SUBROUTINE DOROCK (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,
     &                   KL2,KEYOUT,NBLK,DEPTH,POR,XPERM,YPERM,ZPERM)
C*********************************************************************

C  Modifies porosity and permeability arrays according to user supplied code.

C  DEPTH(I,J,K) = Depth array (input, REAL*8)

C  POR(I,J,K) = Porosity array (input and output, REAL*4)

C  XPERM(I,J,K) = Permeability arrays (input and output, REAL*8)

C  Note: The DEPTH array may be used in the program but may not be modified
C        since well depths are not modified by this program.
C*********************************************************************
$POWER      INCLUDE 'msjunk.h'

      INCLUDE 'control.h'
      INCLUDE 'layout.h'
      INCLUDE 'rockpg.h'

      REAL*8 DEPTH(IDIM,JDIM,KDIM)
      REAL*4 XPERM(IDIM,JDIM,KDIM),YPERM(IDIM,JDIM,KDIM),
     & ZPERM(IDIM,JDIM,KDIM),POR(IDIM,JDIM,KDIM)
      INTEGER JL1V(KDIM),JL2V(KDIM),KEYOUT(IDIM,JDIM,KDIM)

      CALL BLKDIM(NBLK,ID,JD,KD,MERR)
      CALL BLKOFF(NBLK,IOFF,JOFF,KOFF,MERR)
      RNBLK=NBLK
      RNBLK=RNBLK+1.D-6

      DO 1 K=1,KDIM
      KG=K+KOFF
      IF (KG.GT.0.AND.KG.LE.KD) THEN
         DO 2 J=1,JDIM
         JG=J+JOFF
         IF (JG.GT.0.AND.JG.LE.JD) THEN
            DO 3 I=1,IDIM
            IG=I+IOFF
            IF (IG.GT.0.AND.IG.LE.ID) THEN
               X=.5D0*(XREC(IG,NBLK)+XREC(IG+1,NBLK))
               Y=.5D0*(YREC(JG,NBLK)+YREC(JG+1,NBLK))
               Z=.5D0*(ZREC(KG,NBLK)+ZREC(KG+1,NBLK))
               DEP=DEPTH(I,J,K)
               PORP=POR(I,J,K)
               XPERMP=XPERM(I,J,K)
               YPERMP=YPERM(I,J,K)
               ZPERMP=ZPERM(I,J,K)
               CALL EXCDRV(NPGR,KE)

               IF (KE.NE.0) THEN
                  IF (LEVERR.LT.3) LEVERR=3
                  IF (LEVELC) WRITE (NFOUT,4)
                  RETURN
               ENDIF
    4          FORMAT(' ERROR # 418, USER PROGRAM ERROR IN ROCKMOD')

               IF (ABS(PORP-POR(I,J,K)).GT..00001) HPORMOD=.TRUE.
               IF (ABS(XPERMP-XPERM(I,J,K)).GT..001) HXPRMOD=.TRUE.
               IF (ABS(YPERMP-YPERM(I,J,K)).GT..001) HYPRMOD=.TRUE.
               IF (ABS(ZPERMP-ZPERM(I,J,K)).GT..001) HZPRMOD=.TRUE.
               POR(I,J,K)=PORP
               XPERM(I,J,K)=XPERMP
               YPERM(I,J,K)=YPERMP
               ZPERM(I,J,K)=ZPERMP
            ENDIF
    3       CONTINUE
         ENDIF
    2    CONTINUE
      ENDIF
    1 CONTINUE

      END
